# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - '*'
    exclude:
    - azure-pipelines-1.yml
    - azure-pipelines-exo.yml
    - azure-pipelines.yml

pool:
  name: exo
  demands: ServiceAccount
    
variables:
  solution: '**/WpfApp.sln'
  buildPlatform: 'x86'
  buildConfiguration: 'Release'
  HtmlHelpOutputPath: $(Build.BinariesDirectory)/Docs/HtmlHelp
  MSHelpOutputPath: $(Build.BinariesDirectory)/Docs/MSHelp
  SiteOutputPath: $(Build.BinariesDirectory)/Docs/Site

steps:
- checkout: self
  submodules: recursive
  persistCredentials: true

- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    restoreSolution: '$(solution)'

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    clean: false
    createLogFile: true
    logFileVerbosity: 'detailed'

- task: CopyFiles@2
  inputs:
    Contents: 'WpfApp/bin/$(BuildPlatform)/$(BuildConfiguration)/*.xml'
    TargetFolder: '$(Build.StagingDirectory)/XmlDocs'
    CleanTargetFolder: true
    flattenFolders: true
    preserveTimestamp: true

- task: CopyFiles@2
  inputs:
    Contents: 'KayMcCormick*/*/bin/$(BuildPlatform)/$(BuildConfiguration)/*.xml'
    TargetFolder: '$(Build.StagingDirectory)/XmlDocs'
    flattenFolders: true
    preserveTimestamp: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.StagingDirectory)/XmlDocs'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true

- task: VSBuild@1
  inputs:
    solution: '*/*.shfbproj'
    platform: 'x86'
    configuration: 'Release'
    createLogFile: true
    logFileVerbosity: 'detailed'
    msbuildArgs: -P:OutputPath=$(HtmlHelpOutputPath) -P:HelpFileFormat=HtmlHelp1

- task: VSBuild@1
  inputs:
    solution: '*/*.shfbproj'
    platform: 'x86'
    configuration: 'Release'
    createLogFile: true
    logFileVerbosity: 'detailed'
    msbuildArgs: -P:OutputPath=$(SiteOutputPath) -P:HelpFileFormat=Website

- task: VSBuild@1
  inputs:
    solution: '*/*.shfbproj'
    platform: 'x86'
    configuration: 'Release'
    createLogFile: true
    logFileVerbosity: 'detailed'
    msbuildArgs: -P:OutputPath=$(MSHelpOutputPath) -P:HelpFileFormat=MSHelpViewer

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    artifact: 'XmlDocs'
    publishLocation: 'pipeline'

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(HtmlHelpOutputPath)' 
    includeRootFolder: true 
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Docs-HtmlHelp-$(Build.BuildId).zip' 
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(MSHelpOutputPath)' 
    includeRootFolder: true 
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Docs-MSHelp-$(Build.BuildId).zip' 
    verbose: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(SiteOutputPath)' 
    includeRootFolder: true 
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/Docs-Site-$(Build.BuildId).zip' 
    verbose: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/Docs-Site-$(Build.BuildId).zip'
    artifact: 'HTML Help Dist'
    publishLocation: 'pipeline'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/Docs-MSHelp-$(Build.BuildId).zip'
    artifact: 'MSHelp Dist'
    publishLocation: 'pipeline'
- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/Docs-Site-$(Build.BuildId).zip'
    artifact: 'Site Dist'
    publishLocation: 'pipeline'
