# Starter pipeline

# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - '*'
    exclude:
    - azure-pipelines-1.yml
    - azure-pipelines-exo.yml
    - azure-pipelines.yml

pool:
  name: exo
  workspace:
    clean: outputs | resources | all 
    
variables:
  buildPlatform: 'x86'
  buildConfiguration: 'Release'

steps:
- checkout: self
  submodules: recursive
  `persistCredentials: true

- task: NuGetToolInstaller@1
- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '*/*.csproj'
    feedsToUse: 'select'
    noCache: true    

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: 'KayMcCormick*/*/*.csproj'
    feedsToUse: 'select'
    noCache: true    

- task: MsBuildHelperTask@0
  inputs:
    variableName: 'MsBuildAdditionalArguments'
    MsBuildTargetCustom: 'restore;build'
    MsBuildBaseOutputPath: 'StagingDirectory'
    MsBuildOutputPath: 'StagingDirectory'
    TreatWarningsAsError: 'false'
    SkipInvalidConfigurations: 'true'
    GerenateDocumentation: 'true'
- task: MSBuild@1
  inputs:
    solution: '*/*.csproj'
    platform: 'x86'
    configuration: 'Release'
    restoreNugetPackages: false
    msbuildArguments: $(MsBuildAdditionalArguments)

- task: MSBuild@1
  inputs:
    solution: 'KayMcCormick*/*/*.csproj'
    platform: 'x86'
    configuration: 'Release'
    restoreNugetPackages: false
    msbuildArguments: $(MsBuildAdditionalArguments)

- task: CopyFiles@2
  inputs:
    Contents: 'WpfApp/bin/$(BuildPlatform)/$(BuildConfiguration)/*.xml'
    TargetFolder: '$(Build.StagingDirectory)/XmlDocs'
    CleanTargetFolder: true
    flattenFolders: true
    preserveTimestamp: true

- task: CopyFiles@2
  inputs:
    Contents: 'KayMcCormick*/*/bin/$(BuildPlatform)/$(BuildConfiguration)/*.xml'
    TargetFolder: '$(Build.StagingDirectory)/XmlDocs'
    flattenFolders: true
    preserveTimestamp: true

- task: ArchiveFiles@2
  inputs:
    rootFolderOrFile: '$(Build.StagingDirectory)/XmlDocs'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true
    verbose: true

- task: PublishPipelineArtifact@1
  inputs:
    targetPath: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    artifact: 'XmlDocs'
    publishLocation: 'pipeline'

- task: PublishGitHubRelease@0
  inputs:
    applicationName: 'Azure1'
    gitSourceOption: 'github'
    token: 'e3wuyitcvypnjwcu2yxxeewe7rxfqdxzuegx3thtpuf2t47chgba'
    repo: 'WpfApp'
    owner: 'kaymccormick'
    tagName: 'v$(build.buildNumber)'
    releaseName: 'XmlDocs-v$(build.buildNumber)'
    assetsPattern: '''$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'''


- task: UploadFilesToSPDocLib@1
  inputs:
    spUrl: 'https://satoridev.sharepoint.com/Builds/Forms/AllItems.aspx'
    targetFolder: 'XmlDocs'
    login: 'kay@satoridev.onmicrosoft.com'
    password: 'So8XuY#WCu6@b#Y@'
    filesToUpload: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
