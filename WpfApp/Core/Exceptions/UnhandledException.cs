#region header
// Kay McCormick (mccor)
// 
// WpfApp
// WpfApp
// UnhandledException.cs
// 
// 2020-02-10-1:27 PM
// 
// ---
#endregion
using System ;
using System.Runtime.Serialization ;
using DynamicData.Annotations ;

namespace WpfApp.Core.Exceptions
{
    /// <summary>Application unhandled exception</summary>
    /// <seealso cref="System.Exception" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for UnhandledException
    [ Serializable ]
    public class UnhandledException : Exception
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="System.Exception" />
        ///     class.
        /// </summary>
        // ReSharper disable once UnusedMember.Global
        public UnhandledException ( ) { }

        /// <summary>
        ///     Initializes a new instance of the <see cref="System.Exception" />
        ///     class with a specified error message.
        /// </summary>
        /// <param name="message">The message that describes the error.</param>
        public UnhandledException ( string message ) : base ( message ) { }

        /// <summary>
        ///     Initializes a new instance of the <see cref="System.Exception" />
        ///     class with a specified error message and a reference to the inner
        ///     exception
        ///     that is the cause of this exception.
        /// </summary>
        /// <param name="message">
        ///     The error message that explains the reason for the
        ///     exception.
        /// </param>
        /// <param name="innerException">
        ///     The exception that is the cause of the current
        ///     exception, or a null reference (<see langword="Nothing" /> in Visual
        ///     Basic)
        ///     if no inner exception is specified.
        /// </param>
        public UnhandledException ( string message , Exception innerException ) : base (
                                                                                        message
                                                                                      , innerException
                                                                                       )
        {
        }

        /// <summary>
        ///     Initializes a new instance of the <see cref="System.Exception" />
        ///     class with serialized data.
        /// </summary>
        /// <param name="info">
        ///     The
        ///     <see cref="System.Runtime.Serialization.SerializationInfo" /> that
        ///     holds
        ///     the serialized object data about the exception being thrown.
        /// </param>
        /// <param name="context">
        ///     The
        ///     <see cref="System.Runtime.Serialization.StreamingContext" /> that
        ///     contains contextual information about the source or destination.
        /// </param>
        /// <exception cref="T:System.ArgumentNullException">
        ///     <paramref name="info" /> is <see langword="null" />.
        /// </exception>
        /// <exception cref="T:System.Runtime.Serialization.SerializationException">
        ///     The
        ///     class name is <see langword="null" /> or
        ///     <see cref="P:System.Exception.HResult" /> is zero (0).
        /// </exception>
        protected UnhandledException (
            [ NotNull ] SerializationInfo info
          , StreamingContext              context
        ) : base ( info , context )
        {
        }
    }
}