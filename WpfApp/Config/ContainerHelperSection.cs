using System;
using System.Collections.Generic;
using System.Configuration;
using System.Diagnostics ;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using WpfApp.Common.Utils ;

namespace WpfApp.Config
{
    /// <summary></summary>
    /// <seealso cref="System.Configuration.ConfigurationSection" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for Section1
    [ConfigTarget(typeof ( ContainerHelperSettings ))]
    public class ContainerHelperSection : ConfigurationSection
    {
        /// <summary>Gets or sets a value indicating whether [do interception].</summary>
        /// <value>
        ///   <c>true</c> if [do interception]; otherwise, <c>false</c>.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for DoInterception
        [ConfigurationProperty("DoInterception", DefaultValue = false, IsRequired = false, IsKey = true)]
        public bool DoInterception { get => ( bool ) this[ "DoInterception" ] ; set => this["DoInterception"] = value; }

        /// <summary>Gets or sets a value indicating whether [do trace conditional registration].</summary>
        /// <value>
        ///   <c>true</c> if [do trace conditional registration]; otherwise, <c>false</c>.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for DoTraceConditionalRegistration
        [ConfigurationProperty("DoTraceConditionalRegistration", DefaultValue = false, IsRequired = false, IsKey = true)]
        public bool DoTraceConditionalRegistration
        {
            get
            {
                var o = this[ "DoTraceConditionalRegistration " ] ;
                if ( o == null ) Debug.WriteLine ( "o is null" ) ;
                return o != null && (bool)o;
            }
            set => this[ "DoTraceConditionalRegistration" ] = value ;
        }
    }

    /// <summary></summary>
    /// <seealso cref="System.Attribute" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for ConfigTargetAttribute
    public class ConfigTargetAttribute : Attribute
    {
        /// <summary>Initializes a new instance of the <see cref="T:System.Attribute" /> class.</summary>
        public ConfigTargetAttribute ( Type targetType ) { TargetType = targetType ; }

        /// <summary>Gets or sets the type of the target.</summary>
        /// <value>The type of the target.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for TargetType
        public Type TargetType { get ; set ; }
    }
}
