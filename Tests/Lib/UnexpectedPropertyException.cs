using System ;
using System.Reflection ;
using System.Runtime.Serialization;

namespace Tests.Lib
{
    /// <summary></summary>
    /// <seealso cref="System.Exception" />
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for UnexpectedPropertyException
    [Serializable]
    public class UnexpectedPropertyException : Exception
    {
        /// <summary>Gets a message that describes the current exception.</summary>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for Message
        public override string Message { get ; }

        /// <summary>Gets the member information.</summary>
        /// <value>The member information.</value>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for MemberInfo
        // ReSharper disable once UnusedAutoPropertyAccessor.Global
        public MemberInfo MemberInfo { get ; }

        /// <summary>Initializes a new instance of the <see cref="UnexpectedPropertyException"/> class.</summary>
        /// <param name="message">The message.</param>
        /// <param name="memberInfo">The member information.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public UnexpectedPropertyException ( string message , MemberInfo memberInfo )
        {
            Message   = message ;
            MemberInfo = memberInfo ;
        }

        /// <summary>When overridden in a derived class, sets the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with information about the exception.</summary>
        /// <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> that holds the serialized object data about the exception being thrown.</param>
        /// <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext"/> that contains contextual information about the source or destination.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for GetObjectData
        public override void GetObjectData(SerializationInfo info, StreamingContext context)
        {
            base.GetObjectData ( info , context ) ;
            info.AddValue ( "MemberInfo" , MemberInfo ) ;
        }
    }
}