using System.Diagnostics ;
using System.IO ;
using System.Runtime.CompilerServices ;
using NLog ;
using Xunit.Abstractions ;

namespace Tests.Lib.Utils
{
    public class OutputHelperWrapper : ITestOutputHelper
#pragma warning restore 1591
    {
        private readonly Logger            _logger ;
        private readonly ITestOutputHelper _output ;

        /// <summary>
        ///     Initializes a new instance of the
        ///     <see cref="OutputHelperWrapper" /> class.
        /// </summary>
        /// <param name="output">The output.</param>
        /// <param name="filePath">The file path.</param>
        /// <autogeneratedoc />
        /// TODO Edit XML Comment Template for #ctor
        public OutputHelperWrapper (
            ITestOutputHelper         output
          , [ CallerFilePath ] string filePath = ""
        )
        {
            _output = output ;
            _logger = LogManager.LogFactory.GetLogger < Logger > (
                                                                  Path.GetFileNameWithoutExtension (
                                                                                                    filePath
                                                                                                   )
                                                                 ) ;
        }

        /// <summary>Adds a line of text to the output.</summary>
        /// <param name="message">The message</param>
        public void WriteLine ( string message )
        {
            _output.WriteLine ( message ) ;
            Debug.WriteLine ( message ) ;
            _logger.Debug ( message ) ;
        }

        /// <summary>Formats a line of text and adds it to the output.</summary>
        /// <param name="format">The message format</param>
        /// <param name="args">The format arguments</param>
        public void WriteLine ( string format , params object[] args )
        {
            _output.WriteLine ( format , args ) ;
            Debug.WriteLine ( format , args ) ;
            _logger.Debug ( format , args ) ;
        }
    }
}