using System ;
using System.Diagnostics ;
using System.Threading.Tasks ;
using JetBrains.Annotations ;
using WpfApp.Core.Logging ;
using Xunit ;
using Xunit.Abstractions ;
using DiagnosticMessage = Xunit.Sdk.DiagnosticMessage ;

namespace Tests.Lib.Fixtures
{
    /// <summary></summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for LoggingFixture
    [ UsedImplicitly ]
    public class LoggingFixture : IDisposable
    {
        private ITestOutputHelper outputHelper;

        public ITestOutputHelper GetOutputHelper() => outputHelper;

        public void SetOutputHelper ( ITestOutputHelper value )
        {
            if(_xunitTarget != null)
            {
             AppLoggingConfigHelper.RemoveTarget(_xunitTarget);                   _xunitTarget.Dispose();
            }
            outputHelper = value ;
            _xunitTarget = new XunitTarget("Xunit"){ OutputHelper = value};
            AppLoggingConfigHelper.AddTarget(_xunitTarget);
        }

        private XunitTarget _xunitTarget ;

        /// <summary>
        ///     Initializes a new instance of the <see cref="T:System.Object" />
        ///     class.
        /// </summary>
        public LoggingFixture ( IMessageSink sink )
        {
            Sink = sink ;
            sink.OnMessage ( new Xunit.DiagnosticMessage ( "Constructing LoggingFixture." ) ) ;
            // _xunitSinkTarget = new XunitSinkTarget ( "Xunitsink" ) { Sink = sink } ;
            // AppLoggingConfigHelper.AddTarget ( _xunitSinkTarget )
            //
        }



        private IMessageSink Sink { get ; }

        // ReSharper disable once IdentifierTypo
        private void LogMethod ( string message )
        {
            Sink.OnMessage ( new DiagnosticMessage ( message ) ) ;
            Debug.WriteLine ( message ) ;
        }

        /// <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
        public void Dispose ( )
        {
            if ( _xunitTarget != null )
            {
                AppLoggingConfigHelper.RemoveTarget ( _xunitTarget ) ;
                _xunitTarget.Dispose ( ) ;
            }
        }
    }
}