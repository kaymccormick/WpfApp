#region header
// Kay McCormick (mccor)
// 
// WpfApp
// Tests
// GlobalLoggingFixture.cs
// 
// 2020-02-06-3:12 AM
// 
// ---
#endregion
using System.Threading.Tasks ;
using JetBrains.Annotations ;
using NLog ;
using WpfApp.Core.Logging ;
using Xunit ;
using Xunit.Abstractions ;

namespace Tests.Lib.Fixtures
{
    /// <summary></summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for LoggingFixture
    [ UsedImplicitly ]
    public class GlobalLoggingFixture : IAsyncLifetime
    {
        private readonly XunitSinkTarget _xunitSinkTarget ;
        private static readonly Logger          Logger = LogManager.GetCurrentClassLogger ( ) ;

        /// <summary>
        ///     Initializes a new instance of the <see cref="T:System.Object" />
        ///     class.
        /// </summary>
        public GlobalLoggingFixture ( IMessageSink sink )
        {
            AppLoggingConfigHelper.EnsureLoggingConfigured (
                                                            message => sink.OnMessage (
                                                                                       new DiagnosticMessage (
                                                                                                              message
                                                                                                             )
                                                                                      )
                                                           ) ;

            var l = AppLoggingConfigHelper.SetupJsonLayout ( ) ;

            sink.OnMessage (
                            new DiagnosticMessage ( "Constructing GlobalLoggingFixture." )
                           ) ;
            _xunitSinkTarget = new XunitSinkTarget ( "Xunitsink" )
                               {
                                   Sink = sink
                                 , Layout = l
                               } ;
            AppLoggingConfigHelper.AddTarget ( _xunitSinkTarget ) ;
            Logger.Warn ( $"{nameof ( GlobalDiagnosticsContext )} logger added." ) ;
        }

        // ReSharper disable once IdentifierTypo

        /// <summary>
        /// Called immediately after the class has been created, before it is used.
        /// </summary>
        public Task InitializeAsync ( ) { return Task.CompletedTask ; }

        /// <summary>
        /// Called when an object is no longer needed. Called just before <see cref="M:System.IDisposable.Dispose" />
        /// if the class also implements that.
        /// </summary>
        public Task DisposeAsync ( )
        {
            AppLoggingConfigHelper.RemoveTarget ( _xunitSinkTarget.Name ) ;
            return Task.CompletedTask ;
        }
    }
}