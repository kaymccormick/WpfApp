using Autofac ;
using Tests.Lib.Attributes ;
using WpfApp.Core.Interfaces ;
using WpfApp.Modules ;
using Xunit ;
using Xunit.Abstractions ;

namespace Tests.Main
{
    /// <summary></summary>
    /// <autogeneratedoc />
    /// TODO Edit XML Comment Template for TestIdGeneratorModule
    [ LogTestMethod , BeforeAfterLogger ]
    public class TestIdGeneratorModule
    {
        /// <summary>
        ///     Initializes a new instance of the <see cref="T:System.Object" />
        ///     class.
        /// </summary>
        public TestIdGeneratorModule ( ITestOutputHelper output ) { _output = output ; }

        private readonly ITestOutputHelper _output ;

        private static IContainer Setup ( )
        {
            var b = new ContainerBuilder ( ) ;
            b.RegisterModule ( new IdGeneratorModule ( ) ) ;
            b.RegisterType < MyService > ( ).AsSelf ( ) ;
            var container = b.Build ( ) ;
            return container ;
        }

        [ Fact ]
        public void Test1 ( )
        {
            var container = Setup ( ) ;
            var myService = container.Resolve < MyService > ( ) ;
            _output.WriteLine ( myService.ToString ( ) ) ;

            var idProvider = container.Resolve < IObjectIdProvider > ( ) ;
            foreach ( var q in idProvider.GetObjectInstances ( ) )
            {
                var id = idProvider.ProvideObjectInstanceIdentifier ( q , null , null ) ;
                _output.WriteLine ( $"{q} = {id}" ) ;
            }
        }
    }
}