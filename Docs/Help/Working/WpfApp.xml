<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>WpfApp</name>
  </assembly>
  <members>
    <member name="N:WpfApp">
      <summary>Root namespace for the WPF application infrastructure.</summary>
    </member>
    <member name="T:WpfApp.Application.ExitCode">
      <summary>Exit status of application.</summary>
    </member>
    <member name="F:WpfApp.Application.ExitCode.Success">
      <summary>Successful exit.</summary>
    </member>
    <member name="F:WpfApp.Application.ExitCode.GeneralError">
      <summary>General error.</summary>
    </member>
    <member name="F:WpfApp.Application.ExitCode.ArgumentsError">
      <summary>Invalid arguments to application.</summary>
    </member>
    <member name="T:WpfApp.Application.App">
      <summary>
                Interaction logic for App.xaml
            </summary>
      <summary>
            App
            </summary>
    </member>
    <member name="T:WpfApp.Application.App.OnDebugMessageRaised">
      <summary>
      </summary>
      <param name="sender">The sender.</param>
      <param name="args">
                The <see cref="T:WpfApp.Debug.DebugEventArgs" /> instance containing the
                event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnDebugMessageRaised
        </member>
    <member name="M:WpfApp.Application.App.#ctor(System.EventHandler{WpfApp.Debug.DebugEventArgs})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Application.App" /> class.</summary>
      <param name="debugEventHandler">The debug event handler.</param>
    </member>
    <member name="P:WpfApp.Application.App.ConfigSettings">
      <summary>Gets the configuration settings.</summary>
      <value>The configuration settings.</value>
    </member>
    <member name="P:WpfApp.Application.App.TCS">
      <summary>Gets the task completion source.</summary>
      <value>The TCS.</value>
    </member>
    <member name="P:WpfApp.Application.App.Stage2Complete">
      <summary>Gets or sets a value indicating whether [stage2 complete].</summary>
      <value>
        <see language="true" /> if [stage2 complete]; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Stage2Complete
        </member>
    <member name="P:WpfApp.Application.App.Initialized">
      <summary>
                Gets or sets a value indicating whether this <see cref="T:WpfApp.Application.App" /> is
                initialized.
            </summary>
      <value>
        <see language="true" /> if initialized; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Initialized
        </member>
    <member name="P:WpfApp.Application.App.ShowMainWindow">
      <summary>Gets or sets a value indicating whether [show main window].</summary>
      <value>
        <see language="true" /> if [show main window]; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ShowMainWindow
        </member>
    <member name="P:WpfApp.Application.App.DoTracing">
      <summary>Gets a value indicating whether [do tracing].</summary>
      <value>
        <see language="true" /> if [do tracing]; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoTracing
        </member>
    <member name="P:WpfApp.Application.App.MenuItemListCollectionView">
      <summary>Gets or sets the menu item list collection view.</summary>
      <value>The menu item list collection view.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuItemListCollectionView
        </member>
    <member name="P:WpfApp.Application.App.DispatcherOp">
      <summary>Gets or sets the dispatcher op.</summary>
      <value>The dispatcher op.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DispatcherOp
        </member>
    <member name="P:WpfApp.Application.App.ProcessArgs">
      <summary>
                Whether the application should process command line arguments. used
                for testing.
            </summary>
      <value>
        <see language="true" /> if [process arguments]; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProcessArgs
        </member>
    <member name="M:WpfApp.Application.App.Dispose">
      <summary>
                Performs application-defined tasks associated with freeing,
                releasing, or resetting unmanaged resources.
            </summary>
    </member>
    <member name="E:WpfApp.Application.App.DebugMessage">
      <summary>Event for a debug event.</summary>
    </member>
    <member name="M:WpfApp.Application.App.OnStartup(System.Windows.StartupEventArgs)">
      <summary>
                Raises the <see cref="E:System.Windows.Application.Startup" />
                event.
            </summary>
      <param name="e">
                A <see cref="T:System.Windows.StartupEventArgs" /> that
                contains the event data.
            </param>
    </member>
    <member name="M:WpfApp.Application.App.DoOnStartup(System.String[])">
      <summary>Does the on startup.</summary>
      <param name="args">The arguments.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoOnStartup
        </member>
    <member name="M:WpfApp.Application.App.OnDebugMessage(WpfApp.Debug.DebugEventArgs)">
      <summary>Raises the <see cref="E:WpfApp.Application.App.DebugMessage" /> event.</summary>
      <param name="e">
                The <see cref="T:WpfApp.Debug.DebugEventArgs" /> instance containing the
                event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnDebugMessage
        </member>
    <member name="M:WpfApp.Application.App.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="M:WpfApp.Application.App.Main">
      <summary>
            Application Entry Point.
            </summary>
    </member>
    <member name="T:WpfApp.Config.ConfigTargetAttribute">
      <summary>
      </summary>
      <seealso cref="T:System.Attribute" />
      <autogeneratedoc />
             TODO Edit XML Comment Template for ConfigTargetAttribute
            
        </member>
    <member name="M:WpfApp.Config.ConfigTargetAttribute.#ctor(System.Type)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Config.ConfigTargetAttribute" /> class.</summary>
      <param name="targetType">
      </param>
    </member>
    <member name="P:WpfApp.Config.ConfigTargetAttribute.TargetType">
      <summary>Gets or sets the type of the target.</summary>
      <value>The type of the target.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetType
        </member>
    <member name="T:WpfApp.Config.ContainerHelperSection">
      <summary>Configuration section handler for container helper settings.</summary>
      <seealso cref="T:System.Configuration.ConfigurationSection" />
    </member>
    <member name="P:WpfApp.Config.ContainerHelperSection.DoInterception">
      <summary>Gets or sets a value indicating whether [do interception].</summary>
      <value>
        <see language="true" /> if [do interception]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoInterception
        </member>
    <member name="P:WpfApp.Config.ContainerHelperSection.DoTraceConditionalRegistration">
      <summary>Gets or sets a value indicating whether [do trace conditional registration].</summary>
      <value>
        <see language="true" /> if [do trace conditional registration]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoTraceConditionalRegistration
        </member>
    <member name="T:WpfApp.Config.LoggingSection">
      <summary>Configuration section handler for container helper settings.</summary>
      <seealso cref="T:System.Configuration.ConfigurationSection" />
    </member>
    <member name="T:WpfApp.Config.LoggerSettings">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerSettings
        </member>
    <member name="N:WpfApp.Config">
      <summary>Configuration elements.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="T:WpfApp.Controls.AllResourcesControl">
      <summary>
            Interaction logic for AllResourcesControl.xaml
            </summary>
      <summary>
            AllResourcesControl
            </summary>
    </member>
    <member name="M:WpfApp.Controls.AllResourcesControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.AllResourcesControl" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.AllResourcesControl.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="N:WpfApp.Controls">
      <summary>Namespace for WPF Controls</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="T:WpfApp.Controls.Container">
      <summary>
                Interaction logic for Container.xaml
            </summary>
      <summary>
            Container
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Container.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.Container" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.Container.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.SystemParametersControl">
      <summary>
            Interaction logic for SystemParametersControl.xaml
            </summary>
      <summary>
            SystemParametersControl
            </summary>
    </member>
    <member name="M:WpfApp.Controls.SystemParametersControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.SystemParametersControl" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.SystemParametersControl.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.SysProp">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SysProp
        </member>
    <member name="P:WpfApp.Controls.SysProp.FocusBorderWidth">
      <summary>Gets the width, in pixels, of the left and right edges of the focus rectangle.  </summary>
      <returns>The edge width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusBorderHeight">
      <summary>Gets the height, in pixels, of the upper and lower edges of the focus rectangle.  </summary>
      <returns>The edge height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HighContrast">
      <summary>Gets information about the High Contrast accessibility feature. </summary>
      <returns>
        <see langword="true" /> if the <value>HIGHCONTRASTON</value> option is selected; otherwise,<see langword=" false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusBorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusBorderHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HighContrastKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HighContrast" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.DropShadow">
      <summary>Gets a value indicating whether the drop shadow effect is enabled. </summary>
      <returns>
        <see langword="true" /> if the drop shadow effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FlatMenu">
      <summary>Gets a value indicating whether native menus appear as a flat menu.  </summary>
      <returns>
        <see langword="true" /> if the flat menu appearance is set; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WorkArea">
      <summary>Gets the size of the work area on the primary display monitor. </summary>
      <returns>A <see langword="RECT" /> structure that receives the work area coordinates, expressed as virtual screen coordinates.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.DropShadowKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.DropShadow" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FlatMenuKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FlatMenu" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WorkAreaKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WorkArea" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconHorizontalSpacing">
      <summary>Gets the width, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view. </summary>
      <returns>The width of an icon cell.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconVerticalSpacing">
      <summary>Gets the height, in pixels, of an icon cell. The system uses this rectangle to arrange icons in large icon view. </summary>
      <returns>The height of an icon cell.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconTitleWrap">
      <summary>Gets a value indicating whether icon-title wrapping is enabled. </summary>
      <returns>
        <see langword="true" /> if icon-title wrapping is enabled; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconHorizontalSpacingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconHorizontalSpacing" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconVerticalSpacingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconVerticalSpacing" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconTitleWrapKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconTitleWrap" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardCues">
      <summary>Gets a value indicating whether menu access keys are always underlined. </summary>
      <returns>
        <see langword="true" /> if menu access keys are always underlined; <see langword="false" /> if they are underlined only when the menu is activated by the keyboard.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardDelay">
      <summary>Gets the keyboard repeat-delay setting, which is a value in the range from 0 (approximately 250 milliseconds delay) through 3 (approximately 1 second delay). </summary>
      <returns>The keyboard repeat-delay setting.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardPreference">
      <summary>Gets a value indicating whether the user relies on the keyboard instead of the mouse, and whether the user wants applications to display keyboard interfaces that are typically hidden. </summary>
      <returns>
        <see langword="true" /> if the user relies on the keyboard; otherwise,<see langword=" false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardSpeed">
      <summary>Gets the keyboard repeat-speed setting, which is a value in the range from 0 (approximately 2.5 repetitions per second) through 31 (approximately 30 repetitions per second). </summary>
      <returns>The keyboard repeat-speed setting.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SnapToDefaultButton">
      <summary>Gets a value indicating whether the snap-to-default button is enabled. If enabled, the mouse cursor automatically moves to the default button of a dialog box, such as OK or Apply.  </summary>
      <returns>
        <see langword="true" /> when the feature is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WheelScrollLines">
      <summary>Gets a value that indicates the number of lines to scroll when the mouse wheel is rotated. </summary>
      <returns>The number of lines.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MouseHoverTime">
      <summary>Gets the time, in milliseconds, that the mouse pointer must remain in the hover rectangle to generate a mouse-hover event.  </summary>
      <returns>The time, in milliseconds, that the mouse must be in the hover rectangle to generate a mouse-hover event.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MouseHoverHeight">
      <summary>Gets the height, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event. </summary>
      <returns>The height of a rectangle used for a mouse-hover event.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MouseHoverWidth">
      <summary>Gets the width, in pixels, of the rectangle within which the mouse pointer has to stay to generate a mouse-hover event.  </summary>
      <returns>The width of a rectangle used for a mouse-hover event.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardCuesKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardCues" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardDelayKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardDelay" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardPreferenceKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardPreference" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KeyboardSpeedKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KeyboardSpeed" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SnapToDefaultButtonKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SnapToDefaultButton" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WheelScrollLinesKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WheelScrollLines" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MouseHoverTimeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MouseHoverTime" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MouseHoverHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MouseHoverHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MouseHoverWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MouseHoverWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuDropAlignment">
      <summary>Gets a value indicating whether pop-up menus are left-aligned or right-aligned, relative to the corresponding menu item. </summary>
      <returns>
        <see langword="true" /> if left-aligned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuFade">
      <summary>Gets a value indicating whether menu fade animation is enabled. </summary>
      <returns>
        <see langword="true" /> when fade animation is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuShowDelay">
      <summary>Gets the time, in milliseconds, that the system waits before displaying a shortcut menu when the mouse cursor is over a submenu item.  </summary>
      <returns>The delay time.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuDropAlignmentKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuDropAlignment" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuFadeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuFade" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuShowDelayKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuShowDelay" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ComboBoxPopupAnimation">
      <summary>Gets the system value of the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> property for combo boxes. </summary>
      <returns>A pop-up animation value.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ComboBoxAnimation">
      <summary>Gets a value indicating whether the slide-open effect for combo boxes is enabled. </summary>
      <returns>
        <see langword="true" /> for enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ClientAreaAnimation">
      <summary>Gets a value indicating whether the client area animation feature is enabled.</summary>
      <returns>A Boolean value; true if client area animation is enabled, false otherwise.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CursorShadow">
      <summary>Gets a value indicating whether the cursor has a shadow around it. </summary>
      <returns>
        <see langword="true" /> if the shadow is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.GradientCaptions">
      <summary>Gets a value indicating whether the gradient effect for window title bars is enabled. </summary>
      <returns>
        <see langword="true" /> if the gradient effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HotTracking">
      <summary>Gets a value indicating whether hot tracking of user-interface elements, such as menu names on menu bars, is enabled. </summary>
      <returns>
        <see langword="true" /> if hot tracking is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ListBoxSmoothScrolling">
      <summary>Gets a value indicating whether the smooth-scrolling effect for list boxes is enabled. </summary>
      <returns>
        <see langword="true" /> if the smooth-scrolling effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuPopupAnimation">
      <summary>Gets the system value of the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> property for menus. </summary>
      <returns>The pop-up animation property.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuAnimation">
      <summary>Gets a value indicating whether the menu animation feature is enabled. </summary>
      <returns>
        <see langword="true" /> if menu animation is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SelectionFade">
      <summary>Gets a value indicating whether the selection fade effect is enabled. </summary>
      <returns>
        <see langword="true" /> if the fade effect is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.StylusHotTracking">
      <summary>Gets a value indicating whether hot tracking of a stylus is enabled.  </summary>
      <returns>
        <see langword="true" /> if hot tracking of a stylus is enabled; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ToolTipPopupAnimation">
      <summary>Gets the system value of the <see cref="P:System.Windows.Controls.Primitives.Popup.PopupAnimation" /> property for ToolTips. </summary>
      <returns>A system value for the pop-up animation property.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ToolTipAnimation">
      <summary>Gets a value indicating whether <see cref="T:System.Windows.Controls.ToolTip" /> animation is enabled.  </summary>
      <returns>
        <see langword="true" /> if ToolTip animation is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ToolTipFade">
      <summary>Gets a value indicating whether ToolTip animation uses a fade effect or a slide effect.  </summary>
      <returns>
        <see langword="true" /> if a fade effect is used; <see langword="false" /> if a slide effect is used.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.UIEffects">
      <summary>Gets a value that indicates whether all user interface (UI) effects are enabled.   </summary>
      <returns>
        <see langword="true" /> if all UI effects are enabled; <see langword="false" /> if they are disabled.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ComboBoxAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ComboBoxAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ClientAreaAnimationKey">
      <summary>Gets a <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ClientAreaAnimation" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CursorShadowKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CursorShadow" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.GradientCaptionsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.GradientCaptions" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HotTrackingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HotTracking" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ListBoxSmoothScrollingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ListBoxSmoothScrolling" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SelectionFadeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SelectionFade" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.StylusHotTrackingKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.StylusHotTracking" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ToolTipAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ToolTipAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ToolTipFadeKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ToolTipFade" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.UIEffectsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.UIEffects" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ComboBoxPopupAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ComboBoxPopupAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuPopupAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuPopupAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ToolTipPopupAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ToolTipPopupAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizeAnimation">
      <summary>Gets the animation effects associated with user actions. </summary>
      <returns>
        <see langword="true" /> if the minimize window animations feature is enabled; otherwise,<see langword=" false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.Border">
      <summary>Gets the border multiplier factor that determines the width of a window's sizing border. </summary>
      <returns>A multiplier.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CaretWidth">
      <summary>Gets the caret width, in pixels, for edit controls. </summary>
      <returns>The caret width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.DragFullWindows">
      <summary>Gets a value indicating whether dragging of full windows is enabled. </summary>
      <returns>
        <see langword="true" /> if dragging of full windows is enabled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ForegroundFlashCount">
      <summary>Gets the number of times the Set Foreground Window flashes the taskbar button when rejecting a foreground switch request.</summary>
      <returns>A flash count.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.BorderWidth">
      <summary>Gets the metric that determines the border width of the nonclient area of a nonminimized window. </summary>
      <returns>A border width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ScrollWidth">
      <summary>Gets the metric that determines the scroll width of the nonclient area of a nonminimized window. </summary>
      <returns>The scroll width, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ScrollHeight">
      <summary>Gets the metric that determines the scroll height of the nonclient area of a nonminimized window. </summary>
      <returns>The scroll height, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CaptionWidth">
      <summary>Gets the metric that determines the caption width for the nonclient area of a nonminimized window. </summary>
      <returns>The caption width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CaptionHeight">
      <summary>Gets the metric that determines the caption height for the nonclient area of a nonminimized window. </summary>
      <returns>The caption height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallCaptionWidth">
      <summary>Gets the metric that determines the width of the small caption of the nonclient area of a nonminimized window. </summary>
      <returns>The caption width, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallCaptionHeight">
      <summary>Gets the metric that determines the height of the small caption of the nonclient area of a nonminimized window. </summary>
      <returns>The caption height, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuWidth">
      <summary>Gets the metric that determines the width of the menu. </summary>
      <returns>The menu width, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuHeight">
      <summary>Gets the metric that determines the height of the menu. </summary>
      <returns>The menu height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizeAnimationKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizeAnimation" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.BorderKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.Border" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CaretWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CaretWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ForegroundFlashCountKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ForegroundFlashCount" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.DragFullWindowsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.DragFullWindows" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.BorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.BorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ScrollWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ScrollWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ScrollHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ScrollHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CaptionWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CaptionWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CaptionHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CaptionHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallCaptionWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallCaptionWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThinHorizontalBorderHeight">
      <summary>Gets a value that indicates the height, in pixels, of a horizontal window border. </summary>
      <returns>The height of a border.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThinVerticalBorderWidth">
      <summary>Gets a value that indicates the width, in pixels, of a vertical window border. </summary>
      <returns>The width of a border.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CursorWidth">
      <summary>Gets the width, in pixels, of a cursor. </summary>
      <returns>The cursor width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CursorHeight">
      <summary>Gets the height, in pixels, of a cursor. </summary>
      <returns>The cursor height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThickHorizontalBorderHeight">
      <summary>Gets a value that indicates the height, in pixels, of a 3-D border.   </summary>
      <returns>The height of a border.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThickVerticalBorderWidth">
      <summary>Gets a value that indicates the width, in pixels, of a 3-D border.   </summary>
      <returns>The width of a border.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumHorizontalDragDistance">
      <summary>Gets the width of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.  </summary>
      <returns>The width of the rectangle, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumVerticalDragDistance">
      <summary>Gets the height of a rectangle centered on a drag point to allow for limited movement of the mouse pointer before a drag operation begins.  </summary>
      <returns>The height of the rectangle, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FixedFrameHorizontalBorderHeight">
      <summary>Gets the height of the horizontal border of the frame around a window. </summary>
      <returns>The border height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FixedFrameVerticalBorderWidth">
      <summary>Gets the width of the vertical border of the frame around a window. </summary>
      <returns>The border width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusHorizontalBorderHeight">
      <summary>Gets the height of the upper and lower edges of the focus rectangle.  </summary>
      <returns>The edge height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusVerticalBorderWidth">
      <summary>Gets the width of the left and right edges of the focus rectangle.  </summary>
      <returns>The edge width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FullPrimaryScreenWidth">
      <summary>Gets the width, in pixels, of the client area for a full-screen window on the primary display monitor.  </summary>
      <returns>The width of the client area.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FullPrimaryScreenHeight">
      <summary>Gets the height, in pixels, of the client area for a full-screen window on the primary display monitor.  </summary>
      <returns>The height of the client area.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HorizontalScrollBarButtonWidth">
      <summary>Gets the width, in pixels, of the arrow bitmap on a horizontal scroll bar. </summary>
      <returns>The width of the arrow bitmap.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HorizontalScrollBarHeight">
      <summary>Gets the height of a horizontal scroll bar, in pixels. </summary>
      <returns>The height of the scroll bar.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HorizontalScrollBarThumbWidth">
      <summary>Gets the width, in pixels, of the <see cref="T:System.Windows.Controls.Primitives.Thumb" /> in a horizontal scroll bar. </summary>
      <returns>The width of the thumb.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconWidth">
      <summary>Gets the default width of an icon. </summary>
      <returns>The icon width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconHeight">
      <summary>Gets the default height of an icon. </summary>
      <returns>The icon height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconGridWidth">
      <summary>Gets the width of a grid that a large icon will fit into. </summary>
      <returns>The grid width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconGridHeight">
      <summary>Gets the height of a grid in which a large icon will fit. </summary>
      <returns>The grid height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenWidth">
      <summary>Gets a value that indicates the width, in pixels, of a maximized top-level window on the primary display monitor.  </summary>
      <returns>The window width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenHeight">
      <summary>Gets a value that indicates the height, in pixels, of a maximized top-level window on the primary display monitor.  </summary>
      <returns>The window height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximumWindowTrackWidth">
      <summary>Gets a value that indicates the maximum width, in pixels, of a window that has a caption and sizing borders.  </summary>
      <returns>The maximum window width.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximumWindowTrackHeight">
      <summary>Gets a value that indicates the maximum height, in pixels, of a window that has a caption and sizing borders.  </summary>
      <returns>The maximum window height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuCheckmarkWidth">
      <summary>Gets a value that indicates the width, in pixels, of the default menu check-mark bitmap.  </summary>
      <returns>The width of the bitmap.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuCheckmarkHeight">
      <summary>Gets a value that indicates the height, in pixels, of the default menu check-mark bitmap.  </summary>
      <returns>The height of a bitmap.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuButtonWidth">
      <summary>Gets a value that indicates the width, in pixels, of a menu bar button.  </summary>
      <returns>The width of a menu bar button.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of a menu bar button.  </summary>
      <returns>The height of a menu bar button.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowWidth">
      <summary>Gets a value that indicates the minimum width, in pixels, of a window.  </summary>
      <returns>The minimum width of a window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowHeight">
      <summary>Gets a value that indicates the minimum height, in pixels, of a window.  </summary>
      <returns>The minimum height of a window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedWindowWidth">
      <summary>Gets a value that indicates the width, in pixels, of a minimized window.  </summary>
      <returns>The width of a minimized window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedWindowHeight">
      <summary>Gets a value that indicates the height, in pixels, of a minimized window.  </summary>
      <returns>The height of a minimized window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedGridWidth">
      <summary>Gets a value that indicates the width, in pixels, of a grid cell for a minimized window.  </summary>
      <returns>The width of a grid cell for a minimized window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedGridHeight">
      <summary>Gets a value that indicates the height, in pixels, of a grid cell for a minimized window.  </summary>
      <returns>The height of a grid cell for a minimized window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowTrackWidth">
      <summary>Gets a value that indicates the minimum tracking width of a window, in pixels.   </summary>
      <returns>The minimum tracking width of a window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowTrackHeight">
      <summary>Gets a value that indicates the minimum tracking height of a window, in pixels.   </summary>
      <returns>The minimun tracking height of a window.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.PrimaryScreenWidth">
      <summary>Gets a value that indicates the screen width, in pixels, of the primary display monitor.   </summary>
      <returns>The width of the screen.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.PrimaryScreenHeight">
      <summary>Gets a value that indicates the screen height, in pixels, of the primary display monitor.   </summary>
      <returns>The height of the screen.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCaptionButtonWidth">
      <summary>Gets a value that indicates the width, in pixels, of a button in the title bar of a window.  </summary>
      <returns>The width of a caption button.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCaptionButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of a button in the title bar of a window.  </summary>
      <returns>The height of a caption button.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ResizeFrameHorizontalBorderHeight">
      <summary>Gets a value that indicates the height (thickness), in pixels, of the horizontal sizing border around the perimeter of a window that can be resized.   </summary>
      <returns>The height of the border.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ResizeFrameVerticalBorderWidth">
      <summary>Gets a value that indicates the width (thickness), in pixels, of the vertical sizing border around the perimeter of a window that can be resized.   </summary>
      <returns>The width of the border.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallIconWidth">
      <summary>Gets a value that indicates the recommended width, in pixels, of a small icon. </summary>
      <returns>The width of the icon.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallIconHeight">
      <summary>Gets a value that indicates the recommended height, in pixels, of a small icon. </summary>
      <returns>The icon height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonWidth">
      <summary>Gets a value that indicates the width, in pixels, of small caption buttons.  </summary>
      <returns>The width of the caption button.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of small caption buttons.  </summary>
      <returns>The height of the caption button.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenWidth">
      <summary>Gets a value that indicates the width, in pixels, of the virtual screen.   </summary>
      <returns>The width of the virtual screen.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenHeight">
      <summary>Gets a value that indicates the height, in pixels, of the virtual screen.   </summary>
      <returns>The height of the virtual screen.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VerticalScrollBarWidth">
      <summary>Gets a value that indicates the width, in pixels, of a vertical scroll bar.  </summary>
      <returns>The width of a scroll bar.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VerticalScrollBarButtonHeight">
      <summary>Gets a value that indicates the height, in pixels, of the arrow bitmap on a vertical scroll bar.  </summary>
      <returns>The height of a bitmap.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCaptionHeight">
      <summary>Gets a value that indicates the height, in pixels, of a caption area.  </summary>
      <returns>The height of a caption area.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KanjiWindowHeight">
      <summary>Gets a value that indicates the height, in pixels, of the kanji window at the bottom of the screen for systems that use double-byte characters.  </summary>
      <returns>The window height.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuBarHeight">
      <summary>Gets a value that indicates the height, in pixels, of a single-line menu bar.  </summary>
      <returns>The height of the menu bar.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VerticalScrollBarThumbHeight">
      <summary>Gets a value that indicates the height, in pixels, of the thumb in a vertical scroll bar.  </summary>
      <returns>The height of the thumb.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsImmEnabled">
      <summary>Gets a value that indicates whether the system is ready to use a Unicode-based Input Method Editor (IME) on a Unicode application.  </summary>
      <returns>
        <see langword="true" /> if the Input Method Manager/Input Method Editor features are enabled; otherwise, <see langword="false" />.<see langword="" /></returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMediaCenter">
      <summary>Gets a value that indicates whether the current operating system is the Microsoft Windows XP Media Center Edition. </summary>
      <returns>
        <see langword="true" /> if the current operating system is Windows XP Media Center Edition; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMenuDropRightAligned">
      <summary>Gets a value that indicates whether drop-down menus are right-aligned with the corresponding menu item. </summary>
      <returns>
        <see langword="true" /> if drop-down menus are right-aligned; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMiddleEastEnabled">
      <summary>Gets a value that indicates whether the system is enabled for Hebrew and Arabic languages. </summary>
      <returns>
        <see langword="true" /> if the system is enabled for Hebrew and Arabic languages; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMousePresent">
      <summary>Gets a value that indicates whether a mouse is installed. </summary>
      <returns>
        <see langword="true" /> if a mouse is installed; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMouseWheelPresent">
      <summary>Gets a value that indicates whether the installed mouse has a vertical scroll wheel. </summary>
      <returns>
        <see langword="true" /> if the installed mouse has a vertical scroll wheel; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsPenWindows">
      <summary>Gets a value that indicates whether Microsoft Windows for Pen Computing extensions are installed. </summary>
      <returns>
        <see langword="true" /> if Pen Computing extensions are installed; otherwise, <see langword="false" />. </returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsRemotelyControlled">
      <summary>Gets a value that indicates whether the current session is remotely controlled. </summary>
      <returns>
        <see langword="true" /> if the current session is remotely controlled; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsRemoteSession">
      <summary>Gets a value that indicates whether the calling process is associated with a Terminal Services client session. </summary>
      <returns>
        <see langword="true" /> if the calling process is associated with a Terminal Services client session; <see langword="false" /> if the calling process is associated with the Terminal Server console session.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ShowSounds">
      <summary>Gets a value that indicates whether the user requires information in visual format. </summary>
      <returns>
        <see langword="true" /> if the user requires an application to present information visually where it typically presents the information only in audible form; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsSlowMachine">
      <summary>Gets a value that indicates whether the computer has a low-end (slow) processor. </summary>
      <returns>
        <see langword="true" /> if the computer has a low-end (slow) processor; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SwapButtons">
      <summary>Gets a value that indicates whether the functionality of the left and right mouse buttons are swapped.  </summary>
      <returns>
        <see langword="true" /> if the functionality of the left and right mouse buttons are swapped; otherwise <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsTabletPC">
      <summary>Gets a value that indicates whether the current operating system is Microsoft Windows XP Tablet PC Edition. </summary>
      <returns>
        <see langword="true" /> if the current operating system is Windows XP Tablet PC Edition; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenLeft">
      <summary>Gets a value that indicates the coordinate for the left side of the virtual screen.   </summary>
      <returns>A screen coordinate, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenTop">
      <summary>Gets a value that indicates the upper coordinate of the virtual screen. </summary>
      <returns>A screen coordinate, in pixels.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThinHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThinHorizontalBorderHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThinVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThinVerticalBorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CursorWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CursorWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.CursorHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.CursorHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThickHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThickHorizontalBorderHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ThickVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ThickVerticalBorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FixedFrameHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FixedFrameHorizontalBorderHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FixedFrameVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FixedFrameVerticalBorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusHorizontalBorderHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FocusVerticalBorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FullPrimaryScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FullPrimaryScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.FullPrimaryScreenHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HorizontalScrollBarButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarButtonWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HorizontalScrollBarHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.HorizontalScrollBarThumbWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.HorizontalScrollBarThumbWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconGridWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconGridWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IconGridHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IconGridHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximizedPrimaryScreenHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximumWindowTrackWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MaximumWindowTrackHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MaximumWindowTrackHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuCheckmarkWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuCheckmarkWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuCheckmarkHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuCheckmarkHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuButtonWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuButtonHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedWindowWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedWindowWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedWindowHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedWindowHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedGridWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedGridWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimizedGridHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimizedGridHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowTrackWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MinimumWindowTrackHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MinimumWindowTrackHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.PrimaryScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.PrimaryScreenWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.PrimaryScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.PrimaryScreenHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCaptionButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCaptionButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WindowCaptionButtonHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ResizeFrameHorizontalBorderHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ResizeFrameHorizontalBorderHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ResizeFrameVerticalBorderWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ResizeFrameVerticalBorderWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallIconWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallIconWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallIconHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallIconHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallWindowCaptionButtonHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VerticalScrollBarWidthKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VerticalScrollBarWidth" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VerticalScrollBarButtonHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VerticalScrollBarButtonHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCaptionHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.WindowCaptionHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.KanjiWindowHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.KanjiWindowHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.MenuBarHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.MenuBarHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SmallCaptionHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SmallCaptionHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VerticalScrollBarThumbHeightKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VerticalScrollBarThumbHeight" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsImmEnabledKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsImmEnabled" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMediaCenterKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMediaCenter" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMenuDropRightAlignedKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMenuDropRightAligned" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMiddleEastEnabledKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMiddleEastEnabled" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMousePresentKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMousePresent" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsMouseWheelPresentKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsMouseWheelPresent" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsPenWindowsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsPenWindows" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsRemotelyControlledKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsRemotelyControlled" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsRemoteSessionKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsRemoteSession" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.ShowSoundsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.ShowSounds" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsSlowMachineKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsSlowMachine" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.SwapButtonsKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.SwapButtons" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsTabletPCKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.IsTabletPC" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenLeftKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenLeft" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.VirtualScreenTopKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.VirtualScreenTop" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.FocusVisualStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see langword="FocusVisualStyle" /> property. </summary>
      <returns>The resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.NavigationChromeStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.NavigationChromeStyleKey" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.NavigationChromeDownLevelStyleKey">
      <summary>Gets the <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.NavigationChromeDownLevelStyleKey" /> property. </summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.PowerLineStatus">
      <summary>Gets a value indicating whether the system power is online, or that the system power status is unknown.</summary>
      <returns>A value in the enumeration.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.PowerLineStatusKey">
      <summary>Gets a <see cref="T:System.Windows.ResourceKey" /> for the <see cref="P:System.Windows.SystemParameters.PowerLineStatus" /> property.</summary>
      <returns>A resource key.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.IsGlassEnabled">
      <summary>Gets a value that indicates whether glass window frames are being used.</summary>
      <returns>
        <see langword="true" /> if glass window frames are being used; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.UxThemeName">
      <summary>Gets the theme name.</summary>
      <returns>The theme name.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.UxThemeColor">
      <summary>Gets the color theme name.</summary>
      <returns>The color theme name.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowCornerRadius">
      <summary>Gets the radius of the corners for a window.</summary>
      <returns>The degree to which the corners of a window are rounded.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowGlassColor">
      <summary>Gets the color that is used to paint the glass window frame.</summary>
      <returns>The color that is used to paint the glass window frame.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowGlassBrush">
      <summary>Gets the brush that paints the glass window frame.</summary>
      <returns>The brush that paints the glass window frame.</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowResizeBorderThickness">
      <summary>Gets the size of the resizing border around the window.</summary>
      <returns>The size of the resizing border around the window, in device-independent units (1/96th of an inch).</returns>
    </member>
    <member name="P:WpfApp.Controls.SysProp.WindowNonClientFrameThickness">
      <summary>Gets the size of the non-client area of the window.</summary>
      <returns>The size of the non-client area of the window, in device-independent units (1/96th of an inch).</returns>
    </member>
    <member name="T:WpfApp.Controls.TypedService">
      <summary>
      </summary>
      <seealso cref="T:Autofac.Core.Service" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for TypedService
        </member>
    <member name="P:WpfApp.Controls.TypedService.Description">
      <summary>Gets a human-readable description of the service.</summary>
      <value>The description.</value>
    </member>
    <member name="P:WpfApp.Controls.TypedService.Desc">
      <summary>Gets or sets the desc.</summary>
      <value>The desc.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Desc
        </member>
    <member name="P:WpfApp.Controls.TypedService.ServiceType">
      <summary>Gets or sets the type of the service.</summary>
      <value>The type of the service.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceType
        </member>
    <member name="T:WpfApp.Controls.UserControl1">
      <summary>
                Interaction logic for UserControl1.xaml
            </summary>
      <summary>
            UserControl1
            </summary>
    </member>
    <member name="M:WpfApp.Controls.UserControl1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.UserControl1" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.UserControl1.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.TypeBrowserPage">
      <summary>
                Interaction logic for TypeBrowserPage.xaml
            </summary>
      <summary>
            TypeBrowserPage
            </summary>
    </member>
    <member name="M:WpfApp.Controls.TypeBrowserPage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.TypeBrowserPage" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.TypeBrowserPage.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.Windows.AppSettingsWindow">
      <summary>
                Interaction logic for AppSettingsWindow.xaml
            </summary>
      <summary>
            AppSettingsWindow
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.AppSettingsWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.Windows.AppSettingsWindow" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.Windows.AppSettingsWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.Windows.ComponentRegistry">
      <summary>
      </summary>
      <seealso cref="T:Autofac.Core.IComponentRegistry" />
      <seealso cref="T:System.Windows.Markup.IAddChild" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ComponentRegistry
        </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.#ctor(System.Collections.Generic.IEnumerable{Autofac.Core.IComponentRegistration},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Autofac.Core.IRegistrationSource},System.Boolean)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Controls.Windows.ComponentRegistry.RegistrationsList">
      <summary>Gets or sets the registrations list.</summary>
      <value>The registrations list.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RegistrationsList
        </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.Dispose">
      <summary>
                Performs application-defined tasks associated with freeing, releasing,
                or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.TryGetRegistration(Autofac.Core.Service,Autofac.Core.IComponentRegistration@)">
      <summary>
                Attempts to find a default registration for the specified service.
            </summary>
      <param name="service">The service to look up.</param>
      <param name="registration">The default registration for the service.</param>
      <returns>True if a registration exists.</returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.IsRegistered(Autofac.Core.Service)">
      <summary>
                Determines whether the specified service is registered.
            </summary>
      <param name="service">The service to test.</param>
      <returns>True if the service is registered.</returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.Register(Autofac.Core.IComponentRegistration)">
      <summary>Register a component.</summary>
      <param name="registration">The component registration.</param>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.Register(Autofac.Core.IComponentRegistration,System.Boolean)">
      <summary>Register a component.</summary>
      <param name="registration">The component registration.</param>
      <param name="preserveDefaults">
                If true, existing defaults for the services provided by the
                component will not be changed.
            </param>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.RegistrationsFor(Autofac.Core.Service)">
      <summary>
                Selects from the available registrations after ensuring that any
                dynamic registration sources that may provide
                <paramref name="service" />
                have been invoked.
            </summary>
      <param name="service">The service for which registrations are sought.</param>
      <returns>Registrations supporting <paramref name="service" />.</returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.DecoratorsFor(Autofac.Core.IComponentRegistration)">
      <summary>
                Selects all available decorator registrations that can be applied to the
                specified registration.
            </summary>
      <param name="registration">
                The registration for which decorator registrations
                are sought.
            </param>
      <returns>
                Decorator registrations applicable to <paramref name="registration" />
                .
            </returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.AddRegistrationSource(Autofac.Core.IRegistrationSource)">
      <summary>
                Add a registration source that will provide registrations on-the-fly.
            </summary>
      <param name="source">The source to register.</param>
    </member>
    <member name="P:WpfApp.Controls.Windows.ComponentRegistry.Properties">
      <summary>
                Gets the set of properties used during component registration.
            </summary>
      <value>
                A dictionarythat can be
                used to share
                context across registrations.
            </value>
    </member>
    <member name="P:WpfApp.Controls.Windows.ComponentRegistry.Registrations">
      <summary>Gets the set of registered components.</summary>
    </member>
    <member name="P:WpfApp.Controls.Windows.ComponentRegistry.Sources">
      <summary>
                Gets the registration sources that are used by the registry.
            </summary>
    </member>
    <member name="P:WpfApp.Controls.Windows.ComponentRegistry.HasLocalComponents">
      <summary>
                Gets a value indicating whether the registry contains its own
                components.
                True if the registry contains its own components; false if it is
                forwarding
                registrations from another external registry.
            </summary>
      <remarks>
                This property is used when walking up the scope tree looking for
                registrations for a new customised scope.
            </remarks>
    </member>
    <member name="E:WpfApp.Controls.Windows.ComponentRegistry.Registered">
      <summary>
                Fired whenever a component is registered - either explicitly or via a
                <see cref="T:Autofac.Core.IRegistrationSource" />.
            </summary>
    </member>
    <member name="E:WpfApp.Controls.Windows.ComponentRegistry.RegistrationSourceAdded">
      <summary>
                Fired when an <see cref="T:Autofac.Core.IRegistrationSource" /> is added
                to
                the registry.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.ComponentRegistry.DecoratorsFor(Autofac.Core.IServiceWithType)">
      <summary>
                Selects all available decorator registrations that can be applied to the
                specified service.
            </summary>
      <param name="service">
                The service for which decorator registrations are
                sought.
            </param>
      <returns>Decorator registrations applicable to <paramref name="service" />.</returns>
    </member>
    <member name="T:WpfApp.Controls.Windows.LifetimeScope">
      <summary>
        <para>Concrete class</para>
      </summary>
      <seealso cref="T:Autofac.ILifetimeScope" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScope
        </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.#ctor(System.Object,Autofac.Core.IDisposer,Autofac.Core.IComponentRegistry)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.ResolveComponent(Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <summary>
                Resolve an instance of the provided registration within the context.
            </summary>
      <param name="registration">The registration.</param>
      <param name="parameters">Parameters for the instance.</param>
      <returns>The component instance.</returns>
      <exception cref="T:Autofac.Core.Registration.ComponentNotRegisteredException" />
      <exception cref="T:Autofac.Core.DependencyResolutionException" />
    </member>
    <member name="P:WpfApp.Controls.Windows.LifetimeScope.ComponentRegistry">
      <summary>
                Gets the associated services with the components that provide them.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.Dispose">
      <summary>
                Performs application-defined tasks associated with freeing, releasing,
                or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.BeginLifetimeScope">
      <summary>
                Begin a new nested scope. Component instances created via the new scope
                will be disposed along with it.
            </summary>
      <returns>A new lifetime scope.</returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.BeginLifetimeScope(System.Object)">
      <summary>
                Begin a new nested scope. Component instances created via the new scope
                will be disposed along with it.
            </summary>
      <param name="tag">
                The tag applied to the
                <see cref="T:Autofac.ILifetimeScope" />.
            </param>
      <returns>A new lifetime scope.</returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.BeginLifetimeScope(System.Action{Autofac.ContainerBuilder})">
      <summary>
                Begin a new nested scope, with additional components available to it.
                Component instances created via the new scope
                will be disposed along with it.
            </summary>
      <remarks>
                The components registered in the sub-scope will be treated as though
                they
                were
                registered in the root scope, i.e., SingleInstance() components will
                live
                as long
                as the root scope.
            </remarks>
      <param name="configurationAction">
                Action on a <see cref="T:Autofac.ContainerBuilder" />
                that adds component registrations visible only in the new scope.
            </param>
      <returns>A new lifetime scope.</returns>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.BeginLifetimeScope(System.Object,System.Action{Autofac.ContainerBuilder})">
      <summary>
                Begin a new nested scope, with additional components available to it.
                Component instances created via the new scope
                will be disposed along with it.
            </summary>
      <remarks>
                The components registered in the sub-scope will be treated as though
                they
                were
                registered in the root scope, i.e., SingleInstance() components will
                live
                as long
                as the root scope.
            </remarks>
      <param name="tag">
                The tag applied to the
                <see cref="T:Autofac.ILifetimeScope" />.
            </param>
      <param name="configurationAction">
                Action on a <see cref="T:Autofac.ContainerBuilder" />
                that adds component registrations visible only in the new scope.
            </param>
      <returns>A new lifetime scope.</returns>
    </member>
    <member name="P:WpfApp.Controls.Windows.LifetimeScope.Disposer">
      <summary>
                Gets the disposer associated with this
                <see cref="T:Autofac.ILifetimeScope" />.
                Component instances can be associated with it manually if required.
            </summary>
      <remarks>
                Typical usage does not require interaction with this member- it
                is used when extending the container.
            </remarks>
    </member>
    <member name="P:WpfApp.Controls.Windows.LifetimeScope.Tag">
      <summary>
                Gets the tag applied to the <see cref="T:Autofac.ILifetimeScope" />.
            </summary>
      <remarks>
                Tags allow a level in the lifetime hierarchy to be identified.
                In most applications, tags are not necessary.
            </remarks>
    </member>
    <member name="E:WpfApp.Controls.Windows.LifetimeScope.ChildLifetimeScopeBeginning">
      <summary>
                Fired when a new scope based on the current scope is beginning.
            </summary>
    </member>
    <member name="E:WpfApp.Controls.Windows.LifetimeScope.CurrentScopeEnding">
      <summary>Fired when this scope is ending.</summary>
    </member>
    <member name="E:WpfApp.Controls.Windows.LifetimeScope.ResolveOperationBeginning">
      <summary>
                Fired when a resolve operation is beginning in this scope.
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.LifetimeScope.DisposeAsync">
      <summary>Disposes the asynchronous.</summary>
      <returns>
      </returns>
      <exception cref="T:System.NotImplementedException">
      </exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DisposeAsync
        </member>
    <member name="T:WpfApp.Controls.Windows.LogEventInfoCollection">
      <summary>
      </summary>
      <seealso cref="T:NLog.LogEventInfo" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LogEventInfoCollection
        </member>
    <member name="M:WpfApp.Controls.Windows.LogEventInfoCollection.#ctor(System.Collections.Generic.List{NLog.LogEventInfo})">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class that contains elements copied from the specified list.
            </summary>
      <param name="list">The list from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">
                The <paramref name="list" />
                parameter cannot be <see langword="null" />.
            </exception>
    </member>
    <member name="M:WpfApp.Controls.Windows.LogEventInfoCollection.#ctor(System.Collections.Generic.IEnumerable{NLog.LogEventInfo})">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class that contains elements copied from the specified collection.
            </summary>
      <param name="collection">The collection from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">
                The
                <paramref name="collection" /> parameter cannot be
                <see langword="null" />.
            </exception>
    </member>
    <member name="T:WpfApp.Controls.Windows.MainWindow">
      <summary>
                Interaction logic for MainWindow.xaml
            </summary>
            public c
            <summary>
            MainWindow
            </summary></member>
    <member name="P:WpfApp.Controls.Windows.MainWindow.Configuration">
      <summary>Gets or sets the configuration.</summary>
      <value>The configuration.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Configuration
        </member>
    <member name="F:WpfApp.Controls.Windows.MainWindow.LifetimeScopeProperty">
      <summary>The lifetime scope property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScopeProperty
        </member>
    <member name="F:WpfApp.Controls.Windows.MainWindow.MenuItemListCollectionViewProperty">
      <summary>The menu item list collection view property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuItemListCollectionViewProperty
        </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.AddChild(System.Object)">
      <summary>
                Adds a specified object as the child of a
                <see cref="T:System.Windows.Controls.ContentControl" />.
            </summary>
      <param name="value">The object to add.</param>
    </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Controls.Windows.MainWindow" />
                class.
            </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Controls.Windows.MainWindow.LogEvents">
      <summary>Gets or sets the log events.</summary>
      <value>The log events.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LogEvents
        </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.OnMenuItemListCollectionViewChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Windows.Data.CollectionView})">
      <summary>Called when [menu item list collection view changed].</summary>
      <param name="sender">The sender.</param>
      <param name="e">
                The
                <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" /> instance
                containing the event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnMenuItemListCollectionViewChanged
        </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.Refresh_OnClick(System.Object,System.Windows.RoutedEventArgs)">
      <summary>Handles the OnClick event of the Refresh control.</summary>
      <param name="sender">The source of the event.</param>
      <param name="e">
                The <see cref="T:System.Windows.RoutedEventArgs" /> instance containing the
                event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Refresh_OnClick
        </member>
    <member name="P:WpfApp.Controls.Windows.MainWindow.LifetimeScope">
      <summary>Gets or sets the lifetime scope.</summary>
      <value>The lifetime scope.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScope
        </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.OnClosed(System.EventArgs)">
      <summary>Raises the <see cref="E:System.Windows.Window.Closed" /> event.</summary>
      <param name="e">
                An <see cref="T:System.EventArgs" /> that contains the event
                data.
            </param>
    </member>
    <member name="P:WpfApp.Controls.Windows.MainWindow.DoRestart">
      <summary>Gets or sets a value indicating whether [do restart].</summary>
      <value>
        <see language="true" /> if [do restart]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoRestart
        </member>
    <member name="P:WpfApp.Controls.Windows.MainWindow.CheckedHandler">
      <summary>Gets or sets the checked handler.</summary>
      <value>The checked handler.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CheckedHandler
        </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.Dispose">
      <summary>Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.</summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.MainWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.Windows.NewWindow">
      <summary>
                Interaction logic for NewWindow.xaml
            </summary>
      <summary>
            NewWindow
            </summary>
    </member>
    <member name="M:WpfApp.Controls.Windows.NewWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.Windows.NewWindow" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.Windows.NewWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.Windows.Page1">
      <summary>
                Interaction logic for Page1.xaml
            </summary>
      <summary>
            Page1
            </summary>
    </member>
    <member name="F:WpfApp.Controls.Windows.Page1.AssemblyList">
      <summary>The assembly list</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssemblyList
        </member>
    <member name="M:WpfApp.Controls.Windows.Page1.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.Windows.Page1" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.Windows.Page1.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.AssemblyBrowser">
      <summary>
                Interaction logic for AssemblyBrowser.xaml
            </summary>
      <summary>
            AssemblyBrowser
            </summary>
    </member>
    <member name="M:WpfApp.Controls.AssemblyBrowser.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Controls.AssemblyBrowser" />
                class.
            </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.AssemblyBrowser.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.DefaultPage">
      <summary>
                Interaction logic for DefaultPage.xaml
            </summary>
      <summary>
            DefaultPage
            </summary>
    </member>
    <member name="M:WpfApp.Controls.DefaultPage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.DefaultPage" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.DefaultPage.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.Registrations">
      <summary>
                Interaction	logic for Registrations.xaml
            </summary>
      <summary>
            Registrations
            </summary>
    </member>
    <member name="F:WpfApp.Controls.Registrations.LifetimeScopeProperty">
      <summary>The lifetime scope property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScopeProperty
        </member>
    <member name="M:WpfApp.Controls.Registrations.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Controls.Registrations" />
                class.
            </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.Registrations.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.ResourcesView">
      <summary>
                Interaction logic for ResourcesView.xaml
            </summary>
      <summary>
            ResourcesView
            </summary>
    </member>
    <member name="M:WpfApp.Controls.ResourcesView.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.ResourcesView" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.ResourcesView.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.TypeControl">
      <summary>
                Interaction logic for TypeControl.xaml
            </summary>
      <summary>
            TypeControl
            </summary>
    </member>
    <member name="F:WpfApp.Controls.TypeControl.Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="F:WpfApp.Controls.TypeControl.RenderedTypeProperty">
      <summary>The rendered type property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RenderedTypeProperty
        </member>
    <member name="F:WpfApp.Controls.TypeControl.TargetNameProperty">
      <summary>The target name property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetNameProperty
        </member>
    <member name="F:WpfApp.Controls.TypeControl.TargetProperty">
      <summary>The target property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetProperty
        </member>
    <member name="F:WpfApp.Controls.TypeControl.DetailedProperty">
      <summary>The detailed property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DetailedProperty
        </member>
    <member name="F:WpfApp.Controls.TypeControl.TargetDetailedProperty">
      <summary>The target detailed property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetDetailedProperty
        </member>
    <member name="M:WpfApp.Controls.TypeControl.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.TypeControl" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Controls.TypeControl.RenderedType">
      <summary>Gets or sets the type of the rendered.</summary>
      <value>The type of the rendered.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RenderedType
        </member>
    <member name="P:WpfApp.Controls.TypeControl.TargetName">
      <summary>Gets or sets the name of the target.</summary>
      <value>The name of the target.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetName
        </member>
    <member name="P:WpfApp.Controls.TypeControl.Target">
      <summary>Gets or sets the target.</summary>
      <value>The target.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Target
        </member>
    <member name="P:WpfApp.Controls.TypeControl.Detailed">
      <summary>
                Gets or sets a value indicating whether this
                <see cref="T:WpfApp.Controls.TypeControl" /> is detailed.
            </summary>
      <value>
        <see language="true" /> if detailed; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Detailed
        </member>
    <member name="P:WpfApp.Controls.TypeControl.TargetDetailed">
      <summary>Gets or sets a value indicating whether [target detailed].</summary>
      <value>
        <see language="true" /> if [target detailed]; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetDetailed
        </member>
    <member name="P:WpfApp.Controls.TypeControl.FlowDocument">
      <summary>Gets or sets the flow document.</summary>
      <value>The flow document.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for flowDocument
        </member>
    <member name="E:WpfApp.Controls.TypeControl.RenderedTypeChanged">
      <summary>Occurs when [rendered type changed].</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RenderedTypeChanged
        </member>
    <member name="M:WpfApp.Controls.TypeControl.OnRenderedTypeChanged(System.Object,System.Windows.RoutedPropertyChangedEventArgs{System.Type})">
      <summary>Called when [rendered type changed].</summary>
      <param name="sender">The sender.</param>
      <param name="e">
                The <see cref="T:System.Windows.RoutedPropertyChangedEventArgs`1" />
                instance containing the event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnRenderedTypeChanged
        </member>
    <member name="M:WpfApp.Controls.TypeControl.PopulateControl(System.Type)">
      <summary>Populates the control.</summary>
      <param name="myType">My type.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for PopulateControl
        </member>
    <member name="M:WpfApp.Controls.TypeControl.GenerateControlsForType(System.Type,System.Windows.Markup.IAddChild,System.Boolean)">
      <summary>Generates the type of the controls for.</summary>
      <param name="myType">My type.</param>
      <param name="addChild">The add child.</param>
      <param name="toolTip">if set to <see language="true" /> [tool tip].</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GenerateControlsForType
        </member>
    <member name="M:WpfApp.Controls.TypeControl.ToolTipContent(System.Type,System.Windows.Controls.StackPanel)">
      <summary>Tools the content of the tip.</summary>
      <param name="myType">My type.</param>
      <param name="pp">The pp.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ToolTipContent
        </member>
    <member name="M:WpfApp.Controls.TypeControl.NameForType(System.Type)">
      <summary>Names for type.</summary>
      <param name="myType">My type.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NameForType
        </member>
    <member name="M:WpfApp.Controls.TypeControl.HyperLinkOnRequestNavigate(System.Object,System.Windows.Navigation.RequestNavigateEventArgs)">
      <summary>Navigate handler for type hyperlinks.</summary>
      <param name="sender">The sender.</param>
      <param name="e">
                The <see cref="T:System.Windows.Navigation.RequestNavigateEventArgs" />
                instance
                containing the event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for HyperLinkOnRequestNavigate
        </member>
    <member name="M:WpfApp.Controls.TypeControl.NavigationService">
      <summary>Get navigation service.</summary>
      <returns>
      </returns>
      <exception cref="T:System.InvalidOperationException">
      </exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NavigationService
        </member>
    <member name="M:WpfApp.Controls.TypeControl.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.NavState">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NavState
        </member>
    <member name="P:WpfApp.Controls.NavState.Detailed">
      <summary>
                Gets or sets a value indicating whether this
                <see cref="T:WpfApp.Controls.NavState" /> is detailed.
            </summary>
      <value>
        <see language="true" /> if detailed; otherwise, <see language="false" />.
            </value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Detailed
        </member>
    <member name="P:WpfApp.Controls.NavState.RenderedType">
      <summary>Gets or sets the type of the rendered.</summary>
      <value>The type of the rendered.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RenderedType
        </member>
    <member name="T:WpfApp.Controls.TypeControl2">
      <summary>
                Interaction logic for TypeControl2.xaml
            </summary>
      <summary>
            TypeControl2
            </summary>
    </member>
    <member name="M:WpfApp.Controls.TypeControl2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.TypeControl2" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.TypeControl2.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.TypeNavigator">
      <summary>
                Interaction logic for TypeNavigator.xaml
            </summary>
      <summary>
            TypeNavigator
            </summary>
    </member>
    <member name="M:WpfApp.Controls.TypeNavigator.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.TypeNavigator" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.TypeNavigator.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Controls.TypePage">
      <summary>
                Interaction logic for TypePage.xaml
            </summary>
      <summary>
            TypePage
            </summary>
    </member>
    <member name="M:WpfApp.Controls.TypePage.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Controls.TypePage" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Controls.TypePage.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Core.Attributes.ContextStackInstanceAttribute">
      <summary>
      </summary>
      <seealso cref="T:System.Attribute" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ContextStackInstanceAttribute
        </member>
    <member name="N:WpfApp.Core.Attributes">
      <summary>Namespace for attributes.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="T:WpfApp.Core.Attributes.LoggingEntityMetadata">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggingEntityMetadata
        </member>
    <member name="P:WpfApp.Core.Attributes.LoggingEntityMetadata.LoggingType">
      <summary>Gets or sets the type of the logging.</summary>
      <value>The type of the logging.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggingType
        </member>
    <member name="T:WpfApp.Core.Attributes.WindowMetadataAttribute">
      <summary>
      </summary>
      <seealso cref="T:System.Attribute" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for WindowMetadataAttribute
        </member>
    <member name="M:WpfApp.Core.Attributes.WindowMetadataAttribute.#ctor(System.String)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Attributes.WindowMetadataAttribute.WindowTitle">
      <summary>Gets the window title.</summary>
      <value>The window title.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for WindowTitle
        </member>
    <member name="T:WpfApp.Core.Container.ContainerHelper">
      <summary>
                static helper class for autofac container. Contains static methods to help bootstrap the container. <see cref="!:ContainerHelper.SetupContainer(container, assembliesToScan, containerHelperSettings)" />.
            </summary>
    </member>
    <member name="F:WpfApp.Core.Container.ContainerHelper.AssembliesForScanningProperty">
      <summary>The assemblies for scanning property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssembliesForScanningProperty
        </member>
    <member name="F:WpfApp.Core.Container.ContainerHelper.CurrentLifetimeScope">
      <summary>The current lifetime scope</summary>
    </member>
    <member name="F:WpfApp.Core.Container.ContainerHelper.InterceptProperty">
      <summary>Property name used to propagate the value of <see cref="P:WpfApp.Core.Container.ContainerHelper.DoInterception" />.</summary>
    </member>
    <member name="M:WpfApp.Core.Container.ContainerHelper.SetupContainer(Autofac.IContainer@,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},WpfApp.Core.Container.ContainerHelperSettings)">
      <summary>Setups the container.</summary>
      <param name="container">The container.</param>
      <param name="assembliesToScan">The assemblies to scan.</param>
      <param name="containerHelperSettings">
      </param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetupContainer
        </member>
    <member name="P:WpfApp.Core.Container.ContainerHelper.DoInterception">
      <summary>Gets or sets a value indicating whether install interceptors for built objects.</summary>
      <value>
        <see language="true" /> to perform interception; otherwise, <see language="false" />.</value>
    </member>
    <member name="P:WpfApp.Core.Container.ContainerHelper.DoTraceConditionalRegistration">
      <summary>
                Gets or sets a value indicating whether to trace conditional
                registration.
            </summary>
      <value>
        <see language="true" /> to trace conditional registration; otherwise,
                <see language="false" />.
            </value>
    </member>
    <member name="P:WpfApp.Core.Container.ContainerHelper.DoProxyBuilder">
      <summary>Gets or sets a value indicating whether to proxy the ContainerBuilder.</summary>
      <value>
        <see language="true" /> to proxy builder; otherwise, <see language="false" />.
            </value>
    </member>
    <member name="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanning">
      <summary>Gets the assemblies for scanning.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetAssembliesForScanning
        </member>
    <member name="P:WpfApp.Core.Container.ContainerHelper.GetAssembliesViaReferences">
      <summary>Gets or sets a value indicating whether [get assemblies via references].</summary>
      <value>
        <see language="true" /> if [get assemblies via references]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetAssembliesViaReferences
        </member>
    <member name="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanningByReferences">
      <summary>Gets the assemblies for scanning.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetAssembliesForScanning
        </member>
    <member name="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanningViaTypes">
      <summary>Gets the assemblies for scanning via types.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetAssembliesForScanningViaTypes
        </member>
    <member name="M:WpfApp.Core.Container.ContainerHelper.Dump(Autofac.Core.IComponentRegistration,System.Collections.Generic.HashSet{System.Object},System.Action{System.String})">
      <summary>Dumps the specified component registry registration.</summary>
      <param name="componentRegistryRegistration">
                The component registry
                registration.
            </param>
      <param name="seenObjects">The seen objects.</param>
      <param name="outFunc">The out function.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Dump
        </member>
    <member name="T:WpfApp.Core.Container.ContainerHelperSettings">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ContainerHelperSettings
        </member>
    <member name="P:WpfApp.Core.Container.ContainerHelperSettings.DoInterception">
      <summary>Gets or sets a value indicating whether [do interception].</summary>
      <value>
        <see language="1" /> if [do interception]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoInterception
        </member>
    <member name="P:WpfApp.Core.Container.ContainerHelperSettings.DoTraceConditionalRegistration">
      <summary>Gets or sets a value indicating whether [do trace conditional registration].</summary>
      <value>
        <see language="1" /> if [do trace conditional registration]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DoTraceConditionalRegistration
        </member>
    <member name="T:WpfApp.Core.DefaultObjectIdProvider">
      <summary>Default implementation for object ID provider service.</summary>
      <seealso cref="T:WpfApp.Core.Interfaces.IObjectIdProvider" />
    </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.#ctor(System.Runtime.Serialization.ObjectIDGenerator)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)">
      <summary>Gets the instance by component registration.</summary>
      <param name="reg">The reg.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetInstanceByComponentRegistration
        </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)">
      <summary>Gets the instance count.</summary>
      <param name="reg">The reg.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetInstanceCount
        </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectInstances">
      <summary>Gets the object instances.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetObjectInstances
        </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectInstanceIdentifier(System.Object)">
      <summary>Gets the object instance identifier.</summary>
      <param name="instance">The instance.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetObjectInstanceIdentifier
        </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectById(System.Object)">
      <summary>
        <para>
                    Gets the object by identifier.
                </para>
      </summary>
      <param name="id">The identifier.</param>
      <returns>
      </returns>
    </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <summary>
        <para>
                    Provides the object instance identifier.
                </para>
      </summary>
      <param name="instance">The instance.</param>
      <param name="eComponent">The e component.</param>
      <param name="eParameters">The e parameters.</param>
      <returns>
      </returns>
      <exception cref="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException">
      </exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProvideObjectInstanceIdentifier
        </member>
    <member name="M:WpfApp.Core.DefaultObjectIdProvider.GetRootNodes">
      <summary>Gets the root nodes.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetRootNodes
        </member>
    <member name="T:WpfApp.Core.Exceptions.DuplicateKeyException">
      <summary>
      </summary>
      <seealso cref="T:System.Exception" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for DuplicateKeyException
        </member>
    <member name="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.String)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.String,System.Exception)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message and a reference to the inner
                exception
                that is the cause of this exception.
            </summary>
      <param name="message">
                The error message that explains the reason for the
                exception.
            </param>
      <param name="innerException">
                The exception that is the cause of the current
                exception, or a null reference (<see langword="Nothing" /> in Visual
                Basic)
                if no inner exception is specified.
            </param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Exception)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message and a reference to the inner
                exception
                that is the cause of this exception.
            </summary>
      <param name="innerException">
                The exception that is the cause of the current
                exception, or a null reference (<see langword="Nothing" /> in Visual
                Basic)
                if no inner exception is specified.
            </param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with serialized data.
            </summary>
      <param name="info">
                The
                <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
                holds
                the serialized object data about the exception being thrown.
            </param>
      <param name="context">
                The
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
                contains contextual information about the source or destination.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                The
                class name is <see langword="null" /> or
                <see cref="P:System.Exception.HResult" /> is zero (0).
            </exception>
    </member>
    <member name="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Object)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Exceptions.DuplicateKeyException" /> class.</summary>
      <param name="key">The key.</param>
      <exception cref="T:System.ArgumentNullException">key</exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Exceptions.DuplicateKeyException.Key">
      <summary>Gets the key.</summary>
      <value>The key.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Key
        </member>
    <member name="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException">
      <summary>
      </summary>
      <seealso cref="T:System.Exception" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for UnableToRegisterObjectIdException
        </member>
    <member name="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class.</summary>
    </member>
    <member name="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
    </member>
    <member name="T:WpfApp.Core.Exceptions.UnhandledException">
      <summary>Application unhandled exception</summary>
      <seealso cref="T:System.Exception" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for UnhandledException
        </member>
    <member name="M:WpfApp.Core.Exceptions.UnhandledException.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.String)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.String,System.Exception)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message and a reference to the inner
                exception
                that is the cause of this exception.
            </summary>
      <param name="message">
                The error message that explains the reason for the
                exception.
            </param>
      <param name="innerException">
                The exception that is the cause of the current
                exception, or a null reference (<see langword="Nothing" /> in Visual
                Basic)
                if no inner exception is specified.
            </param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with serialized data.
            </summary>
      <param name="info">
                The
                <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
                holds
                the serialized object data about the exception being thrown.
            </param>
      <param name="context">
                The
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
                contains contextual information about the source or destination.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                The
                class name is <see langword="null" /> or
                <see cref="P:System.Exception.HResult" /> is zero (0).
            </exception>
    </member>
    <member name="T:WpfApp.Core.Exceptions.AttributeNotFoundException">
      <summary>
      </summary>
      <seealso cref="T:System.Exception" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AttributeNotFoundException
        </member>
    <member name="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class.</summary>
    </member>
    <member name="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.String)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message.</summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.String,System.Exception)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with a specified error message and a reference to the inner exception that is the cause of this exception.</summary>
      <param name="message">The error message that explains the reason for the exception.</param>
      <param name="innerException">The exception that is the cause of the current exception, or a null reference (<see langword="Nothing" /> in Visual Basic) if no inner exception is specified.</param>
    </member>
    <member name="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>Initializes a new instance of the <see cref="T:System.Exception" /> class with serialized data.</summary>
      <param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</param>
      <param name="context">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that contains contextual information about the source or destination.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">The class name is <see langword="null" /> or <see cref="P:System.Exception.HResult" /> is zero (0).</exception>
    </member>
    <member name="P:WpfApp.Core.Exceptions.AttributeNotFoundException.AttributeName">
      <summary>Gets the name of the attribute.</summary>
      <value>The name of the attribute.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AttributeName
        </member>
    <member name="T:WpfApp.Core.Exceptions.InfoContextFactoryAttribute">
      <summary>
      </summary>
      <seealso cref="T:System.Attribute" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for InfoContextFactoryAttribute
        </member>
    <member name="T:WpfApp.Core.Interfaces.IObjectId">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for IObjectId
        </member>
    <member name="P:WpfApp.Core.Interfaces.IObjectId.InstanceObjectId">
      <summary>Gets the instance object identifier.</summary>
      <value>The instance object identifier.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceObjectId
        </member>
    <member name="T:WpfApp.Core.Interfaces.IHasId">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for IHasId
        </member>
    <member name="P:WpfApp.Core.Interfaces.IHasId.ObjectId">
      <summary>Gets the object identifier.</summary>
      <value>The object identifier.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ObjectId
        </member>
    <member name="T:WpfApp.Core.Interfaces.IHaveLifetimeScope">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for IHaveLifetimeScope
        </member>
    <member name="P:WpfApp.Core.Interfaces.IHaveLifetimeScope.LifetimeScope">
      <summary>Gets or sets the lifetime scope.</summary>
      <value>The lifetime scope.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScope
        </member>
    <member name="T:WpfApp.Core.Interfaces.IHaveLogger">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for IHaveLogger
        </member>
    <member name="P:WpfApp.Core.Interfaces.IHaveLogger.Logger">
      <summary>Gets or sets the logger.</summary>
      <value>The logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="T:WpfApp.Core.Interfaces.IHaveObjectId">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for IHaveObjectId
        </member>
    <member name="P:WpfApp.Core.Interfaces.IHaveObjectId.InstanceObjectId">
      <summary>Sets the instance object identifier.</summary>
      <value>The instance object identifier.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceObjectId
        </member>
    <member name="T:WpfApp.Core.Interfaces.ILoggerTracker">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ILoggerTracker
        </member>
    <member name="M:WpfApp.Core.Interfaces.ILoggerTracker.TrackLogger(System.String,NLog.ILogger)">
      <summary>Tracks the logger.</summary>
      <param name="loggerName">Name of the logger.</param>
      <param name="logger">The logger.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TrackLogger
        </member>
    <member name="E:WpfApp.Core.Interfaces.ILoggerTracker.LoggerRegistered">
      <summary>Occurs when [logger registered].</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerRegistered
        </member>
    <member name="T:WpfApp.Core.Interfaces.IMenuItem">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Input.ICommandSource" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for IMenuItem
        </member>
    <member name="P:WpfApp.Core.Interfaces.IMenuItem.Header">
      <summary>Gets or sets the header.</summary>
      <value>The header.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Header
        </member>
    <member name="P:WpfApp.Core.Interfaces.IMenuItem.CommandParameter">
      <summary>Gets or sets the command parameter.</summary>
      <value>The command parameter.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CommandParameter
        </member>
    <member name="P:WpfApp.Core.Interfaces.IMenuItem.Command">
      <summary>Gets or sets the command.</summary>
      <value>The command.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Command
        </member>
    <member name="P:WpfApp.Core.Interfaces.IMenuItem.Children">
      <summary>Gets or sets the children.</summary>
      <value>The children.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Children
        </member>
    <member name="T:WpfApp.Core.Interfaces.IMenuItemList">
      <summary>
      </summary>
      <seealso cref="T:System.Collections.Generic.IList`1" />
      <seealso cref="T:System.Collections.IList" />
      <seealso cref="T:System.Collections.Generic.IReadOnlyList`1" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for IMenuItemList
        </member>
    <member name="T:WpfApp.Core.Interfaces.IObjectIdProvider">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for IObjectIdProvider
        </member>
    <member name="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)">
      <summary>Gets the instance by component registration.</summary>
      <param name="reg">The reg.</param>
      <returns>
      </returns>
    </member>
    <member name="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)">
      <summary>Gets the instance count.</summary>
      <param name="reg">The reg.</param>
      <returns>
      </returns>
    </member>
    <member name="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstances">
      <summary>Gets the object instances.</summary>
      <returns>
      </returns>
    </member>
    <member name="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstanceIdentifier(System.Object)">
      <summary>Gets the object instance identifier.</summary>
      <param name="instance">The instance.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetObjectInstanceIdentifier
        </member>
    <member name="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectById(System.Object)">
      <summary>
        <para>
                    Gets the object by identifier.
                </para>
      </summary>
      <param name="id">The identifier.</param>
      <returns>
      </returns>
    </member>
    <member name="M:WpfApp.Core.Interfaces.IObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <summary>Provides the object instance identifier.</summary>
      <param name="instance">The instance.</param>
      <param name="eComponent">The e component.</param>
      <param name="parameters">The parameters.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProvideObjectInstanceIdentifier
        </member>
    <member name="T:WpfApp.Core.Interfaces.ITopLevelMenu">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ITopLevelMenu
        </member>
    <member name="M:WpfApp.Core.Interfaces.ITopLevelMenu.GetXMenuItem">
      <summary>Gets the x menu item.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetXMenuItem
        </member>
    <member name="T:WpfApp.Core.Interfaces.LoggerEventArgs">
      <summary>
      </summary>
      <seealso cref="T:System.EventArgs" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerEventArgs
        </member>
    <member name="M:WpfApp.Core.Interfaces.LoggerEventArgs.#ctor(NLog.ILogger)">
      <summary>
                Initializes a new instance of the <see cref="T:System.EventArgs" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Interfaces.LoggerEventArgs.Logger">
      <summary>Gets the logger.</summary>
      <value>The logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="T:WpfApp.Core.Interfaces.LoggerRegisteredEventHandler">
      <summary>
      </summary>
      <param name="sender">The sender.</param>
      <param name="args">The <see cref="T:WpfApp.Core.Interfaces.LoggerEventArgs" /> instance containing the event data.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerRegisteredEventHandler
        </member>
    <member name="T:WpfApp.Core.Interfaces.MyLogBuilder">
      <summary>
      </summary>
      <seealso cref="T:NLog.Fluent.LogBuilder" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MyLogBuilder
        </member>
    <member name="M:WpfApp.Core.Interfaces.MyLogBuilder.#ctor(NLog.ILogger)">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Core.Interfaces.MyLogBuilder" /> class.
            </summary>
      <param name="logger">The <see cref="T:NLog.Logger" /> to send the log event.</param>
    </member>
    <member name="M:WpfApp.Core.Interfaces.MyLogBuilder.#ctor(NLog.ILogger,NLog.LogLevel)">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Core.Interfaces.MyLogBuilder" /> class.
            </summary>
      <param name="logger">The <see cref="T:NLog.Logger" /> to send the log event.</param>
      <param name="logLevel">The <see cref="T:NLog.LogLevel" /> for the log event.</param>
    </member>
    <member name="T:WpfApp.Core.Logging.AppLoggerContainer">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AppLoggerContainer
        </member>
    <member name="M:WpfApp.Core.Logging.AppLoggerContainer.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Logging.AppLoggerContainer.AppLogger">
      <summary>Gets or sets the application logger.</summary>
      <value>The application logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AppLogger
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggerContainer.InternalLog">
      <summary>Gets the internal log.</summary>
      <value>The internal log.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InternalLog
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggerContainer.Configuration">
      <summary>Gets the configuration.</summary>
      <value>The configuration.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Configuration
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggerContainer.Config">
      <summary>Gets the configuration.</summary>
      <value>The configuration.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Config
        </member>
    <member name="T:WpfApp.Core.Logging.NLogTargetConverter">
      <summary>
      </summary>
      <seealso cref="T:System.ComponentModel.TypeConverter" />
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetConverter
        </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <summary>
                Creates an instance of the type that this
                <see cref="T:System.ComponentModel.TypeConverter" /> is associated with,
                using the specified context, given a set of property values for the
                object.
            </summary>
      <param name="context">
                An
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that
                provides
                a format context.
            </param>
      <param name="propertyValues">
                An <see cref="T:System.Collections.IDictionary" />
                of new property values.
            </param>
      <returns>
                An <see cref="T:System.Object" /> representing the given
                <see cref="T:System.Collections.IDictionary" />, or
                <see langword="null" />
                if the object cannot be created. This method always returns
                <see langword="null" />.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
      </summary>
      <returns>
                A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />
                with the properties that are exposed for this data type, or
                <see langword="null" /> if there are no properties.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Logging.AppLogger">
      <summary>
                Experimental class used as an attempt to initialize loggers
                through XAML.
            </summary>
      <seealso cref="T:System.Xaml.IAttachedPropertyStore" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AppLogger
        </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.#ctor(NLog.ILogger)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.#ctor(System.String)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Logging.AppLogger.Arg">
      <summary>Gets or sets the argument.</summary>
      <value>The argument.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Arg
        </member>
    <member name="P:WpfApp.Core.Logging.AppLogger.LoggerInstance">
      <summary>Gets or sets the logger instance.</summary>
      <value>The logger instance.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerInstance
        </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <summary>
                Copies all attachable member/value pairs from this attachable member
                store into a destination array.
            </summary>
      <param name="array">
                The destination array. The array is a generic array, should
                be passed undimensioned, and should have components of
                <see cref="T:System.Xaml.AttachableMemberIdentifier" /> and
                <see langword="object" />.
            </param>
      <param name="index">The source index where copying should begin.</param>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <summary>
                Removes the entry for the specified attachable member from this
                attachable member store.
            </summary>
      <param name="attachableMemberIdentifier">
                The XAML type system identifier for
                the attachable member entry to remove.
            </param>
      <returns>
        <see langword="true" /> if an attachable member entry for
                <paramref name="attachableMemberIdentifier" /> was found in the store
                and
                removed; otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <summary>
                Sets a value for the specified attachable member in the specified
                store.
            </summary>
      <param name="attachableMemberIdentifier">
                The XAML type system identifier for
                the attachable member entry to set.
            </param>
      <param name="value">The value to set.</param>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <summary>
                Attempts to get a value for the specified attachable member in the
                specified store.
            </summary>
      <param name="attachableMemberIdentifier">
                The XAML type system identifier for
                the attachable member entry to get.
            </param>
      <param name="value">
                Out parameter. When this method returns, contains the
                destination object for the value if
                <paramref name="attachableMemberIdentifier" /> exists in the store and
                has
                a value.
            </param>
      <returns>
        <see langword="true" /> if an attachable member entry for
                <paramref name="attachableMemberIdentifier" /> was found in the store
                and a
                value was posted to <paramref name="value" />; otherwise,
                <see langword="false" />.
            </returns>
    </member>
    <member name="P:WpfApp.Core.Logging.AppLogger.PropertyCount">
      <summary>
                Gets the count of the attachable member entries in this attachable
                member store.
            </summary>
      <returns>The integer count of entries in the store.</returns>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLogger.GetLoggerInstance(System.Object)">
      <summary>Gets the logger instance.</summary>
      <param name="target">The target.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetLoggerInstance
        </member>
    <member name="T:WpfApp.Core.Logging.LoggerTracker">
      <summary>
      </summary>
      <seealso cref="T:WpfApp.Core.Interfaces.ILoggerTracker" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerTracker
        </member>
    <member name="F:WpfApp.Core.Logging.LoggerTracker._Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for _Logger
        </member>
    <member name="F:WpfApp.Core.Logging.LoggerTracker.loggers">
      <summary>The loggers</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for loggers
        </member>
    <member name="P:WpfApp.Core.Logging.LoggerTracker.Logger">
      <summary>Gets the logger.</summary>
      <value>The logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="M:WpfApp.Core.Logging.LoggerTracker.TrackLogger(System.String,NLog.ILogger)">
      <summary>Tracks the logger.</summary>
      <param name="loggerName">Name of the logger.</param>
      <param name="logger">The logger.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TrackLogger
        </member>
    <member name="E:WpfApp.Core.Logging.LoggerTracker.LoggerRegistered">
      <summary>Occurs when [logger registered].</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerRegistered
        </member>
    <member name="M:WpfApp.Core.Logging.LoggerTracker.OnLoggerRegistered(WpfApp.Core.Interfaces.LoggerEventArgs)">
      <summary>Raises the <see cref="E:WpfApp.Core.Logging.LoggerTracker.LoggerRegistered" /> event.</summary>
      <param name="args">
                The <see cref="T:WpfApp.Core.Interfaces.LoggerEventArgs" /> instance containing
                the event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnLoggerRegistered
        </member>
    <member name="T:WpfApp.Core.Logging.LoggingEntityMetadataAttribute">
      <summary>
      </summary>
      <seealso cref="T:System.Attribute" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggingEntityMetadataAttribute
        </member>
    <member name="M:WpfApp.Core.Logging.LoggingEntityMetadataAttribute.#ctor(System.Type)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Attribute" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Logging.LoggingEntityMetadataAttribute.LoggingType">
      <summary>Gets the type of the logging.</summary>
      <value>The type of the logging.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggingType
        </member>
    <member name="T:WpfApp.Core.Logging.MyCacheTarget">
      <summary>
      </summary>
      <seealso cref="T:NLog.Targets.Target" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MyCacheTarget
        </member>
    <member name="M:WpfApp.Core.Logging.MyCacheTarget.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Logging.MyCacheTarget" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Logging.MyCacheTarget.GetInstance(System.Int32)">
      <summary>
                If there is no target in NLog.config defined a new one is registered
                with
                the default maxCount
            </summary>
      <param name="defaultMaxCount">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:WpfApp.Core.Logging.MyCacheTarget.Write(NLog.LogEventInfo)">
      <summary>Writes logging event to the log target. Must be overridden in inheriting
            classes.</summary>
      <param name="logEvent">Logging event to be written out.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Write
        </member>
    <member name="P:WpfApp.Core.Logging.MyCacheTarget.MaxCount">
      <summary>
                The maximum amount of entries held
            </summary>
    </member>
    <member name="P:WpfApp.Core.Logging.MyCacheTarget.Cache">
      <summary>Gets the cache.</summary>
      <value>The cache.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Cache
        </member>
    <member name="T:WpfApp.Core.Logging.AppLoggingConfigHelper">
      <summary>
      </summary>
      <seealso cref="T:NLog.Config.LoggingConfiguration" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AppLoggingConfigHelper
            TODO should not use inheritance
        </member>
    <member name="F:WpfApp.Core.Logging.AppLoggingConfigHelper.StringWriter">
      <summary>The string writer</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for StringWriter
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggingConfigHelper.logFactory">
      <summary>Gets or sets the log factory.</summary>
      <value>The log factory.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for logFactory
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggingConfigHelper.DebuggerTargetEnabled">
      <summary>Gets or sets a value indicating whether [debugger target enabled].</summary>
      <value>
        <see language="true" /> if [debugger target enabled]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DebuggerTargetEnabled
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggingConfigHelper.LoggingIsConfigured">
      <summary>Gets or sets a value indicating whether [logging is configured].</summary>
      <value>
        <see language="true" /> if [logging is configured]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggingIsConfigured
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggingConfigHelper.DumpExistingConfig">
      <summary>Gets or sets a value indicating whether [dump existing configuration].</summary>
      <value>
        <see language="true" /> if [dump existing configuration]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DumpExistingConfig
        </member>
    <member name="P:WpfApp.Core.Logging.AppLoggingConfigHelper.ForceCodeConfig">
      <summary>Gets or sets a value indicating whether [force code configuration].</summary>
      <value>
        <see language="true" /> if [force code configuration]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ForceCodeConfig
        </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.JsonFileTarget">
      <summary>JSON File Target</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for JsonFileTarget
        </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.MyFileTarget">
      <summary>My File Target.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MyFileTarget
        </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.RemoveTarget(NLog.Targets.Target)">
      <summary>Removes the target.</summary>
      <param name="target">The target.</param>
      <exception cref="T:System.ArgumentNullException">target</exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveTarget
        </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.EnsureLoggingConfigured(WpfApp.Core.Logging.LogDelegates.LogMethod,System.String)">
      <summary>Ensures the logging configured.</summary>
      <param name="logMethod">The log method.</param>
      <param name="callerFilePath">The caller file path.</param>
      <exception cref="T:System.Exception">no config loaded field found</exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for EnsureLoggingConfigured
        </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.AddTarget(NLog.Targets.Target,NLog.LogLevel)">
      <summary>Adds the supplied target to the current NLog configuration.</summary>
      <param name="target">The target.</param>
      <param name="minLevel">
      </param>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.RemoveTarget(System.String)">
      <summary>Removes a target by name from the current NLog configuration.</summary>
      <param name="name">The name of the target to remove.</param>
    </member>
    <member name="M:WpfApp.Core.Logging.AppLoggingConfigHelper.SetupJsonLayout">
      <summary>Set up a <seealso cref="T:NLog.Layouts.JsonLayout" /> for json loggers.</summary>
      <returns>Configured JSON layout</returns>
    </member>
    <member name="T:WpfApp.Core.Logging.CodeConfiguration">
      <summary>
      </summary>
      <seealso cref="T:NLog.Config.LoggingConfiguration" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for CodeConfiguration
        </member>
    <member name="M:WpfApp.Core.Logging.CodeConfiguration.#ctor">
      <summary>
                Initializes a new instance of the
                <see cref="T:NLog.Config.LoggingConfiguration" /> class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Logging.CodeConfiguration.#ctor(NLog.LogFactory)">
      <summary>
                Initializes a new instance of the
                <see cref="T:NLog.Config.LoggingConfiguration" /> class.
            </summary>
    </member>
    <member name="T:WpfApp.Core.Logging.LogDelegates">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LogDelegates
        </member>
    <member name="T:WpfApp.Core.Logging.LogDelegates.LogMethod">
      <summary>
      </summary>
      <param name="message">The message.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LogMethod
        </member>
    <member name="T:WpfApp.Core.Logging.LogDelegates.LogMethod2">
      <summary>
      </summary>
      <param name="message">The message.</param>
      <param name="callerMemberName">Name of the caller member.</param>
      <param name="callerFilePath">The caller file path.</param>
      <param name="callerLineNumber">The caller line number.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LogMethod2
        </member>
    <member name="T:WpfApp.Core.Logging.LogFactoryInterceptor">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LogFactoryInterceptor
        </member>
    <member name="M:WpfApp.Core.Logging.LogFactoryInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator,WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Logging.LogFactoryInterceptor" /> class.</summary>
      <param name="generator">The generator.</param>
      <param name="useLogMethod">The use log method.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Logging.LogFactoryInterceptor.Generator">
      <summary>Gets the generator.</summary>
      <value>The generator.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Generator
        </member>
    <member name="P:WpfApp.Core.Logging.LogFactoryInterceptor.UseLogMethod">
      <summary>Gets the use log method.</summary>
      <value>The use log method.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for UseLogMethod
        </member>
    <member name="M:WpfApp.Core.Logging.LogFactoryInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Core.Logging.MyLogFactory">
      <summary>
      </summary>
      <seealso cref="T:NLog.LogFactory" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MyLogFactory
        </member>
    <member name="M:WpfApp.Core.Logging.MyLogFactory.#ctor">
      <summary>Initializes a new instance of the <see cref="T:NLog.LogFactory" />
              class.</summary>
    </member>
    <member name="M:WpfApp.Core.Logging.MyLogFactory.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Logging.MyLogFactory" /> class.</summary>
      <param name="doLogMessage">The do log message.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Logging.MyLogFactory.GetDoLogMessage">
      <summary>Gets the do log message.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetDoLogMessage
        </member>
    <member name="M:WpfApp.Core.Logging.MyLogFactory.GetLogger(System.String)">
      <summary>Gets the specified named logger.</summary>
      <param name="name">Name of the logger.</param>
      <returns>The logger reference. Multiple calls to <see language="1" /> with the same argument
            are not guaranteed to return the same logger reference.</returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetLogger
        </member>
    <member name="N:WpfApp.Core">
      <summary>Core class library namespace</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="T:WpfApp.Core.Events.AttachedEvents">
      <summary>Class containing attach events.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AttachedEvents
        </member>
    <member name="T:WpfApp.Core.Events.AttachedEvents.LoggerRegisteredEventHandler">
      <summary>
      </summary>
      <param name="sender">The sender.</param>
      <param name="e">The <see cref="T:WpfApp.Core.Events.LoggerRegisteredEventArgs" /> instance containing the event data.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerRegisteredEventHandler
        </member>
    <member name="T:WpfApp.Core.Events.LoggerRegisteredEventArgs">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.RoutedEventArgs" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerRegisteredEventArgs
        </member>
    <member name="M:WpfApp.Core.Events.LoggerRegisteredEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,NLog.ILogger)">
      <summary>
                Initializes a new instance of the
                <see cref="T:WpfApp.Core.Events.LoggerRegisteredEventArgs" /> class.
            </summary>
      <param name="routedEvent">The routed event.</param>
      <param name="source">The source.</param>
      <param name="logger">The logger.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Events.LoggerRegisteredEventArgs.Logger">
      <summary>Gets the logger.</summary>
      <value>The logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="T:WpfApp.Core.Menus.MenuHelper">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuHelper
        </member>
    <member name="M:WpfApp.Core.Menus.MenuHelper.MakeMenuItem(WpfApp.Core.Interfaces.IMenuItem)">
      <summary>Makes the menu item.</summary>
      <param name="arg">The argument.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MakeMenuItem
        </member>
    <member name="T:WpfApp.Core.Menus.MenuItemContainerStyleSelector">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Controls.StyleSelector" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuItemContainerStyleSelector
        </member>
    <member name="M:WpfApp.Core.Menus.MenuItemContainerStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
      <summary>When overridden in a derived class, returns a <see cref="T:System.Windows.Style" /> based on custom logic.</summary>
      <param name="item">The content.</param>
      <param name="container">The element to which the style will be applied.</param>
      <returns>
            Returns an application-specific style to apply; otherwise, <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>.
            </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SelectStyle
        </member>
    <member name="T:WpfApp.Core.Menus.MenuMenuItemTemplateSelector">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Controls.DataTemplateSelector" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuMenuItemTemplateSelector
        </member>
    <member name="M:WpfApp.Core.Menus.MenuMenuItemTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <summary>
                When overridden in a derived class, returns a
                <see cref="T:System.Windows.DataTemplate" /> based on custom logic.
            </summary>
      <param name="item">The data object for which to select the template.</param>
      <param name="container">The data-bound object.</param>
      <returns>
                Returns a <see cref="T:System.Windows.DataTemplate" /> or
                <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">
                    a null reference (<span class="keyword">Nothing</span>
                    in Visual Basic)
                </span>
                . The default value is
                <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">
                    a null reference (<span class="keyword">Nothing</span>
                    in Visual Basic)
                </span>
                .
            </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SelectTemplate
        </member>
    <member name="T:WpfApp.Core.Menus.MenuModule">
      <summary>Autofac module supporting menu system.</summary>
      <seealso cref="T:Autofac.Module" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuModule
        </member>
    <member name="M:WpfApp.Core.Menus.MenuModule.Load(Autofac.ContainerBuilder)">
      <summary>Override to add registrations to the container.</summary>
      <remarks>
                Note that the ContainerBuilder parameter is unique to this module.
            </remarks>
      <param name="builder">
                The builder through which components can be
                registered.
            </param>
    </member>
    <member name="T:WpfApp.Core.Menus.WindowsTopLevelMenu">
      <summary>
                Definition of primary top level menu
            </summary>
    </member>
    <member name="M:WpfApp.Core.Menus.WindowsTopLevelMenu.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{System.Lazy{System.Windows.Window}}},System.Func{WpfApp.Core.Interfaces.IMenuItem},System.Func{System.Type,NLog.ILogger})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Menus.WindowsTopLevelMenu" /> class.</summary>
      <param name="windows">The windows.</param>
      <param name="xMenuItemCreator">The x menu item creator.</param>
      <param name="func">The function.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Menus.WindowsTopLevelMenu.Windows">
      <summary>Gets the windows.</summary>
      <value>The windows.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Windows
        </member>
    <member name="M:WpfApp.Core.Menus.WindowsTopLevelMenu.GetXMenuItem">
      <summary>Gets the x menu item.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetXMenuItem
        </member>
    <member name="T:WpfApp.Core.Menus.XMenuItem">
      <summary>
      </summary>
      <seealso cref="T:WpfApp.Core.Interfaces.IMenuItem" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for XMenuItem
        </member>
    <member name="M:WpfApp.Core.Menus.XMenuItem.#ctor(Autofac.Features.OwnedInstances.Owned{System.Func{System.Type,NLog.ILogger}})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Menus.XMenuItem" /> class.</summary>
      <param name="func">The function.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Menus.XMenuItem.Logger">
      <summary>Gets the logger.</summary>
      <value>The logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="P:WpfApp.Core.Menus.XMenuItem.Header">
      <summary>Gets or sets the header.</summary>
      <value>The header.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Header
        </member>
    <member name="P:WpfApp.Core.Menus.XMenuItem.Children">
      <summary>Gets or sets the children.</summary>
      <value>The children.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Children
        </member>
    <member name="P:WpfApp.Core.Menus.XMenuItem.Command">
      <summary>Gets or sets the command.</summary>
      <value>The command.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Command
        </member>
    <member name="P:WpfApp.Core.Menus.XMenuItem.CommandParameter">
      <summary>Gets or sets the command parameter.</summary>
      <value>The command parameter.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CommandParameter
        </member>
    <member name="P:WpfApp.Core.Menus.XMenuItem.CommandTarget">
      <summary>The object that the command is being executed on.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CommandTarget
        </member>
    <member name="M:WpfApp.Core.Menus.XMenuItem.ToString">
      <summary>Converts to string.</summary>
      <returns>A <see cref="T:System.String" /> that represents this instance.</returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ToString
        </member>
    <member name="T:WpfApp.Core.Xaml.AssemblyConverter">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssemblyConverter
        </member>
    <member name="M:WpfApp.Core.Xaml.AssemblyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Xaml.AssemblyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Xaml.ResolveService">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.FrameworkElement" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResolveService
        </member>
    <member name="F:WpfApp.Core.Xaml.ResolveService.LifetimeScopeProperty">
      <summary>The lifetime scope property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScopeProperty
        </member>
    <member name="F:WpfApp.Core.Xaml.ResolveService.ServiceInstanceChangedEvent">
      <summary>The service instance changed event</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceInstanceChangedEvent
        </member>
    <member name="F:WpfApp.Core.Xaml.ResolveService.ServiceInstanceProperty">
      <summary>The service instance property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceInstanceProperty
        </member>
    <member name="P:WpfApp.Core.Xaml.ResolveService.ServiceType">
      <summary>Gets or sets the type of the service.</summary>
      <value>The type of the service.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceType
        </member>
    <member name="P:WpfApp.Core.Xaml.ResolveService.ServiceInstance">
      <summary>Gets or sets the service instance.</summary>
      <value>The service instance.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceInstance
        </member>
    <member name="P:WpfApp.Core.Xaml.ResolveService.Service">
      <summary>Gets or sets the service.</summary>
      <value>The service.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Service
        </member>
    <member name="E:WpfApp.Core.Xaml.ResolveService.ServiceInstanceChanged">
      <summary>Occurs when [service instance changed].</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServiceInstanceChanged
        </member>
    <member name="M:WpfApp.Core.Xaml.ResolveService.OnInitialized(System.EventArgs)">
      <summary>
                Raises the
                <see cref="E:System.Windows.FrameworkElement.Initialized" /> event. This
                method is invoked whenever
                <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to
                <see langword="true " />internally.
            </summary>
      <param name="e">
                The <see cref="T:System.Windows.RoutedEventArgs" /> that
                contains the event data.
            </param>
    </member>
    <member name="T:WpfApp.Core.Xaml.LifetimeScopeExtension">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Markup.MarkupExtension" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScopeExtension
        </member>
    <member name="M:WpfApp.Core.Xaml.LifetimeScopeExtension.#ctor">
      <summary>
                Initializes a new instance of the
                <see cref="T:WpfApp.Core.Xaml.LifetimeScopeExtension" /> class.
            </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Xaml.LifetimeScopeExtension.ProvideValue(System.IServiceProvider)">
      <summary>
                When implemented in a derived class, returns an object that is
                provided as the value of the target property for this markup extension.
            </summary>
      <param name="serviceProvider">
                A service provider helper that can provide
                services for the markup extension.
            </param>
      <returns>
                The object value to set on the property where the extension is
                applied.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Xaml.ObjectIdExtension">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Markup.MarkupExtension" />
    </member>
    <member name="P:WpfApp.Core.Xaml.ObjectIdExtension.Target">
      <summary>Gets or sets the target.</summary>
      <value>The target.</value>
    </member>
    <member name="P:WpfApp.Core.Xaml.ObjectIdExtension.LifetimeScope">
      <summary>Gets or sets the lifetime scope.</summary>
      <value>The lifetime scope.</value>
    </member>
    <member name="M:WpfApp.Core.Xaml.ObjectIdExtension.ProvideValue(System.IServiceProvider)">
      <summary>
                When implemented in a derived class, returns an object that is
                provided as the value of the target property for this markup extension.
            </summary>
      <param name="serviceProvider">
                A service provider helper that can provide
                services for the markup extension.
            </param>
      <returns>
                The object value to set on the property where the extension is
                applied.
            </returns>
    </member>
    <member name="T:WpfApp.Core.AssemblyList">
      <summary>
      </summary>
      <seealso cref="T:System.Collections.ObjectModel.ObservableCollection`1" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssemblyList
        </member>
    <member name="M:WpfApp.Core.AssemblyList.#ctor">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.AssemblyList.#ctor(System.Collections.Generic.List{System.Reflection.Assembly})">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class that contains elements copied from the specified list.
            </summary>
      <param name="list">The list from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">
                The <paramref name="list" />
                parameter cannot be <see langword="null" />.
            </exception>
    </member>
    <member name="M:WpfApp.Core.AssemblyList.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class that contains elements copied from the specified collection.
            </summary>
      <param name="collection">The collection from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">
                The
                <paramref name="collection" /> parameter cannot be
                <see langword="null" />.
            </exception>
    </member>
    <member name="T:WpfApp.Core.CustomResourceLoader">
      <summary>
      </summary>
      <seealso />
      <autogeneratedoc />
            TODO Edit XML Comment Template for CustomResourceLoader
        </member>
    <member name="M:WpfApp.Core.CustomResourceLoader.#ctor(System.Type,System.Xaml.XamlType)">
      <summary>
                Initializes a new instance of the
                System.Xaml.Schema.XamlValueConverter`1 class, based on
                a
                converter implementing <see cref="T:System.Type" /> and the
                target/destination type of the
                System.Xaml.Schema.XamlValueConverter`1.
            </summary>
      <param name="converterType">
                The <see cref="T:System.Type" /> that implements
                the converter behavior.
            </param>
      <param name="targetType">
                The target/destination
                <see cref="T:System.Xaml.XamlType" /> of the
                System.Xaml.Schema.XamlValueConverter`1.
            </param>
    </member>
    <member name="M:WpfApp.Core.CustomResourceLoader.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <summary>
                Initializes a new instance of the
                System.Xaml.Schema.XamlValueConverter`1 class, based on
                a
                converter implementing <see cref="T:System.Type" /> the
                target/destination
                type of the System.Xaml.Schema.XamlValueConverter`1,
                and a
                string name.
            </summary>
      <param name="converterType">
                The <see cref="T:System.Type" /> that implements
                the converter behavior.
            </param>
      <param name="targetType">
                The target/destination
                <see cref="T:System.Xaml.XamlType" /> of the
                System.Xaml.Schema.XamlValueConverter`1.
            </param>
      <param name="name">The string name.</param>
      <exception cref="T:System.ArgumentException">
                All three parameters are
                <see langword="null" /> (at least one is required to be non-null).
            </exception>
    </member>
    <member name="M:WpfApp.Core.CustomResourceLoader.CreateInstance">
      <summary>Returns an instance of the converter implementation.</summary>
      <returns>
                An instance of the converter implementation, or
                <see langword="null" />.
            </returns>
      <exception cref="T:System.Xaml.XamlSchemaException">
                Converter did not implement
                the correct base type.
            </exception>
    </member>
    <member name="T:WpfApp.Core.Infos.ComponentInfo">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ComponentInfo
        </member>
    <member name="P:WpfApp.Core.Infos.ComponentInfo.Instances">
      <summary>Gets the instances.</summary>
      <value>The instances.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Instances
        </member>
    <member name="T:WpfApp.Core.Infos.ContextStack`1">
      <summary>
      </summary>
      <typeparam name="T">
      </typeparam>
      <seealso cref="T:System.Collections.Generic.Stack`1" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ContextStack`1
        </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.#ctor">
      <summary>
                Initializes a new instance of the
                System.Collections.Generic.Stack`1 class that is empty
                and
                has the default initial capacity.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Boolean)">
      <summary>
                Initializes a new instance of the
                System.Collections.Generic.Stack`1 class that is empty
                and
                has the default initial capacity.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Int32)">
      <summary>
                Initializes a new instance of the
                System.Collections.Generic.Stack`1 class that is empty
                and
                has the specified initial capacity or the default initial capacity,
                whichever is greater.
            </summary>
      <param name="capacity">
                The initial number of elements that the
                System.Collections.Generic.Stack`1 can contain.
            </param>
      <exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="capacity" /> is less than zero.
            </exception>
    </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <summary>
                Initializes a new instance of the
                System.Collections.Generic.Stack`1 class that contains
                elements copied from the specified collection and has sufficient
                capacity
                to accommodate the number of elements copied.
            </summary>
      <param name="collection">The collection to copy elements from.</param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="collection" /> is <see langword="null" />.
            </exception>
    </member>
    <member name="P:WpfApp.Core.Infos.ContextStack`1.AllowDuplicateNames">
      <summary>Gets a value indicating whether [allow duplicate names].</summary>
      <value>
        <see language="true" /> if [allow duplicate names]; otherwise, <see language="false" />.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AllowDuplicateNames
        </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.Push(`0)">
      <summary>Inserts an object at the top of the System.Collections.Generic.Stack`1.</summary>
      <param name="item">
            The object to push onto the System.Collections.Generic.Stack`1. The value can be <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span> for reference types.
            </param>
      <exception cref="T:WpfApp.Core.Exceptions.DuplicateKeyException">
      </exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Push
        </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.ToOrderedDictionary">
      <summary>Converts to ordered-dictionary.</summary>
      <returns>
      </returns>
      <exception cref="T:WpfApp.Core.Exceptions.DuplicateKeyException">
      </exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ToOrderedDictionary
        </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.Add(`0)">
      <summary>Adds an item to the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to add to the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="M:WpfApp.Core.Infos.ContextStack`1.Remove(`0)">
      <summary>Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.</summary>
      <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
      <returns>
        <see langword="true" /> if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, <see langword="false" />. This method also returns <see langword="false" /> if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
      <exception cref="T:System.NotSupportedException">The <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</exception>
    </member>
    <member name="P:WpfApp.Core.Infos.ContextStack`1.IsReadOnly">
      <summary>Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.</summary>
      <returns>
        <see langword="true" /> if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, <see langword="false" />.</returns>
    </member>
    <member name="T:WpfApp.Core.Infos.InfoContext">
      <summary>
      </summary>
      <seealso cref="T:System.Object" />
      <seealso cref="T:System.Object" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for InfoContext
        </member>
    <member name="T:WpfApp.Core.Infos.InfoContext.Factory">
      <summary>Factory delegate for producing InfoContext objects.</summary>
      <param name="name">The name.</param>
      <param name="objectContext">The object context.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Factory
        </member>
    <member name="M:WpfApp.Core.Infos.InfoContext.#ctor(System.String,System.Object)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Infos.InfoContext" /> class.</summary>
      <param name="name">The name.</param>
      <param name="objectContext">The object context.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Infos.InfoContext.Name">
      <summary>Gets the name.</summary>
      <value>The name.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Name
        </member>
    <member name="P:WpfApp.Core.Infos.InfoContext.ObjectContext">
      <summary>Gets the object context.</summary>
      <value>The object context.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ObjectContext
        </member>
    <member name="M:WpfApp.Core.Infos.InfoContext.GetEnumerator">
      <summary>Returns an enumerator that iterates through the collection.</summary>
      <returns>An enumerator that can be used to iterate through the collection.</returns>
    </member>
    <member name="M:WpfApp.Core.Infos.InfoContext.System#Collections#IEnumerable#GetEnumerator">
      <summary>Returns an enumerator that iterates through a collection.</summary>
      <returns>
                An <see cref="T:System.Collections.IEnumerator" /> object that can be
                used to iterate through the collection.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Infos.InfoContext.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:WpfApp.Core.Infos.InstanceInfo">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceInfo
        </member>
    <member name="M:WpfApp.Core.Infos.InstanceInfo.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Infos.InstanceInfo.#ctor(System.Object,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Infos.InstanceInfo.Instance">
      <summary>Gets or sets the instance.</summary>
      <value>The instance.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Instance
        </member>
    <member name="P:WpfApp.Core.Infos.InstanceInfo.Parameters">
      <summary>Gets or sets the parameters.</summary>
      <value>The parameters.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Parameters
        </member>
    <member name="T:WpfApp.Core.Util.AttachedContext">
      <summary>
      </summary>
      <seealso cref="T:System.IDisposable" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AttachedContext
        </member>
    <member name="M:WpfApp.Core.Util.AttachedContext.#ctor(WpfApp.Core.Infos.ContextStack{WpfApp.Core.Infos.InfoContext},WpfApp.Core.Infos.InfoContext)">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Core.Util.AttachedContext" />
                class.
            </summary>
      <param name="contextStack">The context stack.</param>
      <param name="context">The context.</param>
      <exception cref="T:System.ArgumentNullException">contextStack</exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.AttachedContext.Dispose">
      <summary>
                Performs application-defined tasks associated with freeing, releasing,
                or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Util.AttachedContext.Dispose(System.Boolean)">
      <summary>Releases unmanaged and - optionally - managed resources.</summary>
      <param name="b">
        <see language="1" /> to release both managed and unmanaged resources; <see language="false" /> to release only unmanaged resources.</param>
      <exception cref="T:WpfApp.Core.Util.ContextStackException">Empty stack - expected at least one element
            or</exception>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Dispose
        </member>
    <member name="T:WpfApp.Core.Util.ContextStackException">
      <summary>
      </summary>
      <seealso cref="T:System.Exception" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ContextStackException
        </member>
    <member name="M:WpfApp.Core.Util.ContextStackException.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Util.ContextStackException.#ctor(System.String)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message.
            </summary>
      <param name="message">The message that describes the error.</param>
    </member>
    <member name="M:WpfApp.Core.Util.ContextStackException.#ctor(System.String,System.Exception)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with a specified error message and a reference to the inner
                exception
                that is the cause of this exception.
            </summary>
      <param name="message">
                The error message that explains the reason for the
                exception.
            </param>
      <param name="innerException">
                The exception that is the cause of the current
                exception, or a null reference (<see langword="Nothing" /> in Visual
                Basic)
                if no inner exception is specified.
            </param>
    </member>
    <member name="M:WpfApp.Core.Util.ContextStackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Exception" />
                class with serialized data.
            </summary>
      <param name="info">
                The
                <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that
                holds
                the serialized object data about the exception being thrown.
            </param>
      <param name="context">
                The
                <see cref="T:System.Runtime.Serialization.StreamingContext" /> that
                contains contextual information about the source or destination.
            </param>
      <exception cref="T:System.ArgumentNullException">
        <paramref name="info" /> is <see langword="null" />.
            </exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">
                The
                class name is <see langword="null" /> or
                <see cref="P:System.Exception.HResult" /> is zero (0).
            </exception>
    </member>
    <member name="T:WpfApp.Core.Util.SerializableDictionary`2">
      <summary>
      </summary>
      <typeparam name="TKey">The type of the key.</typeparam>
      <typeparam name="TValue">The type of the value.</typeparam>
      <seealso cref="T:System.Collections.Generic.Dictionary`2" />
      <seealso cref="T:System.Xml.Serialization.IXmlSerializable" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for SerializableDictionary`2
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Util.SerializableDictionary`2" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Util.SerializableDictionary`2" /> class.</summary>
      <param name="dictionary">The System.Collections.Generic.IDictionary`2 whose elements are copied to the new System.Collections.Generic.Dictionary`2.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Util.SerializableDictionary`2" /> class.</summary>
      <param name="dictionary">The System.Collections.Generic.IDictionary`2 whose elements are copied to the new System.Collections.Generic.Dictionary`2.</param>
      <param name="comparer">
            The System.Collections.Generic.IEqualityComparer`1 implementation to use when comparing keys, or <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span> to use the default System.Collections.Generic.EqualityComparer`1 for the type of the key.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Util.SerializableDictionary`2" /> class.</summary>
      <param name="comparer">
            The System.Collections.Generic.IEqualityComparer`1 implementation to use when comparing keys, or <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span> to use the default System.Collections.Generic.EqualityComparer`1 for the type of the key.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Util.SerializableDictionary`2" /> class.</summary>
      <param name="capacity">The initial number of elements that the System.Collections.Generic.Dictionary`2 can contain.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Util.SerializableDictionary`2" /> class.</summary>
      <param name="capacity">The initial number of elements that the System.Collections.Generic.Dictionary`2 can contain.</param>
      <param name="comparer">
            The System.Collections.Generic.IEqualityComparer`1 implementation to use when comparing keys, or <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span> to use the default System.Collections.Generic.EqualityComparer`1 for the type of the key.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.GetSchema">
      <summary>
            This method is reserved and should not be used. When implementing the <span class="keyword">IXmlSerializable</span> interface, you should return <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span> (<span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span> in Visual Basic) from this method, and instead, if specifying a custom schema is required, apply the <see cref="T:System.Xml.Serialization.XmlSchemaProviderAttribute" /> to the class.
            </summary>
      <returns>
            An <see cref="T:System.Xml.Schema.XmlSchema" /> that describes the XML representation of the object that is produced by the <see cref="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)" /> method and consumed by the <see cref="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)" /> method.
            </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetSchema
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
      <summary>Generates an object from its XML representation.</summary>
      <param name="reader">The <see cref="T:System.Xml.XmlReader" /> stream from which the object is deserialized.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ReadXml
        </member>
    <member name="M:WpfApp.Core.Util.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
      <summary>Converts an object into its XML representation.</summary>
      <param name="writer">The <see cref="T:System.Xml.XmlWriter" /> stream to which the object is serialized.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for WriteXml
        </member>
    <member name="T:WpfApp.Core.Debug.DebugUtils">
      <summary>Extension methods for debug output.</summary>
    </member>
    <member name="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.IComponentRegistration)">
      <summary>Debugs the format.</summary>
      <param name="reg">The reg.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DebugFormat
        </member>
    <member name="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.Service)">
      <summary>Debugs the format.</summary>
      <param name="service">The service.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DebugFormat
        </member>
    <member name="T:WpfApp.Core.Context.PushContextAttribute">
      <summary>
      </summary>
      <seealso cref="T:System.Attribute" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for PushContextAttribute
        </member>
    <member name="M:WpfApp.Core.Context.PushContextAttribute.#ctor(System.Object)">
      <summary>
                Initializes a new instance of the
                <see cref="T:WpfApp.Core.Context.PushContextAttribute" /> class.
            </summary>
      <param name="context">The context.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Context.PushContextAttribute.#ctor(System.String,System.String)">
      <summary>
                Initializes a new instance of the
                <see cref="T:WpfApp.Core.Context.PushContextAttribute" /> class.
            </summary>
      <param name="v1">The v1.</param>
      <param name="v2">The v2.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Context.PushContextAttribute.Context">
      <summary>Gets the context.</summary>
      <value>The context.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Context
        </member>
    <member name="P:WpfApp.Core.Context.PushContextAttribute.Instances">
      <summary>Gets or sets the instances.</summary>
      <value>The instances.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Instances
        </member>
    <member name="M:WpfApp.Core.Context.PushContextAttribute.After(System.Reflection.MethodInfo)">
      <summary>
                This method is called after the test method is executed.
            </summary>
      <param name="methodUnderTest">The method under test</param>
    </member>
    <member name="M:WpfApp.Core.Context.PushContextAttribute.Before(System.Reflection.MethodInfo)">
      <summary>
                This method is called before the test method is executed.
            </summary>
      <param name="methodUnderTest">The method under test</param>
    </member>
    <member name="T:WpfApp.Core.Converters.AssemblyConverter">
      <summary>
                Converts an assembly to an enumerable of the exported types in that
                assembly.
            </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssemblyConverter
        </member>
    <member name="M:WpfApp.Core.Converters.AssemblyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.AssemblyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Converters.ComponentLifetimeConverter">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ComponentLifetimeConverter
        </member>
    <member name="M:WpfApp.Core.Converters.ComponentLifetimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.ComponentLifetimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Converters.GetTypeConverter">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetTypeConverter
        </member>
    <member name="M:WpfApp.Core.Converters.GetTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.GetTypeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Converters.InstanceRegistrationConverter">
      <summary>
                IValueConverter implementation for converting instances of type
                InstanceRegistration to a list or enumerable of Type.
            </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
    </member>
    <member name="M:WpfApp.Core.Converters.InstanceRegistrationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>
                Converts a value of type <see cref="T:WpfApp.Core.Model.InstanceRegistration" /> to an
                Enumerable of Type.
            </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />,
                the valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.InstanceRegistrationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />,
                the valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Converters.RegistrationConverter">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for RegistrationConverter
        </member>
    <member name="F:WpfApp.Core.Converters.RegistrationConverter._appContainer">
      <summary>The application container</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for _appContainer
        </member>
    <member name="F:WpfApp.Core.Converters.RegistrationConverter._provider">
      <summary>The provider</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for _provider
        </member>
    <member name="M:WpfApp.Core.Converters.RegistrationConverter.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Converters.RegistrationConverter.#ctor(Autofac.ILifetimeScope,WpfApp.Core.Interfaces.IObjectIdProvider)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Core.Converters.RegistrationConverter" /> class.</summary>
      <param name="appContainer">The application container.</param>
      <param name="provider">The provider.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Core.Converters.RegistrationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />,
                the valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.RegistrationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
            A converted value. If the method returns <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">a null reference (<span class="keyword">Nothing</span> in Visual Basic)</span>, the valid null value is used.
            </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ConvertBack
        </member>
    <member name="T:WpfApp.Core.Converters.RegistrationConverter2">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for RegistrationConverter2
        </member>
    <member name="F:WpfApp.Core.Converters.RegistrationConverter2.Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="M:WpfApp.Core.Converters.RegistrationConverter2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.RegistrationConverter2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value.</summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns
                <span class="keyword"><span class="languageSpecificText"><span class="cs">null</span><span class="vb">Nothing</span><span class="cpp">nullptr</span></span></span><span class="nu">
                    a null reference (<span class="keyword">Nothing</span>
                    in Visual Basic)
                </span>
                , the valid null value is used.
            </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ConvertBack
        </member>
    <member name="T:WpfApp.Core.Converters.RegistrationSourceConverter">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for RegistrationSourceConverter
        </member>
    <member name="M:WpfApp.Core.Converters.RegistrationSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.RegistrationSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Converters.ResolveServiceConverter">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResolveServiceConverter
        </member>
    <member name="M:WpfApp.Core.Converters.ResolveServiceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.ResolveServiceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Converters.TargetConverter">
      <summary>
      </summary>
      <seealso cref="T:System.ComponentModel.TypeConverter" />
      <seealso cref="T:System.Windows.Data.IValueConverter" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for TargetConverter
        </member>
    <member name="M:WpfApp.Core.Converters.TargetConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.TargetConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.TargetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <summary>
                Returns whether this converter can convert the object to the specified
                type, using the specified context.
            </summary>
      <param name="context">
                An
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that
                provides
                a format context.
            </param>
      <param name="destinationType">
                A <see cref="T:System.Type" /> that represents
                the type you want to convert to.
            </param>
      <returns>
        <see langword="true" /> if this converter can perform the conversion;
                otherwise, <see langword="false" />.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.TargetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <summary>
                Converts the given value object to the specified type, using the
                specified context and culture information.
            </summary>
      <param name="context">
                An
                <see cref="T:System.ComponentModel.ITypeDescriptorContext" /> that
                provides
                a format context.
            </param>
      <param name="culture">
                A <see cref="T:System.Globalization.CultureInfo" />. If
                <see langword="null" /> is passed, the current culture is assumed.
            </param>
      <param name="value">The <see cref="T:System.Object" /> to convert.</param>
      <param name="destinationType">
                The <see cref="T:System.Type" /> to convert the
                <paramref name="value" /> parameter to.
            </param>
      <returns>
                An <see cref="T:System.Object" /> that represents the converted
                value.
            </returns>
      <exception cref="T:System.ArgumentNullException">
                The
                <paramref name="destinationType" /> parameter is <see langword="null" />
                .
            </exception>
      <exception cref="T:System.NotSupportedException">
                The conversion cannot be
                performed.
            </exception>
    </member>
    <member name="M:WpfApp.Core.Converters.TargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value produced by the binding source.</param>
      <param name="targetType">The type of the binding target property.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="M:WpfApp.Core.Converters.TargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <summary>Converts a value. </summary>
      <param name="value">The value that is produced by the binding target.</param>
      <param name="targetType">The type to convert to.</param>
      <param name="parameter">The converter parameter to use.</param>
      <param name="culture">The culture to use in the converter.</param>
      <returns>
                A converted value. If the method returns <see langword="null" />, the
                valid null value is used.
            </returns>
    </member>
    <member name="T:WpfApp.Core.Model.ComponentRegistration">
      <summary>
      </summary>
      <seealso cref="T:Autofac.Core.IComponentRegistration" />
      <seealso cref="T:System.Windows.Markup.IAddChild" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ComponentRegistration
        </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.#ctor(System.Guid,Autofac.Core.IInstanceActivator,Autofac.Core.IComponentLifetime,Autofac.Core.InstanceSharing,Autofac.Core.InstanceOwnership,System.Collections.Generic.IEnumerable{Autofac.Core.Service},System.Collections.Generic.IDictionary{System.String,System.Object},Autofac.Core.IComponentRegistration)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.#ctor(Autofac.Core.IComponentLifetime,Autofac.Core.InstanceSharing,Autofac.Core.InstanceOwnership,Autofac.Core.IComponentRegistration)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
            [ContentP
        </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.ServicesList">
      <summary>Gets or sets the services list.</summary>
      <value>The services list.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ServicesList
        </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Instances">
      <summary>Gets or sets the instances.</summary>
      <value>The instances.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Instances
        </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.IsAdapterForIndividualComponent">
      <summary>
                Gets a value indicating whether the registration is a 1:1 adapter on top
                of another component (e.g., Meta, Func, or Owned).
            </summary>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.Dispose">
      <summary>
                Performs application-defined tasks associated with freeing, releasing,
                or resetting unmanaged resources.
            </summary>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.RaisePreparing(Autofac.IComponentContext,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter}@)">
      <summary>Called by the container when an instance is required.</summary>
      <param name="context">The context in which the instance will be activated.</param>
      <param name="parameters">
                Parameters for activation. These may be modified by
                the event handler.
            </param>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.RaiseActivating(Autofac.IComponentContext,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter},System.Object@)">
      <summary>
                Called by the container once an instance has been constructed.
            </summary>
      <param name="context">The context in which the instance was activated.</param>
      <param name="parameters">The parameters supplied to the activator.</param>
      <param name="instance">The instance.</param>
    </member>
    <member name="M:WpfApp.Core.Model.ComponentRegistration.RaiseActivated(Autofac.IComponentContext,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter},System.Object)">
      <summary>
                Called by the container once an instance has been fully constructed,
                including
                any requested objects that depend on the instance.
            </summary>
      <param name="context">The context in which the instance was activated.</param>
      <param name="parameters">The parameters supplied to the activator.</param>
      <param name="instance">The instance.</param>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Id">
      <summary>
                Gets a unique identifier for this component (shared in all
                sub-contexts.)
                This value also appears in Services.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Activator">
      <summary>Gets the activator used to create instances.</summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Lifetime">
      <summary>Gets the lifetime associated with the component.</summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Sharing">
      <summary>
                Gets a value indicating whether the component instances are shared or
                not.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Ownership">
      <summary>
                Gets a value indicating whether the instances of the component should be
                disposed by the container.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Services">
      <summary>Gets the services provided by the component.</summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Metadata">
      <summary>Gets additional data associated with the component.</summary>
    </member>
    <member name="P:WpfApp.Core.Model.ComponentRegistration.Target">
      <summary>
                Gets the component registration upon which this registration is based.
            </summary>
    </member>
    <member name="E:WpfApp.Core.Model.ComponentRegistration.Preparing">
      <summary>
                Fired when a new instance is required, prior to activation.
                Can be used to provide Autofac with additional parameters, used during
                activation.
            </summary>
    </member>
    <member name="E:WpfApp.Core.Model.ComponentRegistration.Activating">
      <summary>
                Fired when a new instance is being activated. The instance can be
                wrapped or switched at this time by setting the Instance property in
                the provided event arguments.
            </summary>
    </member>
    <member name="E:WpfApp.Core.Model.ComponentRegistration.Activated">
      <summary>
                Fired when the activation process for a new instance is complete.
            </summary>
    </member>
    <member name="T:WpfApp.Core.Model.InstanceRegistration">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceRegistration
        </member>
    <member name="M:WpfApp.Core.Model.InstanceRegistration.#ctor(System.Object,System.Object,WpfApp.Core.Infos.InstanceInfo)">
      <summary>
                Initializes a new instance of the
                <see cref="T:WpfApp.Core.Model.InstanceRegistration" /> class.
            </summary>
      <param name="instance">The instance.</param>
      <param name="objectId">The object identifier.</param>
      <param name="instanceInfo">The instance information.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Core.Model.InstanceRegistration.Instance">
      <summary>Gets the instance.</summary>
      <value>The instance.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Instance
        </member>
    <member name="P:WpfApp.Core.Model.InstanceRegistration.ObjectId">
      <summary>Gets the object identifier.</summary>
      <value>The object identifier.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ObjectId
        </member>
    <member name="P:WpfApp.Core.Model.InstanceRegistration.InstanceInfo">
      <summary>Gets the instance information.</summary>
      <value>The instance information.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceInfo
        </member>
    <member name="P:WpfApp.Core.Model.InstanceRegistration.Type">
      <summary>Gets the type.</summary>
      <value>The type.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Type
        </member>
    <member name="M:WpfApp.Core.Model.InstanceRegistration.ToString">
      <summary>Returns a string that represents the current object.</summary>
      <returns>A string that represents the current object.</returns>
    </member>
    <member name="T:WpfApp.Core.Model.MenuItemList">
      <summary>
      </summary>
      <seealso cref="T:System.Collections.ObjectModel.ObservableCollection`1" />
      <seealso cref="T:WpfApp.Core.Interfaces.IMenuItemList" />
      <seealso cref="T:WpfApp.Core.Interfaces.IHaveLogger" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for MenuItemList
        </member>
    <member name="M:WpfApp.Core.Model.MenuItemList.#ctor(System.Collections.Generic.IEnumerable{WpfApp.Core.Interfaces.ITopLevelMenu},System.Func{System.Type,NLog.ILogger})">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Core.Model.MenuItemList" />
                class.
            </summary>
      <param name="topLevelMenus">The top level menus.</param>
      <param name="loggerFunc">The logger function.</param>
    </member>
    <member name="P:WpfApp.Core.Model.MenuItemList.Logger">
      <summary>Gets or sets the logger.</summary>
      <value>The logger.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="T:WpfApp.Core.Model.MethodInvocation">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MethodInvocation
        </member>
    <member name="M:WpfApp.Core.Model.MethodInvocation.#ctor(System.Reflection.MethodInfo,System.Object[],System.Object,System.Object)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Model.MethodInvocation.Method">
      <summary>Gets or sets the method.</summary>
      <value>The method.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Method
        </member>
    <member name="P:WpfApp.Core.Model.MethodInvocation.Arguments">
      <summary>Gets or sets the arguments.</summary>
      <value>The arguments.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Arguments
        </member>
    <member name="P:WpfApp.Core.Model.MethodInvocation.OriginalReturnValue">
      <summary>Gets or sets the original return value.</summary>
      <value>The original return value.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OriginalReturnValue
        </member>
    <member name="P:WpfApp.Core.Model.MethodInvocation.ReturnValue">
      <summary>Gets or sets the return value.</summary>
      <value>The return value.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ReturnValue
        </member>
    <member name="T:WpfApp.Core.Model.ResourceInfo">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResourceInfo
        </member>
    <member name="M:WpfApp.Core.Model.ResourceInfo.#ctor(System.Uri,System.Object,System.Object)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Core.Model.ResourceInfo.Source">
      <summary>Gets the source.</summary>
      <value>The source.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Source
        </member>
    <member name="P:WpfApp.Core.Model.ResourceInfo.Key1">
      <summary>Gets the key1.</summary>
      <value>The key1.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Key1
        </member>
    <member name="P:WpfApp.Core.Model.ResourceInfo.Value">
      <summary>Gets the value.</summary>
      <value>The value.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Value
        </member>
    <member name="T:WpfApp.Core.Model.ResourcesModel">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResourcesModel
        </member>
    <member name="P:WpfApp.Core.Model.ResourcesModel.ResourcesCollection">
      <summary>Gets or sets the resources collection.</summary>
      <value>The resources collection.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResourcesCollection
        </member>
    <member name="T:WpfApp.Core.Model.ResourcesUtil">
      <summary>Methods for collecting resources from WPF elements</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResourcesUtil
        </member>
    <member name="T:WpfApp.Core.Tracing.AppTraceListener">
      <summary>
      </summary>
      <seealso cref="T:System.Diagnostics.TraceListener" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AppTraceListener
        </member>
    <member name="F:WpfApp.Core.Tracing.AppTraceListener.Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="P:WpfApp.Core.Tracing.AppTraceListener.RoutedEvents">
      <summary>Gets or sets the routed events.</summary>
      <value>The routed events.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RoutedEvents
        </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Writes trace and event information to the listener specific output.</summary>
      <param name="eventCache">
                A <see cref="T:System.Diagnostics.TraceEventCache" />
                object that contains the current process ID, thread ID, and stack trace
                information.
            </param>
      <param name="source">
                A name used to identify the output, typically the name of
                the application that generated the trace event.
            </param>
      <param name="eventType">
                One of the
                <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the
                type of event that has caused the trace.
            </param>
      <param name="id">A numeric identifier for the event.</param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>
                Writes trace information, a message, and event information to the
                listener specific output.
            </summary>
      <param name="eventCache">
                A <see cref="T:System.Diagnostics.TraceEventCache" />
                object that contains the current process ID, thread ID, and stack trace
                information.
            </param>
      <param name="source">
                A name used to identify the output, typically the name of
                the application that generated the trace event.
            </param>
      <param name="eventType">
                One of the
                <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the
                type of event that has caused the trace.
            </param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="message">A message to write.</param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>
                Writes trace information, a formatted array of objects and event
                information to the listener specific output.
            </summary>
      <param name="eventCache">
                A <see cref="T:System.Diagnostics.TraceEventCache" />
                object that contains the current process ID, thread ID, and stack trace
                information.
            </param>
      <param name="source">
                A name used to identify the output, typically the name of
                the application that generated the trace event.
            </param>
      <param name="eventType">
                One of the
                <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the
                type of event that has caused the trace.
            </param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="format">
                A format string that contains zero or more format items,
                which correspond to objects in the <paramref name="args" /> array.
            </param>
      <param name="args">
                An <see langword="object" /> array containing zero or more
                objects to format.
            </param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener.Write(System.String)">
      <summary>
                When overridden in a derived class, writes the specified message to
                the listener you create in the derived class.
            </summary>
      <param name="message">A message to write.</param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener.WriteLine(System.String)">
      <summary>
                When overridden in a derived class, writes a message to the listener
                you create in the derived class, followed by a line terminator.
            </summary>
      <param name="message">A message to write.</param>
    </member>
    <member name="T:WpfApp.Core.Tracing.AppTraceListener2">
      <summary>
      </summary>
      <seealso cref="T:System.Diagnostics.TraceListener" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for AppTraceLisener2
        </member>
    <member name="F:WpfApp.Core.Tracing.AppTraceListener2.Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="P:WpfApp.Core.Tracing.AppTraceListener2.RoutedEvents">
      <summary>Gets or sets the routed events.</summary>
      <value>The routed events.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RoutedEvents
        </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <summary>Writes trace and event information to the listener specific output.</summary>
      <param name="eventCache">
                A
                <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains
                the current process ID, thread ID, and stack trace information.
            </param>
      <param name="source">
                A name used to identify the output, typically the name
                of the application that generated the trace event.
            </param>
      <param name="eventType">
                One of the
                <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the
                type of event that has caused the trace.
            </param>
      <param name="id">A numeric identifier for the event.</param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <summary>
                Writes trace information, a message, and event information to the
                listener specific output.
            </summary>
      <param name="eventCache">
                A
                <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains
                the current process ID, thread ID, and stack trace information.
            </param>
      <param name="source">
                A name used to identify the output, typically the name
                of the application that generated the trace event.
            </param>
      <param name="eventType">
                One of the
                <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the
                type of event that has caused the trace.
            </param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="message">A message to write.</param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <summary>
                Writes trace information, a formatted array of objects and event
                information to the listener specific output.
            </summary>
      <param name="eventCache">
                A
                <see cref="T:System.Diagnostics.TraceEventCache" /> object that contains
                the current process ID, thread ID, and stack trace information.
            </param>
      <param name="source">
                A name used to identify the output, typically the name
                of the application that generated the trace event.
            </param>
      <param name="eventType">
                One of the
                <see cref="T:System.Diagnostics.TraceEventType" /> values specifying the
                type of event that has caused the trace.
            </param>
      <param name="id">A numeric identifier for the event.</param>
      <param name="format">
                A format string that contains zero or more format
                items, which correspond to objects in the <paramref name="args" />
                array.
            </param>
      <param name="args">
                An <see langword="object" /> array containing zero or
                more objects to format.
            </param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener2.Write(System.String)">
      <summary>
                When overridden in a derived class, writes the specified message to
                the listener you create in the derived class.
            </summary>
      <param name="message">A message to write.</param>
    </member>
    <member name="M:WpfApp.Core.Tracing.AppTraceListener2.WriteLine(System.String)">
      <summary>
                When overridden in a derived class, writes a message to the
                listener you create in the derived class, followed by a line terminator.
            </summary>
      <param name="message">A message to write.</param>
    </member>
    <member name="T:WpfApp.Core.Tracing.Info">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Info
        </member>
    <member name="P:WpfApp.Core.Tracing.Info.Count">
      <summary>The count</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for count
        </member>
    <member name="M:WpfApp.Core.Tracing.Info.#ctor(System.Int32)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="T:WpfApp.Debug.DebugEventArgs">
      <summary>
      </summary>
      <seealso cref="T:System.EventArgs" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for DebugEventArgs
        </member>
    <member name="M:WpfApp.Debug.DebugEventArgs.#ctor(System.String,System.String,System.String,System.Int32)">
      <summary>Initializes a new instance of the <see cref="T:System.EventArgs" /> class.</summary>
      <param name="message">
      </param>
      <param name="callerMemberName">
      </param>
      <param name="callerFilePath">
      </param>
      <param name="callerLineNumber">
      </param>
    </member>
    <member name="P:WpfApp.Debug.DebugEventArgs.Message">
      <summary>Gets the message.</summary>
      <value>The message.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Message
        </member>
    <member name="P:WpfApp.Debug.DebugEventArgs.CallerMemberName">
      <summary>Gets the name of the caller member.</summary>
      <value>The name of the caller member.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CallerMemberName
        </member>
    <member name="P:WpfApp.Debug.DebugEventArgs.CallerFilePath">
      <summary>Gets the caller file path.</summary>
      <value>The caller file path.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CallerFilePath
        </member>
    <member name="P:WpfApp.Debug.DebugEventArgs.CallerLineNumber">
      <summary>Gets the caller line number.</summary>
      <value>The caller line number.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CallerLineNumber
        </member>
    <member name="N:WpfApp.Debug">
      <summary>Debug classes and utilities.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="N:WpfApp.Data">
      <summary>Data related classes.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="N:WpfApp.Proxy">
      <summary>Proxy utilities.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NamespaceDoc
        </member>
    <member name="T:WpfApp.Proxy.LoggerFactoryHook">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IProxyGenerationHook" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerFactoryHook
        </member>
    <member name="M:WpfApp.Proxy.LoggerFactoryHook.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Proxy.LoggerFactoryHook" /> class.</summary>
      <param name="useLogMethod">The use log method.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Proxy.LoggerFactoryHook.MethodsInspected">
      <summary>
                Invoked by the generation process to notify that the whole process has
                completed.
            </summary>
    </member>
    <member name="M:WpfApp.Proxy.LoggerFactoryHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
      <summary>
                Invoked by the generation process to notify that a member was not marked
                as
                virtual.
            </summary>
      <param name="type">The type which declares the non-virtual member.</param>
      <param name="memberInfo">The non-virtual member.</param>
      <remarks>
                This method gives an opportunity to inspect any non-proxy able member of
                a
                type that has
                been requested to be proxied, and if appropriate - throw an exception to
                notify the caller.
            </remarks>
    </member>
    <member name="M:WpfApp.Proxy.LoggerFactoryHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
      <summary>
                Invoked by the generation process to determine if the specified method
                should be proxied.
            </summary>
      <param name="type">The type which declares the given method.</param>
      <param name="methodInfo">The method to inspect.</param>
      <returns>True if the given method should be proxied; false otherwise.</returns>
    </member>
    <member name="T:WpfApp.Proxy.LoggerProxyHelper">
      <summary>Attempt to hook into NLog and fix it up for my application.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerProxyHelper
        </member>
    <member name="M:WpfApp.Proxy.LoggerProxyHelper.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <summary>
                Initializes a new instance of the
                <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Proxy.LoggerProxyHelper.#ctor(Castle.DynamicProxy.ProxyGenerator,WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.Proxy.LoggerProxyHelper.Generator">
      <summary>Gets the generator.</summary>
      <value>The generator.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Generator
        </member>
    <member name="P:WpfApp.Proxy.LoggerProxyHelper.UseLogMethod">
      <summary>Gets or sets the use log method.</summary>
      <value>The use log method.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for UseLogMethod
        </member>
    <member name="M:WpfApp.Proxy.LoggerProxyHelper.CreateLogFactory(NLog.LogFactory)">
      <summary>Creates the log factory.</summary>
      <param name="logFactory">The log factory.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateLogFactory
        </member>
    <member name="M:WpfApp.Proxy.LoggerProxyHelper.GetCurrentClassLogger(System.String)">
      <summary>Gets the current class logger.</summary>
      <param name="path">The path.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetCurrentClassLogger
        </member>
    <member name="T:WpfApp.Proxy.LoggingInterceptor">
      <summary>DynamicProxy interceptor to inject a logger into classes. TODO refactor.</summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
    </member>
    <member name="M:WpfApp.Proxy.LoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Proxy.BaseInterceptor">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for BaseInterceptor
        </member>
    <member name="P:WpfApp.Proxy.BaseInterceptor.ProxyGenerator">
      <summary>Gets the proxy generator.</summary>
      <value>The proxy generator.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProxyGenerator
        </member>
    <member name="F:WpfApp.Proxy.BaseInterceptor.Write">
      <summary>The write</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Write
        </member>
    <member name="F:WpfApp.Proxy.BaseInterceptor.WriteLine">
      <summary>The write line</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for WriteLine
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <summary>Initializes a new instance of the BaseInterceptor class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptor.DumpInvocation(Castle.DynamicProxy.IInvocation,System.Int32)">
      <summary>Dumps the invocation.</summary>
      <param name="invocation">The invocation.</param>
      <param name="callDepth">The call depth.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DumpInvocation
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptor.FormatInvocation(Castle.DynamicProxy.IInvocation,System.String)">
      <summary>Formats the invocation.</summary>
      <param name="invocation">The invocation.</param>
      <param name="c">The c.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for FormatInvocation
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptor.DumpReturnValue(Castle.DynamicProxy.IInvocation,System.Int32,System.Boolean)">
      <summary>Dumps the return value.</summary>
      <param name="invocation">The invocation.</param>
      <param name="callDepth">The call depth.</param>
      <param name="continuation">if set to <see language="true" /> [continuation].</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DumpReturnValue
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptor.FormatTyp(System.Type)">
      <summary>Formats the typ.</summary>
      <param name="type">The type.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for FormatTyp
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Proxy.BaseInterceptorImpl">
      <summary>
      </summary>
      <seealso cref="T:WpfApp.Proxy.BaseInterceptor" />
            TODO Edit XML Comment Template for BaseInterceptorImpl
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptorImpl.#ctor(System.Action{System.String},Castle.DynamicProxy.ProxyGenerator)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Proxy.BaseInterceptorImpl" /> class.</summary>
      <param name="out">The out.</param>
      <param name="generator">The generator.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.Proxy.BaseInterceptorImpl.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Proxy.ProxyUtils">
      <summary>Main usage point for the <see cref="T:WpfApp.Proxy.ProxyUtils" />.</summary>
      <seealso cref="T:WpfApp.Proxy.ProxyUtilsBase" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProxyUtils
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtils.#ctor(System.Action{System.String},Castle.DynamicProxy.IInterceptor)">
      <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
      <param name="writeOut">Delegate or lambda to accept raw debug output.</param>
      <param name="interceptor">Interceptor to use.</param>
    </member>
    <member name="T:WpfApp.Proxy.ProxyUtilsBase">
      <summary>Base class for <seealso cref="T:WpfApp.Proxy.ProxyUtils" />.</summary>
    </member>
    <member name="F:WpfApp.Proxy.ProxyUtilsBase.ProxyGenerator">
      <summary>The proxy generator</summary>
    </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.#ctor(System.Action{System.String},Castle.DynamicProxy.IInterceptor)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.Proxy.ProxyUtilsBase" /> class.</summary>
      <param name="writeOut">
      </param>
      <param name="interceptor">
      </param>
    </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateInterceptor(System.Action{System.String})">
      <summary>Factory method to create a proper interceptor instance for use with the <seealso cref="T:WpfApp.Proxy.ProxyUtils" /> class.</summary>
      <param name="out">Handler for raw debug output.</param>
      <returns>The interceptor instance.</returns>
    </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.TransformXaml(System.Object)">
      <summary>Performs a XAML transform with proxied objects, to see the call structure and parameters..</summary>
      <param name="instance">The instance to write as XAML XML.</param>
      <returns>output XML</returns>
    </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.TransformXaml2(System.String)">
      <summary>Performs a XAML transform with proxied objects, to see the call structure and parameters..</summary>
      <param name="inputUri">
      </param>
      <returns>output XML</returns>
    </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlXmlWriter(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <summary>Creates the xaml XML writer.</summary>
      <param name="xmlWriterProxy">The XML writer proxy.</param>
      <param name="context">The context.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateXamlXmlWriter
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlReader(System.Xaml.XamlSchemaContext)">
      <summary>Creates the xaml reader.</summary>
      <param name="context">The context.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateXamlReader
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlObjectReader(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <summary>Creates a proxied XamlObjectReader based on the given paameters. From MS docs: <quoteInline>Provides a <see cref="T:System.Xaml.XamlReader" /> implementation that reads object graphs and generates a XAML node stream.</quoteInline>Constructor: <quoteInline>Initializes a new instance of the XamlObjectReader class with the specified schema context and reader settings</quoteInline>.</summary>
      <param name="instance">The root of the object tree to read.</param>
      <param name="context">The schema context for the reader to use.</param>
      <param name="settings">A settings object.</param>
      <returns>Proxied XamlObjetReader instance.</returns>
      <seealso cref="T:System.Xml.XmlReader" />
    </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlObjectReaderSettings">
      <summary>Creates the xaml object reader settings.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateXamlObjectReaderSettings
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXmlWriter(System.IO.StringWriter)">
      <summary>Creates the XML writer.</summary>
      <param name="stringWriter">The string writer.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateXmlWriter
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXmlReader(System.String)">
      <summary>Creates the XML reader.</summary>
      <param name="inputUri">The input URI.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateXmlReader
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateStringWriter">
      <summary>Creates the string writer.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateStringWriter
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlSchemaContext">
      <summary>Creates the xaml schema context.</summary>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateXamlSchemaContext
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsBase.CreateProxy(System.Action{System.String},Castle.DynamicProxy.IInterceptor)">
      <summary>Creates the proxy.</summary>
      <param name="writeLine">The write line.</param>
      <param name="interceptor">The interceptor.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for CreateProxy
        </member>
    <member name="M:WpfApp.Proxy.StackInfo.#ctor(System.Boolean)">
      <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
    </member>
    <member name="T:WpfApp.Proxy.ProxyUtilsEvents">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProxyUtilsEvents
        </member>
    <member name="E:WpfApp.Proxy.ProxyUtilsEvents.BeginInvocation">
      <summary>Occurs when [begin invocation].</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for BeginInvocation
        </member>
    <member name="M:WpfApp.Proxy.ProxyUtilsEvents.OnBeginInvocation(WpfApp.Proxy.InvocationEventArgs)">
      <summary>Raises the <see cref="E:WpfApp.Proxy.ProxyUtilsEvents.BeginInvocation" /> event.</summary>
      <param name="e">The <see cref="T:WpfApp.Proxy.InvocationEventArgs" /> instance containing the event data.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnBeginInvocation
        </member>
    <member name="T:WpfApp.Proxy.InvocationEventArgs">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InvocationEventArgs
        </member>
    <member name="F:WpfApp.Proxy.InvocationEventArgs.formatted">
      <summary>The formatted</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for formatted
        </member>
    <member name="F:WpfApp.Proxy.InvocationEventArgs.methodInfo">
      <summary>The method information</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for methodInfo
        </member>
    <member name="T:WpfApp.Proxy.BasicLoggingInterceptor">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerInterceptor
        </member>
    <member name="M:WpfApp.Proxy.BasicLoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Proxy.BuilderInterceptor">
      <summary>Interceptor for Autofac container builder. Used for diagnostics.</summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for BuilderInterceptor
        </member>
    <member name="F:WpfApp.Proxy.BuilderInterceptor.Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="P:WpfApp.Proxy.BuilderInterceptor.Invocations">
      <summary>Gets the invocations.</summary>
      <value>The invocations.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Invocations
        </member>
    <member name="M:WpfApp.Proxy.BuilderInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="M:WpfApp.Proxy.BuilderInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
    </member>
    <member name="M:WpfApp.Proxy.CallBackHook.MethodsInspected">
      <summary>
              Invoked by the generation process to notify that the whole process has completed.
            </summary>
    </member>
    <member name="M:WpfApp.Proxy.CallBackHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
      <summary>
              Invoked by the generation process to notify that a member was not marked as virtual.
            </summary>
      <param name="type">The type which declares the non-virtual member.</param>
      <param name="memberInfo">The non-virtual member.</param>
      <remarks>
              This method gives an opportunity to inspect any non-proxyable member of a type that has
              been requested to be proxied, and if appropriate - throw an exception to notify the caller.
            </remarks>
    </member>
    <member name="M:WpfApp.Proxy.CallBackHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
      <summary>
              Invoked by the generation process to determine if the specified method should be proxied.
            </summary>
      <param name="type">The type which declares the given method.</param>
      <param name="methodInfo">The method to inspect.</param>
      <returns>True if the given method should be proxied; false otherwise.</returns>
    </member>
    <member name="M:WpfApp.Proxy.CallbackInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
    </member>
    <member name="T:WpfApp.Proxy.ContainerBaseInterceptor">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for BaseInterceptor
        </member>
    <member name="P:WpfApp.Proxy.ContainerBaseInterceptor.Generator">
      <summary>Gets the generator.</summary>
      <value>The generator.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Generator
        </member>
    <member name="M:WpfApp.Proxy.ContainerBaseInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
    </member>
    <member name="M:WpfApp.Proxy.ContainerBaseInterceptor.DumpDelegate(System.Delegate,System.String)">
      <summary>Dumps the delegate.</summary>
      <param name="d">The d.</param>
      <param name="prefix">Prefix to prepend to log messages</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DumpDelegate
        </member>
    <member name="M:WpfApp.Proxy.ContainerBaseInterceptor.NameForType(System.Type)">
      <summary>Names for type.</summary>
      <param name="myType">My type.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NameForType
        </member>
    <member name="M:WpfApp.Proxy.ContainerBaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Proxy.LoggerInterceptor">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for LoggerInterceptor
        </member>
    <member name="M:WpfApp.Proxy.LoggerInterceptor.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="M:WpfApp.Proxy.LoggerInterceptor.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.Proxy.LoggerInterceptor" />
                class.
            </summary>
      <param name="useLogMethod">The use log method.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.Proxy.LoggerInterceptor.UseLogMethod">
      <summary>Gets the use log method.</summary>
      <value>The use log method.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for UseLogMethod
        </member>
    <member name="M:WpfApp.Proxy.LoggerInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="T:WpfApp.Proxy.ProxyGenerationHook">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IProxyGenerationHook" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ProxyGenerationHook
        </member>
    <member name="M:WpfApp.Proxy.ProxyGenerationHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
      <summary>Invoked by the generation process to notify that a member was not marked as virtual.</summary>
      <param name="type">The type which declares the non-virtual member.</param>
      <param name="memberInfo">The non-virtual member.</param>
      <remarks>This method gives an opportunity to inspect any non-proxyable member of a type that has
            been requested to be proxied, and if appropriate - throw an exception to notify the caller.</remarks>
      <autogeneratedoc />
            TODO Edit XML Comment Template for NonProxyableMemberNotification
        </member>
    <member name="M:WpfApp.Proxy.ProxyGenerationHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
      <summary>Boolean to indicate whether the methods should be intercepted.</summary>
      <param name="type">The type.</param>
      <param name="memberInfo">The member information.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ShouldInterceptMethod
        </member>
    <member name="M:WpfApp.Proxy.ProxyGenerationHook.MethodsInspected">
      <summary>Invoked by the generation process to notify that the whole process has completed.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for MethodsInspected
        </member>
    <member name="T:WpfApp.Proxy.RegistryInterceptor">
      <summary>
      </summary>
      <seealso cref="T:Castle.DynamicProxy.IInterceptor" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for RegistryInterceptor
        </member>
    <member name="M:WpfApp.Proxy.RegistryInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <summary>Intercepts the specified invocation.</summary>
      <param name="invocation">The invocation.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Intercept
        </member>
    <member name="M:WpfApp.Proxy.RegistryInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <summary>Initializes a new instance of the <see cref="T:System.Object" /> class.</summary>
    </member>
    <member name="T:WpfApp.NewMainWindow">
      <summary>
            Interaction logic for NewMainWindow.xaml
            </summary>
      <summary>
            NewMainWindow
            </summary>
    </member>
    <member name="M:WpfApp.NewMainWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.NewMainWindow" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.NewMainWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.DesignData">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DesignData
        </member>
    <member name="M:WpfApp.DesignData.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.DesignData.LifetimeScope">
      <summary>Gets the lifetime scope.</summary>
      <value>The lifetime scope.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScope
        </member>
    <member name="P:WpfApp.DesignData.InstanceList">
      <summary>Gets the instance list.</summary>
      <value>The instance list.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceList
        </member>
    <member name="P:WpfApp.DesignData.InstanceInfo">
      <summary>Gets the instance information.</summary>
      <value>The instance information.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for InstanceInfo
        </member>
    <member name="T:WpfApp.Props">
      <summary>Static class holding attached properties and events..</summary>
    </member>
    <member name="F:WpfApp.Props.LoggerRegisteredEvent">
      <summary>The logger registered event</summary>
    </member>
    <member name="F:WpfApp.Props.MenuItemListCollectionViewChangedEvent">
      <summary>Event fired when attached property MenuItemListCollectionView is updated.</summary>
      <seealso cref="F:WpfApp.Props.MenuItemListCollectionViewProperty" />
    </member>
    <member name="F:WpfApp.Props.MenuItemListCollectionViewProperty">
      <summary>
            Attached property for Menu Item List CollectionView.
            </summary>
      <seealso cref="F:WpfApp.Props.MenuItemListCollectionViewChangedEvent" />
    </member>
    <member name="F:WpfApp.Props.LifetimeScopeChangedEvent">
      <summary>The lifetime scope changed event</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScopeChangedEvent
        </member>
    <member name="F:WpfApp.Props.LifetimeScopeProperty">
      <summary>The lifetime scope property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScopeProperty
        </member>
    <member name="F:WpfApp.Props.RenderedTypeChangedEvent">
      <summary>The rendered type changed event</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RenderedTypeChangedEvent
        </member>
    <member name="F:WpfApp.Props.RenderedTypeProperty">
      <summary>The rendered type property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RenderedTypeProperty
        </member>
    <member name="F:WpfApp.Props.AssemblyListChangedEvent">
      <summary>The assembly list changed event</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssemblyListChangedEvent
        </member>
    <member name="F:WpfApp.Props.AssemblyListProperty">
      <summary>The assembly list property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AssemblyListProperty
        </member>
    <member name="F:WpfApp.Props.ContainerChangedEvent">
      <summary>The container changed event</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ContainerChangedEvent
        </member>
    <member name="F:WpfApp.Props.ContainerProperty">
      <summary>The container property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ContainerProperty
        </member>
    <member name="M:WpfApp.Props.OnMenuItemListCollectionViewChanged(System.Windows.DependencyObject,System.Windows.DependencyPropertyChangedEventArgs)">
      <summary>Called when [menu item list collection view changed].</summary>
      <param name="d">The d.</param>
      <param name="e">
                The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />
                instance containing the event data.
            </param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for OnMenuItemListCollectionViewChanged
        </member>
    <member name="M:WpfApp.Props.AddOnMenuItemListCollectionViewChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the on menu item list collection view changed handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddOnMenuItemListCollectionViewChangedHandler
        </member>
    <member name="M:WpfApp.Props.RemoveOnMenuItemListCollectionViewChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the on menu item list collection view changed handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveOnMenuItemListCollectionViewChangedHandler
        </member>
    <member name="M:WpfApp.Props.GetMenuItemListCollectionView(System.Windows.DependencyObject)">
      <summary>Gets the menu item list collection view.</summary>
      <param name="target">The target.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetMenuItemListCollectionView
        </member>
    <member name="M:WpfApp.Props.SetMenuItemListCollectionView(System.Windows.DependencyObject,System.Windows.Data.CollectionView)">
      <summary>Sets the menu item list collection view.</summary>
      <param name="target">The target.</param>
      <param name="value">The value.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetMenuItemListCollectionView
        </member>
    <member name="M:WpfApp.Props.AddLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the logger registered handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddLoggerRegisteredHandler
        </member>
    <member name="M:WpfApp.Props.RemoveLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the logger registered handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveLoggerRegisteredHandler
        </member>
    <member name="M:WpfApp.Props.AddLifetimeScopeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the lifetime scope changed event handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddLifetimeScopeChangedEventHandler
        </member>
    <member name="M:WpfApp.Props.RemoveLifetimeScopeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the lifetime scope changed event handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveLifetimeScopeChangedEventHandler
        </member>
    <member name="M:WpfApp.Props.GetLifetimeScope(System.Windows.DependencyObject)">
      <summary>Gets the lifetime scope.</summary>
      <param name="target">The target.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetLifetimeScope
        </member>
    <member name="M:WpfApp.Props.SetLifetimeScope(System.Windows.DependencyObject,Autofac.ILifetimeScope)">
      <summary>Sets the lifetime scope.</summary>
      <param name="target">The target.</param>
      <param name="value">The value.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetLifetimeScope
        </member>
    <member name="M:WpfApp.Props.AddRenderedTypeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the rendered type changed event handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddRenderedTypeChangedEventHandler
        </member>
    <member name="M:WpfApp.Props.RemoveRenderedTypeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the rendered type changed event handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveRenderedTypeChangedEventHandler
        </member>
    <member name="M:WpfApp.Props.GetRenderedType(System.Windows.DependencyObject)">
      <summary>Gets the type of the rendered.</summary>
      <param name="target">The target.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetRenderedType
        </member>
    <member name="M:WpfApp.Props.SetRenderedType(System.Windows.DependencyObject,System.Type)">
      <summary>Sets the type of the rendered.</summary>
      <param name="target">The target.</param>
      <param name="value">The value.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetRenderedType
        </member>
    <member name="M:WpfApp.Props.AddOnAssemblyListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the on assembly list changed handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddOnAssemblyListChangedHandler
        </member>
    <member name="M:WpfApp.Props.RemoveOnAssemblyListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the on assembly list changed handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveOnAssemblyListChangedHandler
        </member>
    <member name="M:WpfApp.Props.GetAssemblyList(System.Windows.DependencyObject)">
      <summary>
                Helper for getting <see cref="F:WpfApp.Props.AssemblyListProperty" />
                from <paramref name="target" />.
            </summary>
      <param name="target">
        <see cref="T:System.Windows.DependencyObject" /> to read
                <see cref="F:WpfApp.Props.AssemblyListProperty" /> from.
            </param>
      <returns>AssemblyList property value.</returns>
    </member>
    <member name="M:WpfApp.Props.SetAssemblyList(System.Windows.DependencyObject,WpfApp.Core.AssemblyList)">
      <summary>Sets the assembly list.</summary>
      <param name="target">The target.</param>
      <param name="value">The value.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetAssemblyList
        </member>
    <member name="M:WpfApp.Props.AddContainerChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the container changed event handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddContainerChangedEventHandler
        </member>
    <member name="M:WpfApp.Props.RemoveContainerChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the container changed event handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveContainerChangedEventHandler
        </member>
    <member name="M:WpfApp.Props.GetContainer(System.Windows.DependencyObject)">
      <summary>Gets the container.</summary>
      <param name="target">The target.</param>
      <returns>
      </returns>
      <autogeneratedoc />
            TODO Edit XML Comment Template for GetContainer
        </member>
    <member name="M:WpfApp.Props.SetContainer(System.Windows.DependencyObject,Autofac.IContainer)">
      <summary>Sets the container.</summary>
      <param name="target">The target.</param>
      <param name="value">The value.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetContainer
        </member>
    <member name="F:WpfApp.Props.ResolveServiceListChangedEvent">
      <summary>The resolve service list changed event</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResolveServiceListChangedEvent
        </member>
    <member name="F:WpfApp.Props.ResolveServiceListProperty">
      <summary>The resolve service list property</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResolveServiceListProperty
        </member>
    <member name="M:WpfApp.Props.AddOnResolveServiceListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Adds the on resolve service list changed handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for AddOnResolveServiceListChangedHandler
        </member>
    <member name="M:WpfApp.Props.RemoveOnResolveServiceListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <summary>Removes the on resolve service list changed handler.</summary>
      <param name="d">The d.</param>
      <param name="handler">The handler.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for RemoveOnResolveServiceListChangedHandler
        </member>
    <member name="M:WpfApp.Props.GetResolveServiceList(System.Windows.DependencyObject)">
      <summary>
                Helper for getting <see cref="F:WpfApp.Props.ResolveServiceListProperty" />
                from <paramref name="target" />.
            </summary>
      <param name="target">
        <see cref="T:System.Windows.DependencyObject" /> to read
                <see cref="F:WpfApp.Props.ResolveServiceListProperty" /> from.
            </param>
      <returns>ResolveServiceList property value.</returns>
    </member>
    <member name="M:WpfApp.Props.SetResolveServiceList(System.Windows.DependencyObject,WpfApp.ResolveServiceList)">
      <summary>Sets the resolve service list.</summary>
      <param name="target">The target.</param>
      <param name="value">The value.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for SetResolveServiceList
        </member>
    <member name="T:WpfApp.Modules.IdGeneratorModule">
      <summary>
      </summary>
      <seealso cref="T:Autofac.Module" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for IdGeneratorModule
        </member>
    <member name="P:WpfApp.Modules.IdGeneratorModule.DefaultObject">
      <summary>Gets or sets the default object.</summary>
      <value>The default object.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for DefaultObject
        </member>
    <member name="P:WpfApp.Modules.IdGeneratorModule.Generator">
      <summary>Gets or sets the generator.</summary>
      <value>The generator.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Generator
        </member>
    <member name="M:WpfApp.Modules.IdGeneratorModule.Load(Autofac.ContainerBuilder)">
      <summary>Override to add registrations to the container.</summary>
      <remarks>
                Note that the ContainerBuilder parameter is unique to this module.
            </remarks>
      <param name="builder">
                The builder through which components can be
                registered.
            </param>
    </member>
    <member name="M:WpfApp.Modules.IdGeneratorModule.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)">
      <summary>
                Override to attach module-specific functionality to a
                component registration.
            </summary>
      <remarks>
                This method will be called for all existing <i>and future</i> component
                registrations - ordering is not important.
            </remarks>
      <param name="componentRegistry">The component registry.</param>
      <param name="registration">The registration to attach functionality to.</param>
    </member>
    <member name="T:WpfApp.ResolveServiceList">
      <summary>
      </summary>
      <seealso cref="T:System.Collections.ObjectModel.ObservableCollection`1" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResolveServiceList
        </member>
    <member name="M:WpfApp.ResolveServiceList.#ctor">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class.
            </summary>
    </member>
    <member name="M:WpfApp.ResolveServiceList.#ctor(System.Collections.Generic.List{WpfApp.Core.Xaml.ResolveService})">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class that contains elements copied from the specified list.
            </summary>
      <param name="list">The list from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">
                The <paramref name="list" />
                parameter cannot be <see langword="null" />.
            </exception>
    </member>
    <member name="M:WpfApp.ResolveServiceList.#ctor(System.Collections.Generic.IEnumerable{WpfApp.Core.Xaml.ResolveService})">
      <summary>
                Initializes a new instance of the
                System.Collections.ObjectModel.ObservableCollection`1
                class that contains elements copied from the specified collection.
            </summary>
      <param name="collection">The collection from which the elements are copied.</param>
      <exception cref="T:System.ArgumentNullException">
                The
                <paramref name="collection" /> parameter cannot be
                <see langword="null" />.
            </exception>
    </member>
    <member name="T:WpfApp.WpfAppCommands">
      <summary>Static class containing <see cref="T:System.Windows.Input.RoutedUICommand" /> instances for the application.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.AppSettings">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to launch the settings dialog / window.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.OpenWindow">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to launch a new window.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.QuitApplication">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to quit the application.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.LoadAssemblyList">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to load assembly list</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.Restart">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to restart the application.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.DumpDebug">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to dump debug information.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.FilterInstances">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to limit filtering to rows with associated instances.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.Load">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to load the selected object.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.Metadata">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to view metadata for selected object.</summary>
    </member>
    <member name="F:WpfApp.WpfAppCommands.VisitType">
      <summary>
        <see cref="T:System.Windows.Input.RoutedUICommand" /> to visit the selected type.</summary>
    </member>
    <member name="T:WpfApp.LogTextWriter">
      <summary>
        <para>A TextWriter for writing to the log.</para>
      </summary>
      <seealso cref="T:System.IO.TextWriter" />
    </member>
    <member name="M:WpfApp.LogTextWriter.#ctor(NLog.Logger)">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.LogTextWriter" /> class.</summary>
      <param name="logger">The logger.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.LogTextWriter.Encoding">
      <summary>
                When overridden in a derived class, returns the character encoding in
                which the output is written.
            </summary>
      <returns>The character encoding in which the output is written.</returns>
    </member>
    <member name="M:WpfApp.LogTextWriter.WriteLine(System.String)">
      <summary>
                Writes a string followed by a line terminator to the text string or
                stream.
            </summary>
      <param name="value">
                The string to write. If <paramref name="value" /> is
                <see langword="null" />, only the line terminator is written.
            </param>
      <exception cref="T:System.ObjectDisposedException">
                The
                <see cref="T:System.IO.TextWriter" /> is closed.
            </exception>
      <exception cref="T:System.IO.IOException">An I/O error occurs.</exception>
    </member>
    <member name="T:WpfApp.Resource1">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:WpfApp.Resource1.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:WpfApp.Resource1.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="T:WpfApp.ResourceMetadata">
      <summary>
      </summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResourceMetadata
        </member>
    <member name="M:WpfApp.ResourceMetadata.#ctor(System.String)">
      <summary>
                Initializes a new instance of the <see cref="T:WpfApp.ResourceMetadata" />
                class.
            </summary>
      <param name="resourceName">Name of the resource.</param>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="P:WpfApp.ResourceMetadata.ResourceName">
      <summary>Gets or sets the name of the resource.</summary>
      <value>The name of the resource.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for ResourceName
        </member>
    <member name="T:WpfApp.TestO">
      <summary>
      </summary>
      <seealso cref="T:System.Windows.Markup.IAddChild" />
      <autogeneratedoc />
            TODO Edit XML Comment Template for TestO
        </member>
    <member name="F:WpfApp.TestO.Logger">
      <summary>The logger</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Logger
        </member>
    <member name="M:WpfApp.TestO.#ctor">
      <summary>
                Initializes a new instance of the <see cref="T:System.Object" />
                class.
            </summary>
    </member>
    <member name="P:WpfApp.TestO.Content">
      <summary>Gets or sets the content.</summary>
      <value>The content.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for Content
        </member>
    <member name="P:WpfApp.TestO.LifetimeScope">
      <summary>Gets or sets the lifetime scope.</summary>
      <value>The lifetime scope.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for LifetimeScope
        </member>
    <member name="M:WpfApp.TestO.AddChild(System.Object)">
      <summary>Adds a child object.</summary>
      <param name="value">The child object to add.</param>
    </member>
    <member name="M:WpfApp.TestO.AddText(System.String)">
      <summary>Adds the text content of a node to the object.</summary>
      <param name="text">The text to add to the object.</param>
    </member>
    <member name="T:WpfApp.MainWindow">
      <summary>
                Interaction logic for MainWindow.xaml
            </summary>
      <summary>
            MainWindow
            </summary>
    </member>
    <member name="M:WpfApp.MainWindow.#ctor">
      <summary>Initializes a new instance of the <see cref="T:WpfApp.MainWindow" /> class.</summary>
      <autogeneratedoc />
            TODO Edit XML Comment Template for #ctor
        </member>
    <member name="M:WpfApp.MainWindow.Frame_OnNavigationFailed(System.Object,System.Windows.Navigation.NavigationFailedEventArgs)">
      <summary>Gets the type frame.</summary>
      <value>The type frame.</value>
      <autogeneratedoc />
            TODO Edit XML Comment Template for TypeFrame
        </member>
    <member name="M:WpfApp.MainWindow.InitializeComponent">
      <summary>
            InitializeComponent
            </summary>
    </member>
    <member name="T:WpfApp.Properties.Resources">
      <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
    </member>
    <member name="P:WpfApp.Properties.Resources.ResourceManager">
      <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
    </member>
    <member name="P:WpfApp.Properties.Resources.Culture">
      <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
    </member>
    <member name="N:Tests">
      <summary />
    </member>
    <member name="N:Tests.Attributes">
      <summary />
    </member>
    <member name="N:Tests.CollectionDefinitions">
      <summary />
    </member>
    <member name="N:Tests.Lib">
      <summary />
    </member>
    <member name="N:Tests.Lib.Fixtures">
      <summary />
    </member>
    <member name="N:Tests.Lib.Logging">
      <summary />
    </member>
    <member name="N:Tests.Lib.Utils">
      <summary />
    </member>
    <member name="N:Tests.Main">
      <summary />
    </member>
    <member name="N:Tests.Main.Converters">
      <summary />
    </member>
    <member name="N:Tests.Main.UI">
      <summary />
    </member>
    <member name="N:Tests.Main.Utils">
      <summary />
    </member>
    <member name="N:WpfApp.Application">
      <summary />
    </member>
    <member name="N:WpfApp.Controls.Windows">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Container">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Context">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Converters">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Debug">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Events">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Exceptions">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Infos">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Interfaces">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Logging">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Menus">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Model">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Tracing">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Util">
      <summary />
    </member>
    <member name="N:WpfApp.Core.Xaml">
      <summary />
    </member>
    <member name="N:WpfApp.Modules">
      <summary />
    </member>
  </members>
</doc>