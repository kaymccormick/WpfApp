<?xml version="1.0" encoding="utf-8"?>
<reflection>
  <assemblies>
    <assembly name="Tests">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Tests</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Tests</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2020</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.GuidAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>963a7522-ee3e-4487-baf5-8600141a0350</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
    <assembly name="WpfApp">
      <assemblydata version="1.0.0.0" culture="" key="" hash="SHA1" />
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:System.Resources.NeutralResourcesLanguageAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>en</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTitleAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WpfApp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyDescriptionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyConfigurationAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCompanyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyProductAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WpfApp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyCopyrightAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Copyright ©  2020</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyTrademarkAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Runtime.InteropServices.ComVisibleAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.ThemeInfoAttribute" ref="true" />
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="None" />
            </enumValue>
          </argument>
          <argument>
            <type api="T:System.Windows.ResourceDictionaryLocation" ref="false" />
            <enumValue>
              <field name="SourceAssembly" />
            </enumValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Reflection.AssemblyFileVersionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>1.0.0.0</value>
          </argument>
        </attribute>
      </attributes>
    </assembly>
  </assemblies>
  <apis>
    <api id="N:Tests">
      <apidata name="Tests" group="namespace" />
      <elements>
        <element api="T:Tests.TestWindowViews" />
      </elements>
    </api>
    <api id="T:Tests.TestWindowViews">
      <apidata name="TestWindowViews" group="type" subgroup="class" />
      <sourceContext file="Tests/TestWindowViews.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.TestWindowViews.#ctor(Tests.Lib.Fixtures.AppContainerFixture)" />
        <element api="M:Tests.TestWindowViews.TestContainer1" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WpfApp</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.TestWindowViews.#ctor(Tests.Lib.Fixtures.AppContainerFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/TestWindowViews.cs" startLine="16" />
      <parameters>
        <parameter name="appContainerFixture">
          <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests" />
        <type api="T:Tests.TestWindowViews" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.TestWindowViews.TestContainer1">
      <apidata name="TestContainer1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/TestWindowViews.cs" startLine="25" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests" />
        <type api="T:Tests.TestWindowViews" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Attributes">
      <apidata name="Tests.Attributes" group="namespace" />
      <elements>
        <element api="T:Tests.Attributes.BeforeAfterLoggerAttribute" />
        <element api="T:Tests.Attributes.LogTestMethodAttribute" />
      </elements>
    </api>
    <api id="T:Tests.Attributes.BeforeAfterLoggerAttribute">
      <apidata name="BeforeAfterLoggerAttribute" group="type" subgroup="class" />
      <sourceContext file="Tests/Attributes/BeforeAfterLoggerAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Xunit.Sdk.BeforeAfterTestAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Attributes.BeforeAfterLoggerAttribute.#ctor" />
        <element api="P:Tests.Attributes.BeforeAfterLoggerAttribute.TestLoggingRule" />
        <element api="P:Tests.Attributes.BeforeAfterLoggerAttribute.TestFileTarget" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Attributes" />
      </containers>
    </api>
    <api id="M:Tests.Attributes.BeforeAfterLoggerAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Attributes/BeforeAfterLoggerAttribute.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Attributes" />
        <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Attributes.BeforeAfterLoggerAttribute.TestFileTarget">
      <apidata name="TestFileTarget" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Attributes/BeforeAfterLoggerAttribute.cs" startLine="31" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TestFileTarget" />
      <setter name="set_TestFileTarget" />
      <returns>
        <type api="T:NLog.Targets.FileTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Attributes" />
        <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Attributes.BeforeAfterLoggerAttribute.TestLoggingRule">
      <apidata name="TestLoggingRule" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Attributes/BeforeAfterLoggerAttribute.cs" startLine="25" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TestLoggingRule" />
      <setter name="set_TestLoggingRule" />
      <returns>
        <type api="T:NLog.Config.LoggingRule" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Attributes" />
        <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Attributes.LogTestMethodAttribute">
      <apidata name="LogTestMethodAttribute" group="type" subgroup="class" />
      <sourceContext file="Tests/Attributes/LogTestMethodAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Xunit.Sdk.BeforeAfterTestAttribute" ref="true" />
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Attributes.LogTestMethodAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Attributes" />
      </containers>
    </api>
    <api id="M:Tests.Attributes.LogTestMethodAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Attributes/LogTestMethodAttribute.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Attributes" />
        <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.CollectionDefinitions">
      <apidata name="Tests.CollectionDefinitions" group="namespace" />
      <elements>
        <element api="T:Tests.CollectionDefinitions.GeneralPurpose" />
        <element api="T:Tests.CollectionDefinitions.WpfApplication" />
      </elements>
    </api>
    <api id="T:Tests.CollectionDefinitions.GeneralPurpose">
      <apidata name="GeneralPurpose" group="type" subgroup="class" />
      <sourceContext file="Tests/CollectionDefinitions/GeneralPurpose.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.ICollectionFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.GlobalLoggingFixture" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Tests.CollectionDefinitions.GeneralPurpose.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.CollectionDefinitions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.CollectionDefinitions.GeneralPurpose.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/CollectionDefinitions/GeneralPurpose.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.CollectionDefinitions" />
        <type api="T:Tests.CollectionDefinitions.GeneralPurpose" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.CollectionDefinitions.WpfApplication">
      <apidata name="WpfApplication" group="type" subgroup="class" />
      <sourceContext file="Tests/CollectionDefinitions/WpfApplication.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.ICollectionFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:Xunit.ICollectionFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.GlobalLoggingFixture" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Tests.CollectionDefinitions.WpfApplication.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.CollectionDefinitions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionDefinitionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WpfApp</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.CollectionDefinitions.WpfApplication.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/CollectionDefinitions/WpfApplication.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.CollectionDefinitions" />
        <type api="T:Tests.CollectionDefinitions.WpfApplication" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Lib">
      <apidata name="Tests.Lib" group="namespace" />
      <elements>
        <element api="T:Tests.Lib.UnexpectedPropertyException" />
      </elements>
    </api>
    <api id="T:Tests.Lib.UnexpectedPropertyException">
      <apidata name="UnexpectedPropertyException" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/UnexpectedPropertyException.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.UnexpectedPropertyException.#ctor(System.String,System.Reflection.MemberInfo)" />
        <element api="M:Tests.Lib.UnexpectedPropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:Tests.Lib.UnexpectedPropertyException.Message" />
        <element api="P:Tests.Lib.UnexpectedPropertyException.MemberInfo" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib" />
      </containers>
    </api>
    <api id="M:Tests.Lib.UnexpectedPropertyException.#ctor(System.String,System.Reflection.MemberInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/UnexpectedPropertyException.cs" startLine="31" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib" />
        <type api="T:Tests.Lib.UnexpectedPropertyException" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.UnexpectedPropertyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/UnexpectedPropertyException.cs" startLine="37" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib" />
        <type api="T:Tests.Lib.UnexpectedPropertyException" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.UnexpectedPropertyException.MemberInfo">
      <apidata name="MemberInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/UnexpectedPropertyException.cs" startLine="24" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MemberInfo" />
      <returns>
        <type api="T:System.Reflection.MemberInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib" />
        <type api="T:Tests.Lib.UnexpectedPropertyException" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.UnexpectedPropertyException.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/UnexpectedPropertyException.cs" startLine="17" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.Exception.Message">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Runtime.InteropServices._Exception.Message">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib" />
        <type api="T:Tests.Lib.UnexpectedPropertyException" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Lib.Fixtures">
      <apidata name="Tests.Lib.Fixtures" group="namespace" />
      <elements>
        <element api="T:Tests.Lib.Fixtures.FixtureLogger" />
        <element api="T:Tests.Lib.Fixtures.Lifecycle" />
        <element api="T:Tests.Lib.Fixtures.GlobalLoggingFixture" />
        <element api="T:Tests.Lib.Fixtures.TestContainerFixture" />
        <element api="T:Tests.Lib.Fixtures.AppContainerFixture" />
        <element api="T:Tests.Lib.Fixtures.ContainerFixture" />
        <element api="T:Tests.Lib.Fixtures.LoggingFixture" />
        <element api="T:Tests.Lib.Fixtures.WpfApplicationFixture" />
        <element api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" />
        <element api="T:Tests.Lib.Fixtures.WpfApplicationHelper" />
        <element api="T:Tests.Lib.Fixtures.CombinedFixture" />
      </elements>
    </api>
    <api id="T:Tests.Lib.Fixtures.AppContainerFixture">
      <apidata name="AppContainerFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IAsyncLifetime" ref="true" />
        <type api="T:Autofac.ILifetimeScope" ref="true" />
        <type api="T:Autofac.IComponentContext" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.#ctor(Xunit.Abstractions.IMessageSink)" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.InitializeAsync" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.DisposeAsync" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.ResolveComponent(Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.Dispose" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope(System.Object)" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope(System.Action{Autofac.ContainerBuilder})" />
        <element api="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope(System.Object,System.Action{Autofac.ContainerBuilder})" />
        <element api="P:Tests.Lib.Fixtures.AppContainerFixture.LifetimeScope" />
        <element api="P:Tests.Lib.Fixtures.AppContainerFixture.ComponentRegistry" />
        <element api="P:Tests.Lib.Fixtures.AppContainerFixture.Disposer" />
        <element api="P:Tests.Lib.Fixtures.AppContainerFixture.Tag" />
        <element api="E:Tests.Lib.Fixtures.AppContainerFixture.ChildLifetimeScopeBeginning" />
        <element api="E:Tests.Lib.Fixtures.AppContainerFixture.CurrentScopeEnding" />
        <element api="E:Tests.Lib.Fixtures.AppContainerFixture.ResolveOperationBeginning" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.BrowsableAttribute" ref="true" />
          <argument>
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.#ctor(Xunit.Abstractions.IMessageSink)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="45" />
      <parameters>
        <parameter name="sink">
          <type api="T:Xunit.Abstractions.IMessageSink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope">
      <apidata name="BeginLifetimeScope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="115" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <implements>
        <member api="M:Autofac.ILifetimeScope.BeginLifetimeScope">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope(System.Action{Autofac.ContainerBuilder})">
      <apidata name="BeginLifetimeScope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="126" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="configurationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:Autofac.ContainerBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <implements>
        <member api="M:Autofac.ILifetimeScope.BeginLifetimeScope(System.Action{Autofac.ContainerBuilder})">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope(System.Object)">
      <apidata name="BeginLifetimeScope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="123" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="tag">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <implements>
        <member api="M:Autofac.ILifetimeScope.BeginLifetimeScope(System.Object)">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.BeginLifetimeScope(System.Object,System.Action{Autofac.ContainerBuilder})">
      <apidata name="BeginLifetimeScope" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="129" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="tag">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="configurationAction">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:Autofac.ContainerBuilder" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <implements>
        <member api="M:Autofac.ILifetimeScope.BeginLifetimeScope(System.Object,System.Action{Autofac.ContainerBuilder})">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="E:Tests.Lib.Fixtures.AppContainerFixture.ChildLifetimeScopeBeginning">
      <apidata name="ChildLifetimeScopeBeginning" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ChildLifetimeScopeBeginning" />
      <remover name="remove_ChildLifetimeScopeBeginning" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.Lifetime.LifetimeScopeBeginningEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Autofac.Core.Lifetime.LifetimeScopeBeginningEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Autofac.ILifetimeScope.ChildLifetimeScopeBeginning">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.AppContainerFixture.ComponentRegistry">
      <apidata name="ComponentRegistry" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="101" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_ComponentRegistry" />
      <returns>
        <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
      </returns>
      <implements>
        <member api="P:Autofac.IComponentContext.ComponentRegistry">
          <type api="T:Autofac.IComponentContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="E:Tests.Lib.Fixtures.AppContainerFixture.CurrentScopeEnding">
      <apidata name="CurrentScopeEnding" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_CurrentScopeEnding" />
      <remover name="remove_CurrentScopeEnding" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.Lifetime.LifetimeScopeEndingEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Autofac.Core.Lifetime.LifetimeScopeEndingEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Autofac.ILifetimeScope.CurrentScopeEnding">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="105" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.DisposeAsync">
      <apidata name="DisposeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="82" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.DisposeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.AppContainerFixture.Disposer">
      <apidata name="Disposer" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="132" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Disposer" />
      <returns>
        <type api="T:Autofac.Core.IDisposer" ref="true" />
      </returns>
      <implements>
        <member api="P:Autofac.ILifetimeScope.Disposer">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.InitializeAsync">
      <apidata name="InitializeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="69" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.InitializeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.AppContainerFixture.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="62" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LifetimeScope" />
      <setter name="set_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.AppContainerFixture.ResolveComponent(Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <apidata name="ResolveComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="96" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Core.Parameter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:Autofac.IComponentContext.ResolveComponent(Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
          <type api="T:Autofac.IComponentContext" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="E:Tests.Lib.Fixtures.AppContainerFixture.ResolveOperationBeginning">
      <apidata name="ResolveOperationBeginning" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_ResolveOperationBeginning" />
      <remover name="remove_ResolveOperationBeginning" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.Resolving.ResolveOperationBeginningEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Autofac.Core.Resolving.ResolveOperationBeginningEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Autofac.ILifetimeScope.ResolveOperationBeginning">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.AppContainerFixture.Tag">
      <apidata name="Tag" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/AppContainerFixture.cs" startLine="135" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Tag" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:Autofac.ILifetimeScope.Tag">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.CombinedFixture">
      <apidata name="CombinedFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/CombinedFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IAsyncLifetime" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.CombinedFixture.InitializeAsync" />
        <element api="M:Tests.Lib.Fixtures.CombinedFixture.DisposeAsync" />
        <element api="M:Tests.Lib.Fixtures.CombinedFixture.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.CombinedFixture.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/CombinedFixture.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.CombinedFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.CombinedFixture.DisposeAsync">
      <apidata name="DisposeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/CombinedFixture.cs" startLine="42" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.DisposeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.CombinedFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.CombinedFixture.InitializeAsync">
      <apidata name="InitializeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/CombinedFixture.cs" startLine="35" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.InitializeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.CombinedFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.ContainerFixture">
      <apidata name="ContainerFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/ContainerFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IAsyncLifetime" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.ContainerFixture.#ctor" />
        <element api="M:Tests.Lib.Fixtures.ContainerFixture.InitializeAsync" />
        <element api="M:Tests.Lib.Fixtures.ContainerFixture.DisposeAsync" />
        <element api="P:Tests.Lib.Fixtures.ContainerFixture.LifetimeScope" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.ContainerFixture.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/ContainerFixture.cs" startLine="42" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.ContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.ContainerFixture.DisposeAsync">
      <apidata name="DisposeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/ContainerFixture.cs" startLine="67" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.DisposeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.ContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.ContainerFixture.InitializeAsync">
      <apidata name="InitializeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/ContainerFixture.cs" startLine="58" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.InitializeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.ContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.ContainerFixture.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/ContainerFixture.cs" startLine="52" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.ContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.FixtureLogger">
      <apidata name="FixtureLogger" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/FixtureLogger.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.Fixtures.FixtureLogger.LogFixtureLifecycleEvent(System.Type,Tests.Lib.Fixtures.Lifecycle)" />
        <element api="M:Tests.Lib.Fixtures.FixtureLogger.LogFixtureFinalizedLifecycleEvent(System.Type)" />
        <element api="M:Tests.Lib.Fixtures.FixtureLogger.LogFixtureCreatedLifecycleEvent(System.Type)" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.FixtureLogger.LogFixtureCreatedLifecycleEvent(System.Type)">
      <apidata name="LogFixtureCreatedLifecycleEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Tests/Lib/Fixtures/FixtureLogger.cs" startLine="40" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixtureType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.FixtureLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.FixtureLogger.LogFixtureFinalizedLifecycleEvent(System.Type)">
      <apidata name="LogFixtureFinalizedLifecycleEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Tests/Lib/Fixtures/FixtureLogger.cs" startLine="30" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixtureType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.FixtureLogger" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.FixtureLogger.LogFixtureLifecycleEvent(System.Type,Tests.Lib.Fixtures.Lifecycle)">
      <apidata name="LogFixtureLifecycleEvent" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Tests/Lib/Fixtures/FixtureLogger.cs" startLine="20" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="fixtureType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="lifecycle">
          <type api="T:Tests.Lib.Fixtures.Lifecycle" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.FixtureLogger" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.GlobalLoggingFixture">
      <apidata name="GlobalLoggingFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/GlobalLoggingFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IAsyncLifetime" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.GlobalLoggingFixture.#ctor(Xunit.Abstractions.IMessageSink)" />
        <element api="M:Tests.Lib.Fixtures.GlobalLoggingFixture.InitializeAsync" />
        <element api="M:Tests.Lib.Fixtures.GlobalLoggingFixture.DisposeAsync" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.GlobalLoggingFixture.#ctor(Xunit.Abstractions.IMessageSink)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/GlobalLoggingFixture.cs" startLine="34" />
      <parameters>
        <parameter name="sink">
          <type api="T:Xunit.Abstractions.IMessageSink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.GlobalLoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.GlobalLoggingFixture.DisposeAsync">
      <apidata name="DisposeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/GlobalLoggingFixture.cs" startLine="69" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.DisposeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.GlobalLoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.GlobalLoggingFixture.InitializeAsync">
      <apidata name="InitializeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/GlobalLoggingFixture.cs" startLine="62" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.InitializeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.GlobalLoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.IWpfApplicationHelper">
      <apidata name="IWpfApplicationHelper" group="type" subgroup="interface" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </implementors>
      <elements>
        <element api="M:Tests.Lib.Fixtures.IWpfApplicationHelper.MakeWindowWrap(System.Type,System.Type)" />
        <element api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.BasePackUri" />
        <element api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.MyApp" />
        <element api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.Op" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.IWpfApplicationHelper.BasePackUri">
      <apidata name="BasePackUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BasePackUri" />
      <setter name="set_BasePackUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.IWpfApplicationHelper.MakeWindowWrap(System.Type,System.Type)">
      <apidata name="MakeWindowWrap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="genericType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="wrappedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.IWpfApplicationHelper.MyApp">
      <apidata name="MyApp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MyApp" />
      <setter name="set_MyApp" />
      <returns>
        <type api="T:System.Windows.Application" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.IWpfApplicationHelper.Op">
      <apidata name="Op" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Op" />
      <setter name="set_Op" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperation" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.Lifecycle">
      <apidata name="Lifecycle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Tests.Lib.Fixtures.Lifecycle.Created" />
        <element api="F:Tests.Lib.Fixtures.Lifecycle.Finalized" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="F:Tests.Lib.Fixtures.Lifecycle.Created">
      <apidata name="Created" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Tests.Lib.Fixtures.Lifecycle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.Lifecycle" ref="false" />
      </containers>
    </api>
    <api id="F:Tests.Lib.Fixtures.Lifecycle.Finalized">
      <apidata name="Finalized" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Tests.Lib.Fixtures.Lifecycle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.Lifecycle" ref="false" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.LoggingFixture">
      <apidata name="LoggingFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/LoggingFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.LoggingFixture.SetOutputHelper(Xunit.Abstractions.ITestOutputHelper,NLog.LogLevel)" />
        <element api="M:Tests.Lib.Fixtures.LoggingFixture.#ctor(Xunit.Abstractions.IMessageSink)" />
        <element api="M:Tests.Lib.Fixtures.LoggingFixture.Dispose" />
        <element api="P:Tests.Lib.Fixtures.LoggingFixture.Layout" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.LoggingFixture.#ctor(Xunit.Abstractions.IMessageSink)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/LoggingFixture.cs" startLine="52" />
      <parameters>
        <parameter name="sink">
          <type api="T:Xunit.Abstractions.IMessageSink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.LoggingFixture.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/LoggingFixture.cs" startLine="63" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.LoggingFixture.Layout">
      <apidata name="Layout" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/LoggingFixture.cs" startLine="46" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Layout" />
      <setter name="set_Layout" />
      <returns>
        <type api="T:NLog.Layouts.Layout" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.LoggingFixture.SetOutputHelper(Xunit.Abstractions.ITestOutputHelper,NLog.LogLevel)">
      <apidata name="SetOutputHelper" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/LoggingFixture.cs" startLine="21" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="minLogLevel" optional="true">
          <type api="T:NLog.LogLevel" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.TestContainerFixture">
      <apidata name="TestContainerFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/testContainerFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.Fixtures.TestContainerFixture.#ctor" />
        <element api="P:Tests.Lib.Fixtures.TestContainerFixture.Container" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.TestContainerFixture.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/testContainerFixture.cs" startLine="19" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.TestContainerFixture.Container">
      <apidata name="Container" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/testContainerFixture.cs" startLine="25" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Container" />
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.WpfApplicationFixture">
      <apidata name="WpfApplicationFixture" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IAsyncLifetime" ref="true" />
        <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.WpfApplicationFixture.MakeWindowWrap(System.Type,System.Type)" />
        <element api="M:Tests.Lib.Fixtures.WpfApplicationFixture.InitializeAsync" />
        <element api="M:Tests.Lib.Fixtures.WpfApplicationFixture.DisposeAsync" />
        <element api="M:Tests.Lib.Fixtures.WpfApplicationFixture.#ctor" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationFixture.BasePackUri" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationFixture.Tests#Lib#Fixtures#IWpfApplicationHelper#MyApp" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationFixture.Op" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationFixture.Tests#Lib#Fixtures#IWpfApplicationHelper#BasePackUri" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationFixture.MyApp" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationFixture.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="18" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationFixture.BasePackUri">
      <apidata name="BasePackUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="25" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_BasePackUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationFixture.DisposeAsync">
      <apidata name="DisposeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="88" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.DisposeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationFixture.InitializeAsync">
      <apidata name="InitializeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="81" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.InitializeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationFixture.MakeWindowWrap(System.Type,System.Type)">
      <apidata name="MakeWindowWrap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="55" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="genericType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="wrappedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Tests.Lib.Fixtures.IWpfApplicationHelper.MakeWindowWrap(System.Type,System.Type)">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationFixture.MyApp">
      <apidata name="MyApp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="72" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_MyApp" />
      <returns>
        <type api="T:System.Windows.Application" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationFixture.Op">
      <apidata name="Op" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="43" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Op" />
      <setter name="set_Op" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperation" ref="true" />
      </returns>
      <implements>
        <member api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.Op">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationFixture.Tests#Lib#Fixtures#IWpfApplicationHelper#BasePackUri">
      <apidata name="BasePackUri" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="63" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Tests.Lib.Fixtures.IWpfApplicationHelper.BasePackUri" />
      <setter name="set_Tests.Lib.Fixtures.IWpfApplicationHelper.BasePackUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.BasePackUri">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationFixture.Tests#Lib#Fixtures#IWpfApplicationHelper#MyApp">
      <apidata name="MyApp" group="member" subgroup="property" />
      <memberdata visibility="private" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationFixture.cs" startLine="33" />
      <proceduredata virtual="true" final="true" eii="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Tests.Lib.Fixtures.IWpfApplicationHelper.MyApp" />
      <setter name="set_Tests.Lib.Fixtures.IWpfApplicationHelper.MyApp" />
      <returns>
        <type api="T:System.Windows.Application" ref="true" />
      </returns>
      <implements>
        <member api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.MyApp">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationFixture" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Fixtures.WpfApplicationHelper">
      <apidata name="WpfApplicationHelper" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IAsyncLifetime" ref="true" />
        <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Lib.Fixtures.WpfApplicationHelper.InitializeAsync" />
        <element api="M:Tests.Lib.Fixtures.WpfApplicationHelper.DisposeAsync" />
        <element api="M:Tests.Lib.Fixtures.WpfApplicationHelper.MakeWindowWrap(System.Type,System.Type)" />
        <element api="M:Tests.Lib.Fixtures.WpfApplicationHelper.#ctor" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationHelper.BasePackUri" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationHelper.MyApp" />
        <element api="P:Tests.Lib.Fixtures.WpfApplicationHelper.Op" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ObsoleteAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationHelper.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationHelper.BasePackUri">
      <apidata name="BasePackUri" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" startLine="63" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_BasePackUri" />
      <setter name="set_BasePackUri" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <implements>
        <member api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.BasePackUri">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationHelper.DisposeAsync">
      <apidata name="DisposeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" startLine="94" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.DisposeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationHelper.InitializeAsync">
      <apidata name="InitializeAsync" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" startLine="83" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Threading.Tasks.Task" ref="true" />
      </returns>
      <implements>
        <member api="M:Xunit.IAsyncLifetime.InitializeAsync">
          <type api="T:Xunit.IAsyncLifetime" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Fixtures.WpfApplicationHelper.MakeWindowWrap(System.Type,System.Type)">
      <apidata name="MakeWindowWrap" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" startLine="219" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="genericType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="wrappedType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Tests.Lib.Fixtures.IWpfApplicationHelper.MakeWindowWrap(System.Type,System.Type)">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationHelper.MyApp">
      <apidata name="MyApp" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" startLine="70" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_MyApp" />
      <setter name="set_MyApp" />
      <returns>
        <type api="T:System.Windows.Application" ref="true" />
      </returns>
      <implements>
        <member api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.MyApp">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Fixtures.WpfApplicationHelper.Op">
      <apidata name="Op" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Fixtures/WpfApplicationHelper.cs" startLine="77" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Op" />
      <setter name="set_Op" />
      <returns>
        <type api="T:System.Windows.Threading.DispatcherOperation" ref="true" />
      </returns>
      <implements>
        <member api="P:Tests.Lib.Fixtures.IWpfApplicationHelper.Op">
          <type api="T:Tests.Lib.Fixtures.IWpfApplicationHelper" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Fixtures" />
        <type api="T:Tests.Lib.Fixtures.WpfApplicationHelper" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Lib.Logging">
      <apidata name="Tests.Lib.Logging" group="namespace" />
      <elements>
        <element api="T:Tests.Lib.Logging.XunitTarget" />
        <element api="T:Tests.Lib.Logging.XunitSinkTarget" />
      </elements>
    </api>
    <api id="T:Tests.Lib.Logging.XunitSinkTarget">
      <apidata name="XunitSinkTarget" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Logging/XunitSinkTarget.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.Targets.TargetWithLayout" ref="true" />
          <type api="T:NLog.Targets.Target" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.Logging.XunitSinkTarget.#ctor(System.String,Xunit.Abstractions.IMessageSink)" />
        <element api="M:Tests.Lib.Logging.XunitSinkTarget.Write(NLog.LogEventInfo)" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:NLog.Targets.TargetAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Xunit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Lib.Logging.XunitSinkTarget.#ctor(System.String,Xunit.Abstractions.IMessageSink)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Logging/XunitSinkTarget.cs" startLine="32" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="sink">
          <type api="T:Xunit.Abstractions.IMessageSink" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
        <type api="T:Tests.Lib.Logging.XunitSinkTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Logging.XunitSinkTarget.Write(NLog.LogEventInfo)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Tests/Lib/Logging/XunitSinkTarget.cs" startLine="48" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:NLog.Targets.Target.Write(NLog.LogEventInfo)">
          <type api="T:NLog.Targets.Target" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="logEvent">
          <type api="T:NLog.LogEventInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
        <type api="T:Tests.Lib.Logging.XunitSinkTarget" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Logging.XunitTarget">
      <apidata name="XunitTarget" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Logging/XunitTarget.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.Targets.TargetWithLayout" ref="true" />
          <type api="T:NLog.Targets.Target" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.Logging.XunitTarget.#ctor(System.String)" />
        <element api="M:Tests.Lib.Logging.XunitTarget.Write(NLog.LogEventInfo)" />
        <element api="P:Tests.Lib.Logging.XunitTarget.OutputHelper" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:NLog.Targets.TargetAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Xunit</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Lib.Logging.XunitTarget.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Logging/XunitTarget.cs" startLine="36" />
      <parameters>
        <parameter name="name" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
        <type api="T:Tests.Lib.Logging.XunitTarget" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Logging.XunitTarget.OutputHelper">
      <apidata name="OutputHelper" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Logging/XunitTarget.cs" startLine="30" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OutputHelper" />
      <setter name="set_OutputHelper" />
      <returns>
        <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
        <type api="T:Tests.Lib.Logging.XunitTarget" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Logging.XunitTarget.Write(NLog.LogEventInfo)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Tests/Lib/Logging/XunitTarget.cs" startLine="53" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:NLog.Targets.Target.Write(NLog.LogEventInfo)">
          <type api="T:NLog.Targets.Target" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="logEvent">
          <type api="T:NLog.LogEventInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Logging" />
        <type api="T:Tests.Lib.Logging.XunitTarget" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Lib.Utils">
      <apidata name="Tests.Lib.Utils" group="namespace" />
      <elements>
        <element api="T:Tests.Lib.Utils.CacheUtils" />
        <element api="T:Tests.Lib.Utils.TestMethodLifecycle" />
        <element api="T:Tests.Lib.Utils.LogHelper" />
        <element api="T:Tests.Lib.Utils.Result" />
        <element api="T:Tests.Lib.Utils.WindowWrap`1" />
      </elements>
    </api>
    <api id="T:Tests.Lib.Utils.CacheUtils">
      <apidata name="CacheUtils" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Utils/CacheUtils.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.Utils.CacheUtils.SetupCacheSubscriber" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Utils.CacheUtils.SetupCacheSubscriber">
      <apidata name="SetupCacheSubscriber" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Tests/Lib/Utils/CacheUtils.cs" startLine="32" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.CacheUtils" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Utils.LogHelper">
      <apidata name="LogHelper" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Utils/LogHelper.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Lib.Utils.LogHelper.TestMethodProperties(System.Reflection.MethodInfo,Tests.Lib.Utils.TestMethodLifecycle)" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Utils.LogHelper.TestMethodProperties(System.Reflection.MethodInfo,Tests.Lib.Utils.TestMethodLifecycle)">
      <apidata name="TestMethodProperties" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="Tests/Lib/Utils/LogHelper.cs" startLine="38" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="stage">
          <type api="T:Tests.Lib.Utils.TestMethodLifecycle" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.IDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.LogHelper" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Utils.Result">
      <apidata name="Result" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Utils/Result.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:Tests.Lib.Utils.Result.Success" />
        <element api="M:Tests.Lib.Utils.Result.#ctor(System.Windows.Automation.AutomationElement,System.Boolean)" />
        <element api="P:Tests.Lib.Utils.Result.AutoElem" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Utils.Result.#ctor(System.Windows.Automation.AutomationElement,System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Utils/Result.cs" startLine="25" />
      <parameters>
        <parameter name="autoElem">
          <type api="T:System.Windows.Automation.AutomationElement" ref="true" />
        </parameter>
        <parameter name="success">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.Result" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Lib.Utils.Result.AutoElem">
      <apidata name="AutoElem" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Utils/Result.cs" startLine="35" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AutoElem" />
      <setter name="set_AutoElem" />
      <returns>
        <type api="T:System.Windows.Automation.AutomationElement" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.Result" ref="true" />
      </containers>
    </api>
    <api id="F:Tests.Lib.Utils.Result.Success">
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Lib/Utils/Result.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.Result" ref="true" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Utils.TestMethodLifecycle">
      <apidata name="TestMethodLifecycle" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:Tests.Lib.Utils.TestMethodLifecycle.Before" />
        <element api="F:Tests.Lib.Utils.TestMethodLifecycle.After" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
      </containers>
    </api>
    <api id="F:Tests.Lib.Utils.TestMethodLifecycle.After">
      <apidata name="After" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Tests.Lib.Utils.TestMethodLifecycle" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.TestMethodLifecycle" ref="false" />
      </containers>
    </api>
    <api id="F:Tests.Lib.Utils.TestMethodLifecycle.Before">
      <apidata name="Before" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:Tests.Lib.Utils.TestMethodLifecycle" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.TestMethodLifecycle" ref="false" />
      </containers>
    </api>
    <api id="T:Tests.Lib.Utils.WindowWrap`1">
      <apidata name="WindowWrap" group="type" subgroup="class" />
      <sourceContext file="Tests/Lib/Utils/WindowWrap.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:System.Windows.Media.Visual" ref="true" />
          </constrained>
        </template>
      </templates>
      <elements>
        <element api="M:Tests.Lib.Utils.WindowWrap`1.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
      </containers>
    </api>
    <api id="M:Tests.Lib.Utils.WindowWrap`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Lib/Utils/WindowWrap.cs" startLine="20" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Lib.Utils" />
        <type api="T:Tests.Lib.Utils.WindowWrap`1" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Main">
      <apidata name="Tests.Main" group="namespace" />
      <elements>
        <element api="T:Tests.Main.AppTests" />
        <element api="T:Tests.Main.ContainerHelperTests" />
        <element api="T:Tests.Main.DefaultObjectIdProviderTests" />
        <element api="T:Tests.Main.LogConfigTest" />
        <element api="T:Tests.Main.TestProps" />
      </elements>
    </api>
    <api id="T:Tests.Main.AppTests">
      <apidata name="AppTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/AppTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.AppTests.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)" />
        <element api="M:Tests.Main.AppTests.TestApplyConfiguration" />
        <element api="M:Tests.Main.AppTests.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.AppTests.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/AppTests.cs" startLine="26" />
      <parameters>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.AppTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.AppTests.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/AppTests.cs" startLine="57" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.AppTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.AppTests.TestApplyConfiguration">
      <apidata name="TestApplyConfiguration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/AppTests.cs" startLine="39" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.AppTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.ContainerHelperTests">
      <apidata name="ContainerHelperTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.ContainerHelperTests.#ctor(Tests.Lib.Fixtures.LoggingFixture,Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.AppContainerFixture)" />
        <element api="M:Tests.Main.ContainerHelperTests.ContainerTestResolveIMenuItemList" />
        <element api="M:Tests.Main.ContainerHelperTests.ResolveWindows" />
        <element api="M:Tests.Main.ContainerHelperTests.TestNothing" />
        <element api="M:Tests.Main.ContainerHelperTests.Dispose" />
        <element api="P:Tests.Main.ContainerHelperTests.LoggingFixture" />
        <element api="P:Tests.Main.ContainerHelperTests.Scope" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>WpfApp</value>
          </argument>
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.ContainerHelperTests.#ctor(Tests.Lib.Fixtures.LoggingFixture,Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.AppContainerFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="31" />
      <parameters>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="appContainerFixture">
          <type api="T:Tests.Lib.Fixtures.AppContainerFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.ContainerHelperTests.ContainerTestResolveIMenuItemList">
      <apidata name="ContainerTestResolveIMenuItemList" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="63" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.TraitAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Working</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>false</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.ContainerHelperTests.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="109" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
    </api>
    <api id="P:Tests.Main.ContainerHelperTests.LoggingFixture">
      <apidata name="LoggingFixture" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="49" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoggingFixture" />
      <returns>
        <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.ContainerHelperTests.ResolveWindows">
      <apidata name="ResolveWindows" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="75" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:Tests.Main.ContainerHelperTests.Scope">
      <apidata name="Scope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="56" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Scope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.ContainerHelperTests.TestNothing">
      <apidata name="TestNothing" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/ContainerHelperTests.cs" startLine="87" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.ContainerHelperTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.DefaultObjectIdProviderTests">
      <apidata name="DefaultObjectIdProviderTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.#ctor(Tests.Lib.Fixtures.LoggingFixture,Xunit.Abstractions.ITestOutputHelper)" />
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.GetInstanceByComponentRegistrationTest" />
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.GetInstanceCountTest" />
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.GetObjectInstancesTest" />
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.GetRootNodesTest" />
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.ProvideObjectInstanceIdentifierTest" />
        <element api="M:Tests.Main.DefaultObjectIdProviderTests.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.#ctor(Tests.Lib.Fixtures.LoggingFixture,Xunit.Abstractions.ITestOutputHelper)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="23" />
      <parameters>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
        <parameter name="helper">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="91" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.GetInstanceByComponentRegistrationTest">
      <apidata name="GetInstanceByComponentRegistrationTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="35" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.GetInstanceCountTest">
      <apidata name="GetInstanceCountTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="47" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.GetObjectInstancesTest">
      <apidata name="GetObjectInstancesTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="59" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.GetRootNodesTest">
      <apidata name="GetRootNodesTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="70" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.DefaultObjectIdProviderTests.ProvideObjectInstanceIdentifierTest">
      <apidata name="ProvideObjectInstanceIdentifierTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/DefaultObjectIdProviderTests.cs" startLine="81" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.DefaultObjectIdProviderTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.LogConfigTest">
      <apidata name="LogConfigTest" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/LogConfigTest.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.LogConfigTest.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)" />
        <element api="M:Tests.Main.LogConfigTest.TestEnsureConfigTwoArgs" />
        <element api="M:Tests.Main.LogConfigTest.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.LogConfigTest.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/LogConfigTest.cs" startLine="26" />
      <parameters>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.LogConfigTest" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.LogConfigTest.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/LogConfigTest.cs" startLine="74" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.LogConfigTest" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.LogConfigTest.TestEnsureConfigTwoArgs">
      <apidata name="TestEnsureConfigTwoArgs" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/LogConfigTest.cs" startLine="67" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.LogConfigTest" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.TestProps">
      <apidata name="TestProps" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/TestProps.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.TestProps.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)" />
        <element api="M:Tests.Main.TestProps.TestPropsConfigured" />
        <element api="M:Tests.Main.TestProps.Dispose" />
        <element api="P:Tests.Main.TestProps.TypeToConsider" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.TestProps.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/TestProps.cs" startLine="27" />
      <parameters>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.TestProps" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.TestProps.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/TestProps.cs" startLine="224" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.TestProps" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.TestProps.TestPropsConfigured">
      <apidata name="TestPropsConfigured" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/TestProps.cs" startLine="42" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.TestProps" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:Tests.Main.TestProps.TypeToConsider">
      <apidata name="TypeToConsider" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/TestProps.cs" startLine="137" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TypeToConsider" />
      <setter name="set_TypeToConsider" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main" />
        <type api="T:Tests.Main.TestProps" ref="true" />
      </containers>
    </api>
    <api id="N:Tests.Main.Converters">
      <apidata name="Tests.Main.Converters" group="namespace" />
      <elements>
        <element api="T:Tests.Main.Converters.InstanceRegistrationConverterTests" />
        <element api="T:Tests.Main.Converters.RegistrationConverterTests" />
        <element api="T:Tests.Main.Converters.TestConverterEnumeration" />
        <element api="T:Tests.Main.Converters.TestResolveServiceConverter" />
      </elements>
    </api>
    <api id="T:Tests.Main.Converters.InstanceRegistrationConverterTests">
      <apidata name="InstanceRegistrationConverterTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Converters/InstanceRegistrationConverterTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.Converters.InstanceRegistrationConverterTests.#ctor(Tests.Lib.Fixtures.TestContainerFixture,Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)" />
        <element api="M:Tests.Main.Converters.InstanceRegistrationConverterTests.LazyLoadButton" />
        <element api="M:Tests.Main.Converters.InstanceRegistrationConverterTests.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Converters.InstanceRegistrationConverterTests.#ctor(Tests.Lib.Fixtures.TestContainerFixture,Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Converters/InstanceRegistrationConverterTests.cs" startLine="44" />
      <parameters>
        <parameter name="fixture">
          <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.InstanceRegistrationConverterTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Converters.InstanceRegistrationConverterTests.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Converters/InstanceRegistrationConverterTests.cs" startLine="200" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.InstanceRegistrationConverterTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Converters.InstanceRegistrationConverterTests.LazyLoadButton">
      <apidata name="LazyLoadButton" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Converters/InstanceRegistrationConverterTests.cs" startLine="62" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.InstanceRegistrationConverterTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.Converters.RegistrationConverterTests">
      <apidata name="RegistrationConverterTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Converters/RegistrationConverterTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Tests.Main.Converters.RegistrationConverterTests.#ctor(Tests.Lib.Fixtures.TestContainerFixture,Xunit.Abstractions.ITestOutputHelper)" />
        <element api="M:Tests.Main.Converters.RegistrationConverterTests.TestConversion1" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Converters.RegistrationConverterTests.#ctor(Tests.Lib.Fixtures.TestContainerFixture,Xunit.Abstractions.ITestOutputHelper)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Converters/RegistrationConverterTests.cs" startLine="38" />
      <parameters>
        <parameter name="fixture">
          <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.RegistrationConverterTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Converters.RegistrationConverterTests.TestConversion1">
      <apidata name="TestConversion1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Converters/RegistrationConverterTests.cs" startLine="58" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.RegistrationConverterTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.Converters.TestConverterEnumeration">
      <apidata name="TestConverterEnumeration" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Converters/TestConverterEnumeration.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.Converters.TestConverterEnumeration.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)" />
        <element api="M:Tests.Main.Converters.TestConverterEnumeration.TestConverterEnumeration1" />
        <element api="M:Tests.Main.Converters.TestConverterEnumeration.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Converters.TestConverterEnumeration.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Converters/TestConverterEnumeration.cs" startLine="28" />
      <parameters>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.TestConverterEnumeration" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Converters.TestConverterEnumeration.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Converters/TestConverterEnumeration.cs" startLine="200" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.TestConverterEnumeration" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Converters.TestConverterEnumeration.TestConverterEnumeration1">
      <apidata name="TestConverterEnumeration1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Converters/TestConverterEnumeration.cs" startLine="148" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.TestConverterEnumeration" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.Converters.TestResolveServiceConverter">
      <apidata name="TestResolveServiceConverter" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Converters/TestResolveServiceConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
          </specialization>
        </type>
      </implements>
      <elements>
        <element api="M:Tests.Main.Converters.TestResolveServiceConverter.#ctor(Tests.Lib.Fixtures.TestContainerFixture,Xunit.Abstractions.ITestOutputHelper)" />
        <element api="M:Tests.Main.Converters.TestResolveServiceConverter.TestConversion1" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Converters.TestResolveServiceConverter.#ctor(Tests.Lib.Fixtures.TestContainerFixture,Xunit.Abstractions.ITestOutputHelper)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Converters/TestResolveServiceConverter.cs" startLine="39" />
      <parameters>
        <parameter name="fixture">
          <type api="T:Tests.Lib.Fixtures.TestContainerFixture" ref="true" />
        </parameter>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.TestResolveServiceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Converters.TestResolveServiceConverter.TestConversion1">
      <apidata name="TestConversion1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Converters/TestResolveServiceConverter.cs" startLine="53" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Converters" />
        <type api="T:Tests.Main.Converters.TestResolveServiceConverter" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:Tests.Main.UI">
      <apidata name="Tests.Main.UI" group="namespace" />
      <elements>
        <element api="T:Tests.Main.UI.TypeControlTests" />
      </elements>
    </api>
    <api id="T:Tests.Main.UI.TypeControlTests">
      <apidata name="TypeControlTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/UI/TypeControlTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.UI.TypeControlTests.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)" />
        <element api="M:Tests.Main.UI.TypeControlTests.TestTypeControl" />
        <element api="M:Tests.Main.UI.TypeControlTests.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.UI" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.UI.TypeControlTests.#ctor(Xunit.Abstractions.ITestOutputHelper,Tests.Lib.Fixtures.LoggingFixture)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/UI/TypeControlTests.cs" startLine="33" />
      <parameters>
        <parameter name="output">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.UI" />
        <type api="T:Tests.Main.UI.TypeControlTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.UI.TypeControlTests.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/UI/TypeControlTests.cs" startLine="412" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.UI" />
        <type api="T:Tests.Main.UI.TypeControlTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.UI.TypeControlTests.TestTypeControl">
      <apidata name="TestTypeControl" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="Tests/Main/UI/TypeControlTests.cs" startLine="47" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.UI" />
        <type api="T:Tests.Main.UI.TypeControlTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.TraitAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>UITest</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>true</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="N:Tests.Main.Utils">
      <apidata name="Tests.Main.Utils" group="namespace" />
      <elements>
        <element api="T:Tests.Main.Utils.InfoContextTests" />
        <element api="T:Tests.Main.Utils.PushContextAttributeTests" />
        <element api="T:Tests.Main.Utils.TestsProxyUtils" />
      </elements>
    </api>
    <api id="T:Tests.Main.Utils.InfoContextTests">
      <apidata name="InfoContextTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Utils/InfoContextTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Main.Utils.InfoContextTests.EnumeratorTest" />
        <element api="M:Tests.Main.Utils.InfoContextTests.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Utils.InfoContextTests.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Utils/InfoContextTests.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.InfoContextTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Utils.InfoContextTests.EnumeratorTest">
      <apidata name="EnumeratorTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/InfoContextTests.cs" startLine="19" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.InfoContextTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.Utils.PushContextAttributeTests">
      <apidata name="PushContextAttributeTests" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Utils/PushContextAttributeTests.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:Tests.Main.Utils.PushContextAttributeTests.AfterTest" />
        <element api="M:Tests.Main.Utils.PushContextAttributeTests.BeforeTest" />
        <element api="M:Tests.Main.Utils.PushContextAttributeTests.PushContextAttributeTest" />
        <element api="M:Tests.Main.Utils.PushContextAttributeTests.#ctor" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Tests.Attributes.LogTestMethodAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Tests.Attributes.BeforeAfterLoggerAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Utils.PushContextAttributeTests.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Utils/PushContextAttributeTests.cs" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.PushContextAttributeTests" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Utils.PushContextAttributeTests.AfterTest">
      <apidata name="AfterTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/PushContextAttributeTests.cs" startLine="21" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.PushContextAttributeTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>context1</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Utils.PushContextAttributeTests.BeforeTest">
      <apidata name="BeforeTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/PushContextAttributeTests.cs" startLine="27" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.PushContextAttributeTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Utils.PushContextAttributeTests.PushContextAttributeTest">
      <apidata name="PushContextAttributeTest" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/PushContextAttributeTests.cs" startLine="34" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.PushContextAttributeTests" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.FactAttribute" ref="true" />
        </attribute>
        <attribute>
          <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>test</value>
          </argument>
          <argument>
            <type api="T:System.String" ref="true" />
            <value>123</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="T:Tests.Main.Utils.TestsProxyUtils">
      <apidata name="TestsProxyUtils" group="type" subgroup="class" />
      <sourceContext file="Tests/Main/Utils/TestsProxyUtils.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Xunit.IClassFixture`1" ref="true">
          <specialization>
            <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
          </specialization>
        </type>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:Tests.Main.Utils.TestsProxyUtils.#ctor(Tests.Lib.Fixtures.LoggingFixture,Xunit.Abstractions.ITestOutputHelper)" />
        <element api="M:Tests.Main.Utils.TestsProxyUtils.Test1" />
        <element api="M:Tests.Main.Utils.TestsProxyUtils.Test2" />
        <element api="M:Tests.Main.Utils.TestsProxyUtils.Dispose" />
      </elements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.CollectionAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>GeneralPurpose</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Utils.TestsProxyUtils.#ctor(Tests.Lib.Fixtures.LoggingFixture,Xunit.Abstractions.ITestOutputHelper)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="Tests/Main/Utils/TestsProxyUtils.cs" startLine="21" />
      <parameters>
        <parameter name="loggingFixture">
          <type api="T:Tests.Lib.Fixtures.LoggingFixture" ref="true" />
        </parameter>
        <parameter name="helper">
          <type api="T:Xunit.Abstractions.ITestOutputHelper" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.TestsProxyUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Utils.TestsProxyUtils.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/TestsProxyUtils.cs" startLine="90" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.TestsProxyUtils" ref="true" />
      </containers>
    </api>
    <api id="M:Tests.Main.Utils.TestsProxyUtils.Test1">
      <apidata name="Test1" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/TestsProxyUtils.cs" startLine="41" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.TestsProxyUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:Tests.Main.Utils.TestsProxyUtils.Test2">
      <apidata name="Test2" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="Tests/Main/Utils/TestsProxyUtils.cs" startLine="77" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="Tests" module="Tests" kind="DynamicallyLinkedLibrary" />
        <namespace api="N:Tests.Main.Utils" />
        <type api="T:Tests.Main.Utils.TestsProxyUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:Xunit.WpfFactAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:WpfApp">
      <apidata name="WpfApp" group="namespace" />
      <elements>
        <element api="T:WpfApp.NewMainWindow" />
        <element api="T:WpfApp.DesignData" />
        <element api="T:WpfApp.Props" />
        <element api="T:WpfApp.ResolveServiceList" />
        <element api="T:WpfApp.WpfAppCommands" />
        <element api="T:WpfApp.LogTextWriter" />
        <element api="T:WpfApp.ResourceMetadata" />
        <element api="T:WpfApp.TestO" />
        <element api="T:WpfApp.MainWindow" />
      </elements>
    </api>
    <api id="T:WpfApp.DesignData">
      <apidata name="DesignData" group="type" subgroup="class" />
      <sourceContext file="WpfApp/DesignData.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.DesignData.#ctor" />
        <element api="P:WpfApp.DesignData.LifetimeScope" />
        <element api="P:WpfApp.DesignData.InstanceList" />
        <element api="P:WpfApp.DesignData.InstanceInfo" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.DesignData.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/DesignData.cs" startLine="17" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.DesignData" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.DesignData.InstanceInfo">
      <apidata name="InstanceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/DesignData.cs" startLine="42" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceInfo" />
      <returns>
        <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.DesignData" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.DesignData.InstanceList">
      <apidata name="InstanceList" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/DesignData.cs" startLine="36" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.DesignData" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.DesignData.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/DesignData.cs" startLine="29" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.DesignData" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.LogTextWriter">
      <apidata name="LogTextWriter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/LogTextWriter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.IO.TextWriter" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.LogTextWriter.#ctor(NLog.Logger)" />
        <element api="M:WpfApp.LogTextWriter.WriteLine(System.String)" />
        <element api="P:WpfApp.LogTextWriter.Encoding" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.LogTextWriter.#ctor(NLog.Logger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/LogTextWriter.cs" startLine="38" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.Logger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.LogTextWriter" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.LogTextWriter.Encoding">
      <apidata name="Encoding" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/LogTextWriter.cs" startLine="38" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:System.IO.TextWriter.Encoding">
          <type api="T:System.IO.TextWriter" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Encoding" />
      <returns>
        <type api="T:System.Text.Encoding" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.LogTextWriter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.LogTextWriter.WriteLine(System.String)">
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/LogTextWriter.cs" startLine="53" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.IO.TextWriter.WriteLine(System.String)">
          <type api="T:System.IO.TextWriter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.LogTextWriter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.MainWindow">
      <apidata name="MainWindow" group="type" subgroup="class" />
      <sourceContext file="WpfApp/MainWindow.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.MainWindow.#ctor" />
        <element api="M:WpfApp.MainWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.MainWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/MainWindow.xaml.cs" startLine="24" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.MainWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/MainWindow.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.NewMainWindow">
      <apidata name="NewMainWindow" group="type" subgroup="class" />
      <sourceContext file="WpfApp/NewMainWindow.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.NewMainWindow.#ctor" />
        <element api="M:WpfApp.NewMainWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.NewMainWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/NewMainWindow.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.NewMainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.NewMainWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/NewMainWindow.g.cs" startLine="50" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.NewMainWindow" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Props">
      <apidata name="Props" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Props.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:WpfApp.Props.LoggerRegisteredEvent" />
        <element api="F:WpfApp.Props.MenuItemListCollectionViewChangedEvent" />
        <element api="F:WpfApp.Props.MenuItemListCollectionViewProperty" />
        <element api="F:WpfApp.Props.LifetimeScopeChangedEvent" />
        <element api="F:WpfApp.Props.LifetimeScopeProperty" />
        <element api="F:WpfApp.Props.RenderedTypeChangedEvent" />
        <element api="F:WpfApp.Props.RenderedTypeProperty" />
        <element api="F:WpfApp.Props.AssemblyListChangedEvent" />
        <element api="F:WpfApp.Props.AssemblyListProperty" />
        <element api="F:WpfApp.Props.ContainerChangedEvent" />
        <element api="F:WpfApp.Props.ContainerProperty" />
        <element api="F:WpfApp.Props.ResolveServiceListChangedEvent" />
        <element api="F:WpfApp.Props.ResolveServiceListProperty" />
        <element api="M:WpfApp.Props.AddOnMenuItemListCollectionViewChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveOnMenuItemListCollectionViewChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.GetMenuItemListCollectionView(System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Props.SetMenuItemListCollectionView(System.Windows.DependencyObject,System.Windows.Data.CollectionView)" />
        <element api="M:WpfApp.Props.AddLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.AddLifetimeScopeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveLifetimeScopeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.GetLifetimeScope(System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Props.SetLifetimeScope(System.Windows.DependencyObject,Autofac.ILifetimeScope)" />
        <element api="M:WpfApp.Props.AddRenderedTypeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveRenderedTypeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.GetRenderedType(System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Props.SetRenderedType(System.Windows.DependencyObject,System.Type)" />
        <element api="M:WpfApp.Props.AddOnAssemblyListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveOnAssemblyListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.GetAssemblyList(System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Props.SetAssemblyList(System.Windows.DependencyObject,WpfApp.Core.AssemblyList)" />
        <element api="M:WpfApp.Props.AddContainerChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveContainerChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.GetContainer(System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Props.SetContainer(System.Windows.DependencyObject,Autofac.IContainer)" />
        <element api="M:WpfApp.Props.AddOnResolveServiceListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.RemoveOnResolveServiceListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
        <element api="M:WpfApp.Props.GetResolveServiceList(System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Props.SetResolveServiceList(System.Windows.DependencyObject,WpfApp.ResolveServiceList)" />
        <element api="P:WpfApp.Props.MenuItemListCollectionView" />
        <element api="P:WpfApp.Props.LifetimeScope" />
        <element api="P:WpfApp.Props.RenderedType" />
        <element api="P:WpfApp.Props.AssemblyList" />
        <element api="P:WpfApp.Props.Container" />
        <element api="P:WpfApp.Props.ResolveServiceList" />
        <element api="E:WpfApp.Props.LoggerRegistered" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddContainerChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddContainerChangedEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="734" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddLifetimeScopeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddLifetimeScopeChangedEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="410" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddLoggerRegisteredHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="325" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddOnAssemblyListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddOnAssemblyListChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="624" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddOnMenuItemListCollectionViewChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddOnMenuItemListCollectionViewChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="252" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddOnResolveServiceListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddOnResolveServiceListChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="870" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.AddRenderedTypeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="AddRenderedTypeChangedEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="520" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Props.AssemblyList">
      <apidata name="AssemblyList" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="667" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AssemblyList">
        <attributes>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Window" ref="true" />
              </typeValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_AssemblyList" />
      <returns>
        <type api="T:WpfApp.Core.AssemblyList" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:WpfApp.Props.AssemblyListProperty">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:WpfApp.Props.GetAssemblyList(System.Windows.DependencyObject)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:WpfApp.Props.SetAssemblyList(System.Windows.DependencyObject,WpfApp.Core.AssemblyList)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:WpfApp.Props.AssemblyListChangedEvent">
      <apidata name="AssemblyListChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Props.AssemblyListProperty">
      <apidata name="AssemblyListProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Props.Container">
      <apidata name="Container" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="771" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Container">
        <attributes>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Window" ref="true" />
              </typeValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Container" />
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:WpfApp.Props.ContainerProperty">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:WpfApp.Props.GetContainer(System.Windows.DependencyObject)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:WpfApp.Props.SetContainer(System.Windows.DependencyObject,Autofac.IContainer)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:WpfApp.Props.ContainerChangedEvent">
      <apidata name="ContainerChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Props.ContainerProperty">
      <apidata name="ContainerProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.GetAssemblyList(System.Windows.DependencyObject)">
      <apidata name="GetAssemblyList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="667" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:WpfApp.Core.AssemblyList" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Window" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Props.GetContainer(System.Windows.DependencyObject)">
      <apidata name="GetContainer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="771" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.IContainer" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Window" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Props.GetLifetimeScope(System.Windows.DependencyObject)">
      <apidata name="GetLifetimeScope" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="453" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Window" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Controls.UserControl" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Props.GetMenuItemListCollectionView(System.Windows.DependencyObject)">
      <apidata name="GetMenuItemListCollectionView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="293" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Window" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Props.GetRenderedType(System.Windows.DependencyObject)">
      <apidata name="GetRenderedType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="556" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Window" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Props.GetResolveServiceList(System.Windows.DependencyObject)">
      <apidata name="GetResolveServiceList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="914" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:WpfApp.ResolveServiceList" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Window" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.FrameworkElement" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Windows.Controls.UserControl" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:WpfApp.Props.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="453" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LifetimeScope">
        <attributes>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Window" ref="true" />
              </typeValue>
            </argument>
          </attribute>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Controls.UserControl" ref="true" />
              </typeValue>
            </argument>
          </attribute>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.FrameworkElement" ref="true" />
              </typeValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:WpfApp.Props.LifetimeScopeProperty">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:WpfApp.Props.GetLifetimeScope(System.Windows.DependencyObject)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:WpfApp.Props.SetLifetimeScope(System.Windows.DependencyObject,Autofac.ILifetimeScope)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:WpfApp.Props.LifetimeScopeChangedEvent">
      <apidata name="LifetimeScopeChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Props.LifetimeScopeProperty">
      <apidata name="LifetimeScopeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Props.LoggerRegistered">
      <apidata name="LoggerRegistered" group="member" subgroup="event" subsubgroup="attachedEvent" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoggerRegistered" />
      <remover name="remove_LoggerRegistered" />
      <eventhandler>
        <type api="T:System.Windows.RoutedEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedeventdata>
        <field>
          <member api="F:WpfApp.Props.LoggerRegisteredEvent">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <adder>
          <member api="M:WpfApp.Props.AddLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </adder>
        <remover>
          <member api="M:WpfApp.Props.RemoveLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </remover>
      </attachedeventdata>
    </api>
    <api id="F:WpfApp.Props.LoggerRegisteredEvent">
      <apidata name="LoggerRegisteredEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Props.MenuItemListCollectionView">
      <apidata name="MenuItemListCollectionView" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="293" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuItemListCollectionView">
        <attributes>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Window" ref="true" />
              </typeValue>
            </argument>
          </attribute>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.FrameworkElement" ref="true" />
              </typeValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuItemListCollectionView" />
      <returns>
        <type api="T:System.Windows.Data.CollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:WpfApp.Props.MenuItemListCollectionViewProperty">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:WpfApp.Props.GetMenuItemListCollectionView(System.Windows.DependencyObject)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:WpfApp.Props.SetMenuItemListCollectionView(System.Windows.DependencyObject,System.Windows.Data.CollectionView)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:WpfApp.Props.MenuItemListCollectionViewChangedEvent">
      <apidata name="MenuItemListCollectionViewChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Props.MenuItemListCollectionViewProperty">
      <apidata name="MenuItemListCollectionViewProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveContainerChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveContainerChangedEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="753" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveLifetimeScopeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveLifetimeScopeChangedEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="431" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveLoggerRegisteredHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveLoggerRegisteredHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="347" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveOnAssemblyListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveOnAssemblyListChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="643" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveOnMenuItemListCollectionViewChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveOnMenuItemListCollectionViewChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="273" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveOnResolveServiceListChangedHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveOnResolveServiceListChangedHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="889" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.RemoveRenderedTypeChangedEventHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)">
      <apidata name="RemoveRenderedTypeChangedEventHandler" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="539" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="handler">
          <type api="T:System.Windows.RoutedEventHandler" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Props.RenderedType">
      <apidata name="RenderedType" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="556" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderedType">
        <attributes>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Window" ref="true" />
              </typeValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_RenderedType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:WpfApp.Props.RenderedTypeProperty">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:WpfApp.Props.GetRenderedType(System.Windows.DependencyObject)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:WpfApp.Props.SetRenderedType(System.Windows.DependencyObject,System.Type)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:WpfApp.Props.RenderedTypeChangedEvent">
      <apidata name="RenderedTypeChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Props.RenderedTypeProperty">
      <apidata name="RenderedTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Props.ResolveServiceList">
      <apidata name="ResolveServiceList" group="member" subgroup="property" subsubgroup="attachedProperty" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="914" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResolveServiceList">
        <attributes>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Window" ref="true" />
              </typeValue>
            </argument>
          </attribute>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.FrameworkElement" ref="true" />
              </typeValue>
            </argument>
          </attribute>
          <attribute>
            <type api="T:System.Windows.AttachedPropertyBrowsableForTypeAttribute" ref="true" />
            <argument>
              <type api="T:System.Type" ref="true" />
              <typeValue>
                <type api="T:System.Windows.Controls.UserControl" ref="true" />
              </typeValue>
            </argument>
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ResolveServiceList" />
      <returns>
        <type api="T:WpfApp.ResolveServiceList" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
      <attachedpropertydata>
        <field>
          <member api="F:WpfApp.Props.ResolveServiceListProperty">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </field>
        <getter>
          <member api="M:WpfApp.Props.GetResolveServiceList(System.Windows.DependencyObject)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </getter>
        <setter>
          <member api="M:WpfApp.Props.SetResolveServiceList(System.Windows.DependencyObject,WpfApp.ResolveServiceList)">
            <type api="T:WpfApp.Props" ref="true" />
          </member>
        </setter>
      </attachedpropertydata>
    </api>
    <api id="F:WpfApp.Props.ResolveServiceListChangedEvent">
      <apidata name="ResolveServiceListChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Props.ResolveServiceListProperty">
      <apidata name="ResolveServiceListProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.SetAssemblyList(System.Windows.DependencyObject,WpfApp.Core.AssemblyList)">
      <apidata name="SetAssemblyList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="678" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:WpfApp.Core.AssemblyList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.SetContainer(System.Windows.DependencyObject,Autofac.IContainer)">
      <apidata name="SetContainer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="781" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Autofac.IContainer" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.SetLifetimeScope(System.Windows.DependencyObject,Autofac.ILifetimeScope)">
      <apidata name="SetLifetimeScope" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="463" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.SetMenuItemListCollectionView(System.Windows.DependencyObject,System.Windows.Data.CollectionView)">
      <apidata name="SetMenuItemListCollectionView" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="307" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Windows.Data.CollectionView" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.SetRenderedType(System.Windows.DependencyObject,System.Type)">
      <apidata name="SetRenderedType" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="566" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Props.SetResolveServiceList(System.Windows.DependencyObject,WpfApp.ResolveServiceList)">
      <apidata name="SetResolveServiceList" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Props.cs" startLine="928" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:WpfApp.ResolveServiceList" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.Props" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.ResolveServiceList">
      <apidata name="ResolveServiceList" group="type" subgroup="class" />
      <sourceContext file="WpfApp/ResolveServiceList.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.ResolveServiceList.#ctor" />
        <element api="M:WpfApp.ResolveServiceList.#ctor(System.Collections.Generic.List{WpfApp.Core.Xaml.ResolveService})" />
        <element api="M:WpfApp.ResolveServiceList.#ctor(System.Collections.Generic.IEnumerable{WpfApp.Core.Xaml.ResolveService})" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.ResolveServiceList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/ResolveServiceList.cs" startLine="29" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.ResolveServiceList" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.ResolveServiceList.#ctor(System.Collections.Generic.IEnumerable{WpfApp.Core.Xaml.ResolveService})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/ResolveServiceList.cs" startLine="55" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.ResolveServiceList" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.ResolveServiceList.#ctor(System.Collections.Generic.List{WpfApp.Core.Xaml.ResolveService})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/ResolveServiceList.cs" startLine="41" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.ResolveServiceList" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.ResourceMetadata">
      <apidata name="ResourceMetadata" group="type" subgroup="class" />
      <sourceContext file="WpfApp/ResourceMetadata.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.ResourceMetadata.#ctor(System.String)" />
        <element api="P:WpfApp.ResourceMetadata.ResourceName" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="M:WpfApp.ResourceMetadata.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/ResourceMetadata.cs" startLine="18" />
      <parameters>
        <parameter name="resourceName">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.ResourceMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.ResourceMetadata.ResourceName">
      <apidata name="ResourceName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/ResourceMetadata.cs" startLine="24" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ResourceName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.ResourceMetadata" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.TestO">
      <apidata name="TestO" group="type" subgroup="class" />
      <sourceContext file="WpfApp/TestO.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IAddChild" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.TestO.#ctor" />
        <element api="M:WpfApp.TestO.AddChild(System.Object)" />
        <element api="M:WpfApp.TestO.AddText(System.String)" />
        <element api="P:WpfApp.TestO.Content" />
        <element api="P:WpfApp.TestO.LifetimeScope" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>Content</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.TestO.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/TestO.cs" startLine="37" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.TestO" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.TestO.AddChild(System.Object)">
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/TestO.cs" startLine="48" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddChild(System.Object)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.TestO" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.TestO.AddText(System.String)">
      <apidata name="AddText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/TestO.cs" startLine="56" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddText(System.String)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.TestO" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.TestO.Content">
      <apidata name="Content" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/TestO.cs" startLine="37" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Content" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.TestO" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.TypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:WpfApp.Core.Converters.RegistrationSourceConverter" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="P:WpfApp.TestO.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/TestO.cs" startLine="43" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LifetimeScope" />
      <setter name="set_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.TestO" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.WpfAppCommands">
      <apidata name="WpfAppCommands" group="type" subgroup="class" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:WpfApp.WpfAppCommands.AppSettings" />
        <element api="F:WpfApp.WpfAppCommands.OpenWindow" />
        <element api="F:WpfApp.WpfAppCommands.QuitApplication" />
        <element api="F:WpfApp.WpfAppCommands.LoadAssemblyList" />
        <element api="F:WpfApp.WpfAppCommands.Restart" />
        <element api="F:WpfApp.WpfAppCommands.DumpDebug" />
        <element api="F:WpfApp.WpfAppCommands.FilterInstances" />
        <element api="F:WpfApp.WpfAppCommands.Load" />
        <element api="F:WpfApp.WpfAppCommands.Metadata" />
        <element api="F:WpfApp.WpfAppCommands.VisitType" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.AppSettings">
      <apidata name="AppSettings" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.DumpDebug">
      <apidata name="DumpDebug" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.FilterInstances">
      <apidata name="FilterInstances" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.Load">
      <apidata name="Load" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.LoadAssemblyList">
      <apidata name="LoadAssemblyList" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.Metadata">
      <apidata name="Metadata" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.OpenWindow">
      <apidata name="OpenWindow" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.QuitApplication">
      <apidata name="QuitApplication" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.Restart">
      <apidata name="Restart" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.WpfAppCommands.VisitType">
      <apidata name="VisitType" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/WpfAppCommands.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.Input.RoutedUICommand" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp" />
        <type api="T:WpfApp.WpfAppCommands" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Application">
      <apidata name="WpfApp.Application" group="namespace" />
      <elements>
        <element api="T:WpfApp.Application.ExitCode" />
        <element api="T:WpfApp.Application.App" />
        <element api="T:WpfApp.Application.App.OnDebugMessageRaised" />
      </elements>
    </api>
    <api id="T:WpfApp.Application.App">
      <apidata name="App" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Application" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Application.App.#ctor(System.EventHandler{WpfApp.Debug.DebugEventArgs})" />
        <element api="M:WpfApp.Application.App.Dispose" />
        <element api="M:WpfApp.Application.App.DoOnStartup(System.String[])" />
        <element api="M:WpfApp.Application.App.InitializeComponent" />
        <element api="M:WpfApp.Application.App.Main" />
        <element api="P:WpfApp.Application.App.ConfigSettings" />
        <element api="P:WpfApp.Application.App.TCS" />
        <element api="P:WpfApp.Application.App.Stage2Complete" />
        <element api="P:WpfApp.Application.App.Initialized" />
        <element api="P:WpfApp.Application.App.ShowMainWindow" />
        <element api="P:WpfApp.Application.App.DoTracing" />
        <element api="P:WpfApp.Application.App.MenuItemListCollectionView" />
        <element api="P:WpfApp.Application.App.ProcessArgs" />
        <element api="E:WpfApp.Application.App.DebugMessage" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
      </containers>
    </api>
    <api id="M:WpfApp.Application.App.#ctor(System.EventHandler{WpfApp.Debug.DebugEventArgs})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="131" />
      <parameters>
        <parameter name="debugEventHandler" optional="true">
          <type api="T:System.EventHandler`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
            </specialization>
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.ConfigSettings">
      <apidata name="ConfigSettings" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="131" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ConfigSettings" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Application.App.DebugMessage">
      <apidata name="DebugMessage" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_DebugMessage" />
      <remover name="remove_DebugMessage" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Application.App.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="215" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Application.App.DoOnStartup(System.String[])">
      <apidata name="DoOnStartup" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="646" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="args">
          <arrayOf rank="1">
            <type api="T:System.String" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.DoTracing">
      <apidata name="DoTracing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="182" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DoTracing" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Application.App.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Application/App.g.cs" startLine="49" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.Initialized">
      <apidata name="Initialized" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="165" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Initialized" />
      <setter name="set_Initialized" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Application.App.Main">
      <apidata name="Main" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" />
      <proceduredata virtual="false" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.STAThreadAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:WpfApp.Application.App.MenuItemListCollectionView">
      <apidata name="MenuItemListCollectionView" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="189" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuItemListCollectionView" />
      <setter name="set_MenuItemListCollectionView" />
      <returns>
        <type api="T:System.Windows.Data.ListCollectionView" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.ProcessArgs">
      <apidata name="ProcessArgs" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="208" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ProcessArgs" />
      <setter name="set_ProcessArgs" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.ShowMainWindow">
      <apidata name="ShowMainWindow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="174" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShowMainWindow" />
      <setter name="set_ShowMainWindow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.Stage2Complete">
      <apidata name="Stage2Complete" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="153" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Stage2Complete" />
      <setter name="set_Stage2Complete" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Application.App.TCS">
      <apidata name="TCS" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Application/App.xaml.cs" startLine="142" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TCS" />
      <returns>
        <type api="T:System.Threading.Tasks.TaskCompletionSource`1" ref="true">
          <specialization>
            <type api="T:System.Int32" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Application.App.OnDebugMessageRaised">
      <apidata name="OnDebugMessageRaised" group="type" subgroup="delegate" />
      <sourceContext file="WpfApp/Application/App.xaml" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.App" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Application.ExitCode">
      <apidata name="ExitCode" group="type" subgroup="enumeration" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <elements>
        <element api="F:WpfApp.Application.ExitCode.Success" />
        <element api="F:WpfApp.Application.ExitCode.GeneralError" />
        <element api="F:WpfApp.Application.ExitCode.ArgumentsError" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
      </containers>
    </api>
    <api id="F:WpfApp.Application.ExitCode.ArgumentsError">
      <apidata name="ArgumentsError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:WpfApp.Application.ExitCode" ref="false" />
      </returns>
      <value>2</value>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.ExitCode" ref="false" />
      </containers>
    </api>
    <api id="F:WpfApp.Application.ExitCode.GeneralError">
      <apidata name="GeneralError" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:WpfApp.Application.ExitCode" ref="false" />
      </returns>
      <value>1</value>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.ExitCode" ref="false" />
      </containers>
    </api>
    <api id="F:WpfApp.Application.ExitCode.Success">
      <apidata name="Success" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:WpfApp.Application.ExitCode" ref="false" />
      </returns>
      <value>0</value>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Application" />
        <type api="T:WpfApp.Application.ExitCode" ref="false" />
      </containers>
    </api>
    <api id="N:WpfApp.Config">
      <apidata name="WpfApp.Config" group="namespace" />
      <elements>
        <element api="T:WpfApp.Config.ConfigTargetAttribute" />
        <element api="T:WpfApp.Config.ContainerHelperSection" />
        <element api="T:WpfApp.Config.LoggingSection" />
        <element api="T:WpfApp.Config.LoggerSettings" />
      </elements>
    </api>
    <api id="T:WpfApp.Config.ConfigTargetAttribute">
      <apidata name="ConfigTargetAttribute" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Config/ConfigTargetAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Config.ConfigTargetAttribute.#ctor(System.Type)" />
        <element api="P:WpfApp.Config.ConfigTargetAttribute.TargetType" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Class" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Config.ConfigTargetAttribute.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Config/ConfigTargetAttribute.cs" startLine="26" />
      <parameters>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.ConfigTargetAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Config.ConfigTargetAttribute.TargetType">
      <apidata name="TargetType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Config/ConfigTargetAttribute.cs" startLine="32" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_TargetType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.ConfigTargetAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Config.ContainerHelperSection">
      <apidata name="ContainerHelperSection" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Config/ContainerHelperSection.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Config.ContainerHelperSection.#ctor" />
        <element api="P:WpfApp.Config.ContainerHelperSection.DoInterception" />
        <element api="P:WpfApp.Config.ContainerHelperSection.DoTraceConditionalRegistration" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:WpfApp.Config.ConfigTargetAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:WpfApp.Core.Container.ContainerHelperSettings" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Config.ContainerHelperSection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Config/ContainerHelperSection.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.ContainerHelperSection" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Config.ContainerHelperSection.DoInterception">
      <apidata name="DoInterception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Config/ContainerHelperSection.cs" startLine="20" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoInterception" />
      <setter name="set_DoInterception" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.ContainerHelperSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DoInterception</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="IsKey">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="P:WpfApp.Config.ContainerHelperSection.DoTraceConditionalRegistration">
      <apidata name="DoTraceConditionalRegistration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Config/ContainerHelperSection.cs" startLine="31" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoTraceConditionalRegistration" />
      <setter name="set_DoTraceConditionalRegistration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.ContainerHelperSection" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Configuration.ConfigurationPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>DoTraceConditionalRegistration</value>
          </argument>
          <assignment name="DefaultValue">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="IsRequired">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
          <assignment name="IsKey">
            <type api="T:System.Boolean" ref="false" />
            <value>False</value>
          </assignment>
        </attribute>
      </attributes>
    </api>
    <api id="T:WpfApp.Config.LoggerSettings">
      <apidata name="LoggerSettings" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Config.LoggerSettings.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
      </containers>
    </api>
    <api id="M:WpfApp.Config.LoggerSettings.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.LoggerSettings" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Config.LoggingSection">
      <apidata name="LoggingSection" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Config/LoggingSection.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Configuration.ConfigurationSection" ref="true" />
          <type api="T:System.Configuration.ConfigurationElement" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Config.LoggingSection.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:WpfApp.Config.ConfigTargetAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:WpfApp.Config.LoggerSettings" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Config.LoggingSection.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Config/LoggingSection.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Config" />
        <type api="T:WpfApp.Config.LoggingSection" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Controls">
      <apidata name="WpfApp.Controls" group="namespace" />
      <elements>
        <element api="T:WpfApp.Controls.AllResourcesControl" />
        <element api="T:WpfApp.Controls.Container" />
        <element api="T:WpfApp.Controls.SystemParametersControl" />
        <element api="T:WpfApp.Controls.SysProp" />
        <element api="T:WpfApp.Controls.TypedService" />
        <element api="T:WpfApp.Controls.UserControl1" />
        <element api="T:WpfApp.Controls.TypeBrowserPage" />
        <element api="T:WpfApp.Controls.AssemblyBrowser" />
        <element api="T:WpfApp.Controls.DefaultPage" />
        <element api="T:WpfApp.Controls.Registrations" />
        <element api="T:WpfApp.Controls.ResourcesView" />
        <element api="T:WpfApp.Controls.TypeControl" />
        <element api="T:WpfApp.Controls.TypeControl2" />
        <element api="T:WpfApp.Controls.TypeNavigator" />
        <element api="T:WpfApp.Controls.TypePage" />
      </elements>
    </api>
    <api id="T:WpfApp.Controls.AllResourcesControl">
      <apidata name="AllResourcesControl" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/AllResourcesControl.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.AllResourcesControl.#ctor" />
        <element api="M:WpfApp.Controls.AllResourcesControl.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.AllResourcesControl.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/AllResourcesControl.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.AllResourcesControl" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.AllResourcesControl.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/AllResourcesControl.g.cs" startLine="51" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.AllResourcesControl" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.AssemblyBrowser">
      <apidata name="AssemblyBrowser" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/AssemblyBrowser.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.AssemblyBrowser.#ctor" />
        <element api="M:WpfApp.Controls.AssemblyBrowser.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.AssemblyBrowser.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/AssemblyBrowser.xaml.cs" startLine="24" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.AssemblyBrowser" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.AssemblyBrowser.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/AssemblyBrowser.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.AssemblyBrowser" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Container">
      <apidata name="Container" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Container.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.Container.#ctor" />
        <element api="M:WpfApp.Controls.Container.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Container.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Container.xaml.cs" startLine="16" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.Container" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Container.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Container.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.Container" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.DefaultPage">
      <apidata name="DefaultPage" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/DefaultPage.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.Page" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.DefaultPage.#ctor" />
        <element api="M:WpfApp.Controls.DefaultPage.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.DefaultPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/DefaultPage.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.DefaultPage" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.DefaultPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/DefaultPage.g.cs" startLine="49" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.DefaultPage" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Registrations">
      <apidata name="Registrations" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Registrations.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:WpfApp.Controls.Registrations.LifetimeScopeProperty" />
        <element api="M:WpfApp.Controls.Registrations.#ctor" />
        <element api="M:WpfApp.Controls.Registrations.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Registrations.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Registrations.xaml.cs" startLine="28" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.Registrations" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Registrations.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Registrations.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.Registrations" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.Registrations.LifetimeScopeProperty">
      <apidata name="LifetimeScopeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/Registrations.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.Registrations" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.ResourcesView">
      <apidata name="ResourcesView" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/ResourcesView.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.ResourcesView.#ctor" />
        <element api="M:WpfApp.Controls.ResourcesView.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.ResourcesView.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/ResourcesView.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.ResourcesView" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.ResourcesView.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/ResourcesView.g.cs" startLine="49" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.ResourcesView" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.SysProp">
      <apidata name="SysProp" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Controls.SysProp.#ctor" />
        <element api="P:WpfApp.Controls.SysProp.FocusBorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.FocusBorderHeight" />
        <element api="P:WpfApp.Controls.SysProp.HighContrast" />
        <element api="P:WpfApp.Controls.SysProp.FocusBorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.FocusBorderHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.HighContrastKey" />
        <element api="P:WpfApp.Controls.SysProp.DropShadow" />
        <element api="P:WpfApp.Controls.SysProp.FlatMenu" />
        <element api="P:WpfApp.Controls.SysProp.WorkArea" />
        <element api="P:WpfApp.Controls.SysProp.DropShadowKey" />
        <element api="P:WpfApp.Controls.SysProp.FlatMenuKey" />
        <element api="P:WpfApp.Controls.SysProp.WorkAreaKey" />
        <element api="P:WpfApp.Controls.SysProp.IconHorizontalSpacing" />
        <element api="P:WpfApp.Controls.SysProp.IconVerticalSpacing" />
        <element api="P:WpfApp.Controls.SysProp.IconTitleWrap" />
        <element api="P:WpfApp.Controls.SysProp.IconHorizontalSpacingKey" />
        <element api="P:WpfApp.Controls.SysProp.IconVerticalSpacingKey" />
        <element api="P:WpfApp.Controls.SysProp.IconTitleWrapKey" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardCues" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardDelay" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardPreference" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardSpeed" />
        <element api="P:WpfApp.Controls.SysProp.SnapToDefaultButton" />
        <element api="P:WpfApp.Controls.SysProp.WheelScrollLines" />
        <element api="P:WpfApp.Controls.SysProp.MouseHoverTime" />
        <element api="P:WpfApp.Controls.SysProp.MouseHoverHeight" />
        <element api="P:WpfApp.Controls.SysProp.MouseHoverWidth" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardCuesKey" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardDelayKey" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardPreferenceKey" />
        <element api="P:WpfApp.Controls.SysProp.KeyboardSpeedKey" />
        <element api="P:WpfApp.Controls.SysProp.SnapToDefaultButtonKey" />
        <element api="P:WpfApp.Controls.SysProp.WheelScrollLinesKey" />
        <element api="P:WpfApp.Controls.SysProp.MouseHoverTimeKey" />
        <element api="P:WpfApp.Controls.SysProp.MouseHoverHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MouseHoverWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuDropAlignment" />
        <element api="P:WpfApp.Controls.SysProp.MenuFade" />
        <element api="P:WpfApp.Controls.SysProp.MenuShowDelay" />
        <element api="P:WpfApp.Controls.SysProp.MenuDropAlignmentKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuFadeKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuShowDelayKey" />
        <element api="P:WpfApp.Controls.SysProp.ComboBoxPopupAnimation" />
        <element api="P:WpfApp.Controls.SysProp.ComboBoxAnimation" />
        <element api="P:WpfApp.Controls.SysProp.ClientAreaAnimation" />
        <element api="P:WpfApp.Controls.SysProp.CursorShadow" />
        <element api="P:WpfApp.Controls.SysProp.GradientCaptions" />
        <element api="P:WpfApp.Controls.SysProp.HotTracking" />
        <element api="P:WpfApp.Controls.SysProp.ListBoxSmoothScrolling" />
        <element api="P:WpfApp.Controls.SysProp.MenuPopupAnimation" />
        <element api="P:WpfApp.Controls.SysProp.MenuAnimation" />
        <element api="P:WpfApp.Controls.SysProp.SelectionFade" />
        <element api="P:WpfApp.Controls.SysProp.StylusHotTracking" />
        <element api="P:WpfApp.Controls.SysProp.ToolTipPopupAnimation" />
        <element api="P:WpfApp.Controls.SysProp.ToolTipAnimation" />
        <element api="P:WpfApp.Controls.SysProp.ToolTipFade" />
        <element api="P:WpfApp.Controls.SysProp.UIEffects" />
        <element api="P:WpfApp.Controls.SysProp.ComboBoxAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.ClientAreaAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.CursorShadowKey" />
        <element api="P:WpfApp.Controls.SysProp.GradientCaptionsKey" />
        <element api="P:WpfApp.Controls.SysProp.HotTrackingKey" />
        <element api="P:WpfApp.Controls.SysProp.ListBoxSmoothScrollingKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.SelectionFadeKey" />
        <element api="P:WpfApp.Controls.SysProp.StylusHotTrackingKey" />
        <element api="P:WpfApp.Controls.SysProp.ToolTipAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.ToolTipFadeKey" />
        <element api="P:WpfApp.Controls.SysProp.UIEffectsKey" />
        <element api="P:WpfApp.Controls.SysProp.ComboBoxPopupAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuPopupAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.ToolTipPopupAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimizeAnimation" />
        <element api="P:WpfApp.Controls.SysProp.Border" />
        <element api="P:WpfApp.Controls.SysProp.CaretWidth" />
        <element api="P:WpfApp.Controls.SysProp.DragFullWindows" />
        <element api="P:WpfApp.Controls.SysProp.ForegroundFlashCount" />
        <element api="P:WpfApp.Controls.SysProp.BorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.ScrollWidth" />
        <element api="P:WpfApp.Controls.SysProp.ScrollHeight" />
        <element api="P:WpfApp.Controls.SysProp.CaptionWidth" />
        <element api="P:WpfApp.Controls.SysProp.CaptionHeight" />
        <element api="P:WpfApp.Controls.SysProp.SmallCaptionWidth" />
        <element api="P:WpfApp.Controls.SysProp.SmallCaptionHeight" />
        <element api="P:WpfApp.Controls.SysProp.MenuWidth" />
        <element api="P:WpfApp.Controls.SysProp.MenuHeight" />
        <element api="P:WpfApp.Controls.SysProp.MinimizeAnimationKey" />
        <element api="P:WpfApp.Controls.SysProp.BorderKey" />
        <element api="P:WpfApp.Controls.SysProp.CaretWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.ForegroundFlashCountKey" />
        <element api="P:WpfApp.Controls.SysProp.DragFullWindowsKey" />
        <element api="P:WpfApp.Controls.SysProp.BorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.ScrollWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.ScrollHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.CaptionWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.CaptionHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.SmallCaptionWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.ThinHorizontalBorderHeight" />
        <element api="P:WpfApp.Controls.SysProp.ThinVerticalBorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.CursorWidth" />
        <element api="P:WpfApp.Controls.SysProp.CursorHeight" />
        <element api="P:WpfApp.Controls.SysProp.ThickHorizontalBorderHeight" />
        <element api="P:WpfApp.Controls.SysProp.ThickVerticalBorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.MinimumHorizontalDragDistance" />
        <element api="P:WpfApp.Controls.SysProp.MinimumVerticalDragDistance" />
        <element api="P:WpfApp.Controls.SysProp.FixedFrameHorizontalBorderHeight" />
        <element api="P:WpfApp.Controls.SysProp.FixedFrameVerticalBorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.FocusHorizontalBorderHeight" />
        <element api="P:WpfApp.Controls.SysProp.FocusVerticalBorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.FullPrimaryScreenWidth" />
        <element api="P:WpfApp.Controls.SysProp.FullPrimaryScreenHeight" />
        <element api="P:WpfApp.Controls.SysProp.HorizontalScrollBarButtonWidth" />
        <element api="P:WpfApp.Controls.SysProp.HorizontalScrollBarHeight" />
        <element api="P:WpfApp.Controls.SysProp.HorizontalScrollBarThumbWidth" />
        <element api="P:WpfApp.Controls.SysProp.IconWidth" />
        <element api="P:WpfApp.Controls.SysProp.IconHeight" />
        <element api="P:WpfApp.Controls.SysProp.IconGridWidth" />
        <element api="P:WpfApp.Controls.SysProp.IconGridHeight" />
        <element api="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenWidth" />
        <element api="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenHeight" />
        <element api="P:WpfApp.Controls.SysProp.MaximumWindowTrackWidth" />
        <element api="P:WpfApp.Controls.SysProp.MaximumWindowTrackHeight" />
        <element api="P:WpfApp.Controls.SysProp.MenuCheckmarkWidth" />
        <element api="P:WpfApp.Controls.SysProp.MenuCheckmarkHeight" />
        <element api="P:WpfApp.Controls.SysProp.MenuButtonWidth" />
        <element api="P:WpfApp.Controls.SysProp.MenuButtonHeight" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowWidth" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowHeight" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedWindowWidth" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedWindowHeight" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedGridWidth" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedGridHeight" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowTrackWidth" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowTrackHeight" />
        <element api="P:WpfApp.Controls.SysProp.PrimaryScreenWidth" />
        <element api="P:WpfApp.Controls.SysProp.PrimaryScreenHeight" />
        <element api="P:WpfApp.Controls.SysProp.WindowCaptionButtonWidth" />
        <element api="P:WpfApp.Controls.SysProp.WindowCaptionButtonHeight" />
        <element api="P:WpfApp.Controls.SysProp.ResizeFrameHorizontalBorderHeight" />
        <element api="P:WpfApp.Controls.SysProp.ResizeFrameVerticalBorderWidth" />
        <element api="P:WpfApp.Controls.SysProp.SmallIconWidth" />
        <element api="P:WpfApp.Controls.SysProp.SmallIconHeight" />
        <element api="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonWidth" />
        <element api="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonHeight" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenWidth" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenHeight" />
        <element api="P:WpfApp.Controls.SysProp.VerticalScrollBarWidth" />
        <element api="P:WpfApp.Controls.SysProp.VerticalScrollBarButtonHeight" />
        <element api="P:WpfApp.Controls.SysProp.WindowCaptionHeight" />
        <element api="P:WpfApp.Controls.SysProp.KanjiWindowHeight" />
        <element api="P:WpfApp.Controls.SysProp.MenuBarHeight" />
        <element api="P:WpfApp.Controls.SysProp.VerticalScrollBarThumbHeight" />
        <element api="P:WpfApp.Controls.SysProp.IsImmEnabled" />
        <element api="P:WpfApp.Controls.SysProp.IsMediaCenter" />
        <element api="P:WpfApp.Controls.SysProp.IsMenuDropRightAligned" />
        <element api="P:WpfApp.Controls.SysProp.IsMiddleEastEnabled" />
        <element api="P:WpfApp.Controls.SysProp.IsMousePresent" />
        <element api="P:WpfApp.Controls.SysProp.IsMouseWheelPresent" />
        <element api="P:WpfApp.Controls.SysProp.IsPenWindows" />
        <element api="P:WpfApp.Controls.SysProp.IsRemotelyControlled" />
        <element api="P:WpfApp.Controls.SysProp.IsRemoteSession" />
        <element api="P:WpfApp.Controls.SysProp.ShowSounds" />
        <element api="P:WpfApp.Controls.SysProp.IsSlowMachine" />
        <element api="P:WpfApp.Controls.SysProp.SwapButtons" />
        <element api="P:WpfApp.Controls.SysProp.IsTabletPC" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenLeft" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenTop" />
        <element api="P:WpfApp.Controls.SysProp.ThinHorizontalBorderHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.ThinVerticalBorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.CursorWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.CursorHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.ThickHorizontalBorderHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.ThickVerticalBorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.FixedFrameHorizontalBorderHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.FixedFrameVerticalBorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.FocusHorizontalBorderHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.FocusVerticalBorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.FullPrimaryScreenWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.FullPrimaryScreenHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.HorizontalScrollBarButtonWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.HorizontalScrollBarHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.HorizontalScrollBarThumbWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.IconWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.IconHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.IconGridWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.IconGridHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MaximumWindowTrackWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MaximumWindowTrackHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuCheckmarkWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuCheckmarkHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuButtonWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuButtonHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedWindowWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedWindowHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedGridWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimizedGridHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowTrackWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.MinimumWindowTrackHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.PrimaryScreenWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.PrimaryScreenHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.WindowCaptionButtonWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.WindowCaptionButtonHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.ResizeFrameHorizontalBorderHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.ResizeFrameVerticalBorderWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.SmallIconWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.SmallIconHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.VerticalScrollBarWidthKey" />
        <element api="P:WpfApp.Controls.SysProp.VerticalScrollBarButtonHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.WindowCaptionHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.KanjiWindowHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.MenuBarHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.SmallCaptionHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.VerticalScrollBarThumbHeightKey" />
        <element api="P:WpfApp.Controls.SysProp.IsImmEnabledKey" />
        <element api="P:WpfApp.Controls.SysProp.IsMediaCenterKey" />
        <element api="P:WpfApp.Controls.SysProp.IsMenuDropRightAlignedKey" />
        <element api="P:WpfApp.Controls.SysProp.IsMiddleEastEnabledKey" />
        <element api="P:WpfApp.Controls.SysProp.IsMousePresentKey" />
        <element api="P:WpfApp.Controls.SysProp.IsMouseWheelPresentKey" />
        <element api="P:WpfApp.Controls.SysProp.IsPenWindowsKey" />
        <element api="P:WpfApp.Controls.SysProp.IsRemotelyControlledKey" />
        <element api="P:WpfApp.Controls.SysProp.IsRemoteSessionKey" />
        <element api="P:WpfApp.Controls.SysProp.ShowSoundsKey" />
        <element api="P:WpfApp.Controls.SysProp.IsSlowMachineKey" />
        <element api="P:WpfApp.Controls.SysProp.SwapButtonsKey" />
        <element api="P:WpfApp.Controls.SysProp.IsTabletPCKey" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenLeftKey" />
        <element api="P:WpfApp.Controls.SysProp.VirtualScreenTopKey" />
        <element api="P:WpfApp.Controls.SysProp.FocusVisualStyleKey" />
        <element api="P:WpfApp.Controls.SysProp.NavigationChromeStyleKey" />
        <element api="P:WpfApp.Controls.SysProp.NavigationChromeDownLevelStyleKey" />
        <element api="P:WpfApp.Controls.SysProp.PowerLineStatus" />
        <element api="P:WpfApp.Controls.SysProp.PowerLineStatusKey" />
        <element api="P:WpfApp.Controls.SysProp.IsGlassEnabled" />
        <element api="P:WpfApp.Controls.SysProp.UxThemeName" />
        <element api="P:WpfApp.Controls.SysProp.UxThemeColor" />
        <element api="P:WpfApp.Controls.SysProp.WindowCornerRadius" />
        <element api="P:WpfApp.Controls.SysProp.WindowGlassColor" />
        <element api="P:WpfApp.Controls.SysProp.WindowGlassBrush" />
        <element api="P:WpfApp.Controls.SysProp.WindowResizeBorderThickness" />
        <element api="P:WpfApp.Controls.SysProp.WindowNonClientFrameThickness" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.SysProp.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.Border">
      <apidata name="Border" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="442" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Border">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_Border" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.BorderKey">
      <apidata name="BorderKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="511" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderKey" />
      <setter name="set_BorderKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.BorderWidth">
      <apidata name="BorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="463" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderWidth" />
      <setter name="set_BorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.BorderWidthKey">
      <apidata name="BorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="527" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_BorderWidthKey" />
      <setter name="set_BorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CaptionHeight">
      <apidata name="CaptionHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="483" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaptionHeight" />
      <setter name="set_CaptionHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CaptionHeightKey">
      <apidata name="CaptionHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="543" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaptionHeightKey" />
      <setter name="set_CaptionHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CaptionWidth">
      <apidata name="CaptionWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="478" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaptionWidth" />
      <setter name="set_CaptionWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CaptionWidthKey">
      <apidata name="CaptionWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="539" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaptionWidthKey" />
      <setter name="set_CaptionWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CaretWidth">
      <apidata name="CaretWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="447" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaretWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_CaretWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CaretWidthKey">
      <apidata name="CaretWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="515" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CaretWidthKey" />
      <setter name="set_CaretWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ClientAreaAnimation">
      <apidata name="ClientAreaAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="302" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientAreaAnimation">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ClientAreaAnimation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ClientAreaAnimationKey">
      <apidata name="ClientAreaAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="378" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ClientAreaAnimationKey" />
      <setter name="set_ClientAreaAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ComboBoxAnimation">
      <apidata name="ComboBoxAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="297" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ComboBoxAnimation">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ComboBoxAnimation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ComboBoxAnimationKey">
      <apidata name="ComboBoxAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="373" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ComboBoxAnimationKey" />
      <setter name="set_ComboBoxAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ComboBoxPopupAnimation">
      <apidata name="ComboBoxPopupAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="291" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ComboBoxPopupAnimation" />
      <setter name="set_ComboBoxPopupAnimation" />
      <returns>
        <type api="T:System.Windows.Controls.Primitives.PopupAnimation" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ComboBoxPopupAnimationKey">
      <apidata name="ComboBoxPopupAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="423" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ComboBoxPopupAnimationKey" />
      <setter name="set_ComboBoxPopupAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CursorHeight">
      <apidata name="CursorHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="575" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_CursorHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CursorHeightKey">
      <apidata name="CursorHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="870" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorHeightKey" />
      <setter name="set_CursorHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CursorShadow">
      <apidata name="CursorShadow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="307" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorShadow">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_CursorShadow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CursorShadowKey">
      <apidata name="CursorShadowKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="382" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorShadowKey" />
      <setter name="set_CursorShadowKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CursorWidth">
      <apidata name="CursorWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="570" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_CursorWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.CursorWidthKey">
      <apidata name="CursorWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="866" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CursorWidthKey" />
      <setter name="set_CursorWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.DragFullWindows">
      <apidata name="DragFullWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="453" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DragFullWindows">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_DragFullWindows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.DragFullWindowsKey">
      <apidata name="DragFullWindowsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="523" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DragFullWindowsKey" />
      <setter name="set_DragFullWindowsKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.DropShadow">
      <apidata name="DropShadow" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="120" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DropShadow">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_DropShadow" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.DropShadowKey">
      <apidata name="DropShadowKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="136" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DropShadowKey" />
      <setter name="set_DropShadowKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FixedFrameHorizontalBorderHeight">
      <apidata name="FixedFrameHorizontalBorderHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="597" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FixedFrameHorizontalBorderHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FixedFrameHorizontalBorderHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FixedFrameHorizontalBorderHeightKey">
      <apidata name="FixedFrameHorizontalBorderHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="882" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FixedFrameHorizontalBorderHeightKey" />
      <setter name="set_FixedFrameHorizontalBorderHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FixedFrameVerticalBorderWidth">
      <apidata name="FixedFrameVerticalBorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="601" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FixedFrameVerticalBorderWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FixedFrameVerticalBorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FixedFrameVerticalBorderWidthKey">
      <apidata name="FixedFrameVerticalBorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="886" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FixedFrameVerticalBorderWidthKey" />
      <setter name="set_FixedFrameVerticalBorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FlatMenu">
      <apidata name="FlatMenu" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="127" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FlatMenu">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FlatMenu" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FlatMenuKey">
      <apidata name="FlatMenuKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="140" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FlatMenuKey" />
      <setter name="set_FlatMenuKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusBorderHeight">
      <apidata name="FocusBorderHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="95" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusBorderHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FocusBorderHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusBorderHeightKey">
      <apidata name="FocusBorderHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="109" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusBorderHeightKey" />
      <setter name="set_FocusBorderHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusBorderWidth">
      <apidata name="FocusBorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="90" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusBorderWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FocusBorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusBorderWidthKey">
      <apidata name="FocusBorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="105" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusBorderWidthKey" />
      <setter name="set_FocusBorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusHorizontalBorderHeight">
      <apidata name="FocusHorizontalBorderHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="605" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusHorizontalBorderHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FocusHorizontalBorderHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusHorizontalBorderHeightKey">
      <apidata name="FocusHorizontalBorderHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="890" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusHorizontalBorderHeightKey" />
      <setter name="set_FocusHorizontalBorderHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusVerticalBorderWidth">
      <apidata name="FocusVerticalBorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="609" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusVerticalBorderWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FocusVerticalBorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusVerticalBorderWidthKey">
      <apidata name="FocusVerticalBorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="894" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusVerticalBorderWidthKey" />
      <setter name="set_FocusVerticalBorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FocusVisualStyleKey">
      <apidata name="FocusVisualStyleKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1134" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FocusVisualStyleKey" />
      <setter name="set_FocusVisualStyleKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ForegroundFlashCount">
      <apidata name="ForegroundFlashCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="458" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForegroundFlashCount">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ForegroundFlashCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ForegroundFlashCountKey">
      <apidata name="ForegroundFlashCountKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="519" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ForegroundFlashCountKey" />
      <setter name="set_ForegroundFlashCountKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FullPrimaryScreenHeight">
      <apidata name="FullPrimaryScreenHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="617" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FullPrimaryScreenHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FullPrimaryScreenHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FullPrimaryScreenHeightKey">
      <apidata name="FullPrimaryScreenHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="902" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FullPrimaryScreenHeightKey" />
      <setter name="set_FullPrimaryScreenHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FullPrimaryScreenWidth">
      <apidata name="FullPrimaryScreenWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="613" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FullPrimaryScreenWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_FullPrimaryScreenWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.FullPrimaryScreenWidthKey">
      <apidata name="FullPrimaryScreenWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="898" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FullPrimaryScreenWidthKey" />
      <setter name="set_FullPrimaryScreenWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.GradientCaptions">
      <apidata name="GradientCaptions" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="313" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GradientCaptions">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_GradientCaptions" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.GradientCaptionsKey">
      <apidata name="GradientCaptionsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="387" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GradientCaptionsKey" />
      <setter name="set_GradientCaptionsKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HighContrast">
      <apidata name="HighContrast" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="101" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighContrast">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_HighContrast" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HighContrastKey">
      <apidata name="HighContrastKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="113" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HighContrastKey" />
      <setter name="set_HighContrastKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HorizontalScrollBarButtonWidth">
      <apidata name="HorizontalScrollBarButtonWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="621" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalScrollBarButtonWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_HorizontalScrollBarButtonWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HorizontalScrollBarButtonWidthKey">
      <apidata name="HorizontalScrollBarButtonWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="906" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalScrollBarButtonWidthKey" />
      <setter name="set_HorizontalScrollBarButtonWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HorizontalScrollBarHeight">
      <apidata name="HorizontalScrollBarHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="625" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalScrollBarHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_HorizontalScrollBarHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HorizontalScrollBarHeightKey">
      <apidata name="HorizontalScrollBarHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="910" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalScrollBarHeightKey" />
      <setter name="set_HorizontalScrollBarHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HorizontalScrollBarThumbWidth">
      <apidata name="HorizontalScrollBarThumbWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="629" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalScrollBarThumbWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_HorizontalScrollBarThumbWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HorizontalScrollBarThumbWidthKey">
      <apidata name="HorizontalScrollBarThumbWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="914" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HorizontalScrollBarThumbWidthKey" />
      <setter name="set_HorizontalScrollBarThumbWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HotTracking">
      <apidata name="HotTracking" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="319" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HotTracking">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_HotTracking" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.HotTrackingKey">
      <apidata name="HotTrackingKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="391" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_HotTrackingKey" />
      <setter name="set_HotTrackingKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconGridHeight">
      <apidata name="IconGridHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="645" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconGridHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IconGridHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconGridHeightKey">
      <apidata name="IconGridHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="930" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconGridHeightKey" />
      <setter name="set_IconGridHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconGridWidth">
      <apidata name="IconGridWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="641" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconGridWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IconGridWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconGridWidthKey">
      <apidata name="IconGridWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="926" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconGridWidthKey" />
      <setter name="set_IconGridWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconHeight">
      <apidata name="IconHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="637" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IconHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconHeightKey">
      <apidata name="IconHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="922" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconHeightKey" />
      <setter name="set_IconHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconHorizontalSpacing">
      <apidata name="IconHorizontalSpacing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="149" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconHorizontalSpacing" />
      <setter name="set_IconHorizontalSpacing" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconHorizontalSpacingKey">
      <apidata name="IconHorizontalSpacingKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="164" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconHorizontalSpacingKey" />
      <setter name="set_IconHorizontalSpacingKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconTitleWrap">
      <apidata name="IconTitleWrap" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="160" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconTitleWrap" />
      <setter name="set_IconTitleWrap" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconTitleWrapKey">
      <apidata name="IconTitleWrapKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="172" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconTitleWrapKey" />
      <setter name="set_IconTitleWrapKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconVerticalSpacing">
      <apidata name="IconVerticalSpacing" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="154" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconVerticalSpacing" />
      <setter name="set_IconVerticalSpacing" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconVerticalSpacingKey">
      <apidata name="IconVerticalSpacingKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="168" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconVerticalSpacingKey" />
      <setter name="set_IconVerticalSpacingKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconWidth">
      <apidata name="IconWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="633" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IconWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IconWidthKey">
      <apidata name="IconWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="918" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IconWidthKey" />
      <setter name="set_IconWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsGlassEnabled">
      <apidata name="IsGlassEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1155" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsGlassEnabled">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsGlassEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsImmEnabled">
      <apidata name="IsImmEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="786" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsImmEnabled">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsImmEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsImmEnabledKey">
      <apidata name="IsImmEnabledKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1074" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsImmEnabledKey" />
      <setter name="set_IsImmEnabledKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMediaCenter">
      <apidata name="IsMediaCenter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="791" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMediaCenter">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsMediaCenter" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMediaCenterKey">
      <apidata name="IsMediaCenterKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1078" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMediaCenterKey" />
      <setter name="set_IsMediaCenterKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMenuDropRightAligned">
      <apidata name="IsMenuDropRightAligned" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="796" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMenuDropRightAligned">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsMenuDropRightAligned" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMenuDropRightAlignedKey">
      <apidata name="IsMenuDropRightAlignedKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1082" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMenuDropRightAlignedKey" />
      <setter name="set_IsMenuDropRightAlignedKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMiddleEastEnabled">
      <apidata name="IsMiddleEastEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="801" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMiddleEastEnabled">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsMiddleEastEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMiddleEastEnabledKey">
      <apidata name="IsMiddleEastEnabledKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1086" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMiddleEastEnabledKey" />
      <setter name="set_IsMiddleEastEnabledKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMousePresent">
      <apidata name="IsMousePresent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="806" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMousePresent">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsMousePresent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMousePresentKey">
      <apidata name="IsMousePresentKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1090" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMousePresentKey" />
      <setter name="set_IsMousePresentKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMouseWheelPresent">
      <apidata name="IsMouseWheelPresent" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="811" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMouseWheelPresent">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsMouseWheelPresent" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsMouseWheelPresentKey">
      <apidata name="IsMouseWheelPresentKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1094" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsMouseWheelPresentKey" />
      <setter name="set_IsMouseWheelPresentKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsPenWindows">
      <apidata name="IsPenWindows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="816" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsPenWindows">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsPenWindows" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsPenWindowsKey">
      <apidata name="IsPenWindowsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1098" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsPenWindowsKey" />
      <setter name="set_IsPenWindowsKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsRemotelyControlled">
      <apidata name="IsRemotelyControlled" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="821" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsRemotelyControlled">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsRemotelyControlled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsRemotelyControlledKey">
      <apidata name="IsRemotelyControlledKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1102" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsRemotelyControlledKey" />
      <setter name="set_IsRemotelyControlledKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsRemoteSession">
      <apidata name="IsRemoteSession" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="826" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsRemoteSession">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsRemoteSession" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsRemoteSessionKey">
      <apidata name="IsRemoteSessionKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1106" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsRemoteSessionKey" />
      <setter name="set_IsRemoteSessionKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsSlowMachine">
      <apidata name="IsSlowMachine" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="836" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsSlowMachine">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsSlowMachine" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsSlowMachineKey">
      <apidata name="IsSlowMachineKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1114" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsSlowMachineKey" />
      <setter name="set_IsSlowMachineKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsTabletPC">
      <apidata name="IsTabletPC" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="846" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTabletPC">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_IsTabletPC" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.IsTabletPCKey">
      <apidata name="IsTabletPCKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1122" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_IsTabletPCKey" />
      <setter name="set_IsTabletPCKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KanjiWindowHeight">
      <apidata name="KanjiWindowHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="773" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KanjiWindowHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KanjiWindowHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KanjiWindowHeightKey">
      <apidata name="KanjiWindowHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1058" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KanjiWindowHeightKey" />
      <setter name="set_KanjiWindowHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardCues">
      <apidata name="KeyboardCues" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="178" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardCues">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KeyboardCues" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardCuesKey">
      <apidata name="KeyboardCuesKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="224" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardCuesKey" />
      <setter name="set_KeyboardCuesKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardDelay">
      <apidata name="KeyboardDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="183" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardDelay">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KeyboardDelay" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardDelayKey">
      <apidata name="KeyboardDelayKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="228" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardDelayKey" />
      <setter name="set_KeyboardDelayKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardPreference">
      <apidata name="KeyboardPreference" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="189" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardPreference">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KeyboardPreference" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardPreferenceKey">
      <apidata name="KeyboardPreferenceKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="232" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardPreferenceKey" />
      <setter name="set_KeyboardPreferenceKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardSpeed">
      <apidata name="KeyboardSpeed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="194" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardSpeed">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_KeyboardSpeed" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.KeyboardSpeedKey">
      <apidata name="KeyboardSpeedKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="236" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_KeyboardSpeedKey" />
      <setter name="set_KeyboardSpeedKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ListBoxSmoothScrolling">
      <apidata name="ListBoxSmoothScrolling" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="325" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ListBoxSmoothScrolling">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ListBoxSmoothScrolling" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ListBoxSmoothScrollingKey">
      <apidata name="ListBoxSmoothScrollingKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="395" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ListBoxSmoothScrollingKey" />
      <setter name="set_ListBoxSmoothScrollingKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenHeight">
      <apidata name="MaximizedPrimaryScreenHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="653" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximizedPrimaryScreenHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MaximizedPrimaryScreenHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenHeightKey">
      <apidata name="MaximizedPrimaryScreenHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="938" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximizedPrimaryScreenHeightKey" />
      <setter name="set_MaximizedPrimaryScreenHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenWidth">
      <apidata name="MaximizedPrimaryScreenWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="649" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximizedPrimaryScreenWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MaximizedPrimaryScreenWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximizedPrimaryScreenWidthKey">
      <apidata name="MaximizedPrimaryScreenWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="934" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximizedPrimaryScreenWidthKey" />
      <setter name="set_MaximizedPrimaryScreenWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximumWindowTrackHeight">
      <apidata name="MaximumWindowTrackHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="661" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumWindowTrackHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MaximumWindowTrackHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximumWindowTrackHeightKey">
      <apidata name="MaximumWindowTrackHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="946" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumWindowTrackHeightKey" />
      <setter name="set_MaximumWindowTrackHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximumWindowTrackWidth">
      <apidata name="MaximumWindowTrackWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="657" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumWindowTrackWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MaximumWindowTrackWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MaximumWindowTrackWidthKey">
      <apidata name="MaximumWindowTrackWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="942" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaximumWindowTrackWidthKey" />
      <setter name="set_MaximumWindowTrackWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuAnimation">
      <apidata name="MenuAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="336" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuAnimation">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuAnimation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuAnimationKey">
      <apidata name="MenuAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="399" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuAnimationKey" />
      <setter name="set_MenuAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuBarHeight">
      <apidata name="MenuBarHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="777" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuBarHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuBarHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuBarHeightKey">
      <apidata name="MenuBarHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1062" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuBarHeightKey" />
      <setter name="set_MenuBarHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuButtonHeight">
      <apidata name="MenuButtonHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="677" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuButtonHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuButtonHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuButtonHeightKey">
      <apidata name="MenuButtonHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="962" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuButtonHeightKey" />
      <setter name="set_MenuButtonHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuButtonWidth">
      <apidata name="MenuButtonWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="673" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuButtonWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuButtonWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuButtonWidthKey">
      <apidata name="MenuButtonWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="958" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuButtonWidthKey" />
      <setter name="set_MenuButtonWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuCheckmarkHeight">
      <apidata name="MenuCheckmarkHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="669" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuCheckmarkHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuCheckmarkHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuCheckmarkHeightKey">
      <apidata name="MenuCheckmarkHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="954" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuCheckmarkHeightKey" />
      <setter name="set_MenuCheckmarkHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuCheckmarkWidth">
      <apidata name="MenuCheckmarkWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="665" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuCheckmarkWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuCheckmarkWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuCheckmarkWidthKey">
      <apidata name="MenuCheckmarkWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="950" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuCheckmarkWidthKey" />
      <setter name="set_MenuCheckmarkWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuDropAlignment">
      <apidata name="MenuDropAlignment" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="262" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuDropAlignment">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuDropAlignment" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuDropAlignmentKey">
      <apidata name="MenuDropAlignmentKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="278" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuDropAlignmentKey" />
      <setter name="set_MenuDropAlignmentKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuFade">
      <apidata name="MenuFade" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="269" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuFade">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuFade" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuFadeKey">
      <apidata name="MenuFadeKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="282" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuFadeKey" />
      <setter name="set_MenuFadeKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuHeight">
      <apidata name="MenuHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="503" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuHeight" />
      <setter name="set_MenuHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuHeightKey">
      <apidata name="MenuHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="555" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuHeightKey" />
      <setter name="set_MenuHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuPopupAnimation">
      <apidata name="MenuPopupAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="330" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuPopupAnimation" />
      <setter name="set_MenuPopupAnimation" />
      <returns>
        <type api="T:System.Windows.Controls.Primitives.PopupAnimation" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuPopupAnimationKey">
      <apidata name="MenuPopupAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="427" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuPopupAnimationKey" />
      <setter name="set_MenuPopupAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuShowDelay">
      <apidata name="MenuShowDelay" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="274" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuShowDelay">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MenuShowDelay" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuShowDelayKey">
      <apidata name="MenuShowDelayKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="286" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuShowDelayKey" />
      <setter name="set_MenuShowDelayKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuWidth">
      <apidata name="MenuWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="498" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuWidth" />
      <setter name="set_MenuWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MenuWidthKey">
      <apidata name="MenuWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="551" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MenuWidthKey" />
      <setter name="set_MenuWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizeAnimation">
      <apidata name="MinimizeAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="437" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizeAnimation">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimizeAnimation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizeAnimationKey">
      <apidata name="MinimizeAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="507" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizeAnimationKey" />
      <setter name="set_MinimizeAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedGridHeight">
      <apidata name="MinimizedGridHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="701" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedGridHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimizedGridHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedGridHeightKey">
      <apidata name="MinimizedGridHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="986" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedGridHeightKey" />
      <setter name="set_MinimizedGridHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedGridWidth">
      <apidata name="MinimizedGridWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="697" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedGridWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimizedGridWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedGridWidthKey">
      <apidata name="MinimizedGridWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="982" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedGridWidthKey" />
      <setter name="set_MinimizedGridWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedWindowHeight">
      <apidata name="MinimizedWindowHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="693" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedWindowHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimizedWindowHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedWindowHeightKey">
      <apidata name="MinimizedWindowHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="978" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedWindowHeightKey" />
      <setter name="set_MinimizedWindowHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedWindowWidth">
      <apidata name="MinimizedWindowWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="689" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedWindowWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimizedWindowWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimizedWindowWidthKey">
      <apidata name="MinimizedWindowWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="974" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimizedWindowWidthKey" />
      <setter name="set_MinimizedWindowWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumHorizontalDragDistance">
      <apidata name="MinimumHorizontalDragDistance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="589" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumHorizontalDragDistance">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimumHorizontalDragDistance" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumVerticalDragDistance">
      <apidata name="MinimumVerticalDragDistance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="593" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumVerticalDragDistance">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimumVerticalDragDistance" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowHeight">
      <apidata name="MinimumWindowHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="685" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimumWindowHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowHeightKey">
      <apidata name="MinimumWindowHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="970" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowHeightKey" />
      <setter name="set_MinimumWindowHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowTrackHeight">
      <apidata name="MinimumWindowTrackHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="709" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowTrackHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimumWindowTrackHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowTrackHeightKey">
      <apidata name="MinimumWindowTrackHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="994" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowTrackHeightKey" />
      <setter name="set_MinimumWindowTrackHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowTrackWidth">
      <apidata name="MinimumWindowTrackWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="705" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowTrackWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimumWindowTrackWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowTrackWidthKey">
      <apidata name="MinimumWindowTrackWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="990" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowTrackWidthKey" />
      <setter name="set_MinimumWindowTrackWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowWidth">
      <apidata name="MinimumWindowWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="681" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MinimumWindowWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MinimumWindowWidthKey">
      <apidata name="MinimumWindowWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="966" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MinimumWindowWidthKey" />
      <setter name="set_MinimumWindowWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MouseHoverHeight">
      <apidata name="MouseHoverHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="215" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MouseHoverHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MouseHoverHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MouseHoverHeightKey">
      <apidata name="MouseHoverHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="252" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MouseHoverHeightKey" />
      <setter name="set_MouseHoverHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MouseHoverTime">
      <apidata name="MouseHoverTime" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="210" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MouseHoverTime" />
      <setter name="set_MouseHoverTime" />
      <returns>
        <type api="T:System.TimeSpan" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MouseHoverTimeKey">
      <apidata name="MouseHoverTimeKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="248" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MouseHoverTimeKey" />
      <setter name="set_MouseHoverTimeKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MouseHoverWidth">
      <apidata name="MouseHoverWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="220" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MouseHoverWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_MouseHoverWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.MouseHoverWidthKey">
      <apidata name="MouseHoverWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="256" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MouseHoverWidthKey" />
      <setter name="set_MouseHoverWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.NavigationChromeDownLevelStyleKey">
      <apidata name="NavigationChromeDownLevelStyleKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1142" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NavigationChromeDownLevelStyleKey" />
      <setter name="set_NavigationChromeDownLevelStyleKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.NavigationChromeStyleKey">
      <apidata name="NavigationChromeStyleKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1138" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_NavigationChromeStyleKey" />
      <setter name="set_NavigationChromeStyleKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.PowerLineStatus">
      <apidata name="PowerLineStatus" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1146" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PowerLineStatus">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_PowerLineStatus" />
      <returns>
        <type api="T:System.Windows.PowerLineStatus" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.PowerLineStatusKey">
      <apidata name="PowerLineStatusKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1150" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PowerLineStatusKey" />
      <setter name="set_PowerLineStatusKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.PrimaryScreenHeight">
      <apidata name="PrimaryScreenHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="717" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryScreenHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_PrimaryScreenHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.PrimaryScreenHeightKey">
      <apidata name="PrimaryScreenHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1002" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryScreenHeightKey" />
      <setter name="set_PrimaryScreenHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.PrimaryScreenWidth">
      <apidata name="PrimaryScreenWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="713" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryScreenWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_PrimaryScreenWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.PrimaryScreenWidthKey">
      <apidata name="PrimaryScreenWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="998" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_PrimaryScreenWidthKey" />
      <setter name="set_PrimaryScreenWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ResizeFrameHorizontalBorderHeight">
      <apidata name="ResizeFrameHorizontalBorderHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="729" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResizeFrameHorizontalBorderHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ResizeFrameHorizontalBorderHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ResizeFrameHorizontalBorderHeightKey">
      <apidata name="ResizeFrameHorizontalBorderHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1014" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResizeFrameHorizontalBorderHeightKey" />
      <setter name="set_ResizeFrameHorizontalBorderHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ResizeFrameVerticalBorderWidth">
      <apidata name="ResizeFrameVerticalBorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="733" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResizeFrameVerticalBorderWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ResizeFrameVerticalBorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ResizeFrameVerticalBorderWidthKey">
      <apidata name="ResizeFrameVerticalBorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1018" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResizeFrameVerticalBorderWidthKey" />
      <setter name="set_ResizeFrameVerticalBorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ScrollHeight">
      <apidata name="ScrollHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="473" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScrollHeight" />
      <setter name="set_ScrollHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ScrollHeightKey">
      <apidata name="ScrollHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="535" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScrollHeightKey" />
      <setter name="set_ScrollHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ScrollWidth">
      <apidata name="ScrollWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="468" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScrollWidth" />
      <setter name="set_ScrollWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ScrollWidthKey">
      <apidata name="ScrollWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="531" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ScrollWidthKey" />
      <setter name="set_ScrollWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SelectionFade">
      <apidata name="SelectionFade" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="341" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SelectionFade">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SelectionFade" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SelectionFadeKey">
      <apidata name="SelectionFadeKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="403" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SelectionFadeKey" />
      <setter name="set_SelectionFadeKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ShowSounds">
      <apidata name="ShowSounds" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="831" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShowSounds">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ShowSounds" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ShowSoundsKey">
      <apidata name="ShowSoundsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1110" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ShowSoundsKey" />
      <setter name="set_ShowSoundsKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallCaptionHeight">
      <apidata name="SmallCaptionHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="493" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallCaptionHeight" />
      <setter name="set_SmallCaptionHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallCaptionHeightKey">
      <apidata name="SmallCaptionHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1066" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallCaptionHeightKey" />
      <setter name="set_SmallCaptionHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallCaptionWidth">
      <apidata name="SmallCaptionWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="488" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallCaptionWidth" />
      <setter name="set_SmallCaptionWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallCaptionWidthKey">
      <apidata name="SmallCaptionWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="547" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallCaptionWidthKey" />
      <setter name="set_SmallCaptionWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallIconHeight">
      <apidata name="SmallIconHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="741" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallIconHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SmallIconHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallIconHeightKey">
      <apidata name="SmallIconHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1026" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallIconHeightKey" />
      <setter name="set_SmallIconHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallIconWidth">
      <apidata name="SmallIconWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="737" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallIconWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SmallIconWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallIconWidthKey">
      <apidata name="SmallIconWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1022" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallIconWidthKey" />
      <setter name="set_SmallIconWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonHeight">
      <apidata name="SmallWindowCaptionButtonHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="749" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallWindowCaptionButtonHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SmallWindowCaptionButtonHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonHeightKey">
      <apidata name="SmallWindowCaptionButtonHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1034" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallWindowCaptionButtonHeightKey" />
      <setter name="set_SmallWindowCaptionButtonHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonWidth">
      <apidata name="SmallWindowCaptionButtonWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="745" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallWindowCaptionButtonWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SmallWindowCaptionButtonWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SmallWindowCaptionButtonWidthKey">
      <apidata name="SmallWindowCaptionButtonWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1030" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SmallWindowCaptionButtonWidthKey" />
      <setter name="set_SmallWindowCaptionButtonWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SnapToDefaultButton">
      <apidata name="SnapToDefaultButton" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="200" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SnapToDefaultButton">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SnapToDefaultButton" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SnapToDefaultButtonKey">
      <apidata name="SnapToDefaultButtonKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="240" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SnapToDefaultButtonKey" />
      <setter name="set_SnapToDefaultButtonKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.StylusHotTracking">
      <apidata name="StylusHotTracking" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="347" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StylusHotTracking">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_StylusHotTracking" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.StylusHotTrackingKey">
      <apidata name="StylusHotTrackingKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="407" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_StylusHotTrackingKey" />
      <setter name="set_StylusHotTrackingKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SwapButtons">
      <apidata name="SwapButtons" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="841" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwapButtons">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_SwapButtons" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.SwapButtonsKey">
      <apidata name="SwapButtonsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1118" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_SwapButtonsKey" />
      <setter name="set_SwapButtonsKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThickHorizontalBorderHeight">
      <apidata name="ThickHorizontalBorderHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="580" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThickHorizontalBorderHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ThickHorizontalBorderHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThickHorizontalBorderHeightKey">
      <apidata name="ThickHorizontalBorderHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="874" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThickHorizontalBorderHeightKey" />
      <setter name="set_ThickHorizontalBorderHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThickVerticalBorderWidth">
      <apidata name="ThickVerticalBorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="585" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThickVerticalBorderWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ThickVerticalBorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThickVerticalBorderWidthKey">
      <apidata name="ThickVerticalBorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="878" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThickVerticalBorderWidthKey" />
      <setter name="set_ThickVerticalBorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThinHorizontalBorderHeight">
      <apidata name="ThinHorizontalBorderHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="560" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThinHorizontalBorderHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ThinHorizontalBorderHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThinHorizontalBorderHeightKey">
      <apidata name="ThinHorizontalBorderHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="858" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThinHorizontalBorderHeightKey" />
      <setter name="set_ThinHorizontalBorderHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThinVerticalBorderWidth">
      <apidata name="ThinVerticalBorderWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="565" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThinVerticalBorderWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ThinVerticalBorderWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ThinVerticalBorderWidthKey">
      <apidata name="ThinVerticalBorderWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="862" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ThinVerticalBorderWidthKey" />
      <setter name="set_ThinVerticalBorderWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ToolTipAnimation">
      <apidata name="ToolTipAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="357" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToolTipAnimation">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ToolTipAnimation" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ToolTipAnimationKey">
      <apidata name="ToolTipAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="411" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToolTipAnimationKey" />
      <setter name="set_ToolTipAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ToolTipFade">
      <apidata name="ToolTipFade" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="363" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToolTipFade">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_ToolTipFade" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ToolTipFadeKey">
      <apidata name="ToolTipFadeKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="415" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToolTipFadeKey" />
      <setter name="set_ToolTipFadeKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ToolTipPopupAnimation">
      <apidata name="ToolTipPopupAnimation" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="352" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToolTipPopupAnimation" />
      <setter name="set_ToolTipPopupAnimation" />
      <returns>
        <type api="T:System.Windows.Controls.Primitives.PopupAnimation" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.ToolTipPopupAnimationKey">
      <apidata name="ToolTipPopupAnimationKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="431" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ToolTipPopupAnimationKey" />
      <setter name="set_ToolTipPopupAnimationKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.UIEffects">
      <apidata name="UIEffects" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="369" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UIEffects">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_UIEffects" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.UIEffectsKey">
      <apidata name="UIEffectsKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="419" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UIEffectsKey" />
      <setter name="set_UIEffectsKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.UxThemeColor">
      <apidata name="UxThemeColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1163" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UxThemeColor">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_UxThemeColor" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.UxThemeName">
      <apidata name="UxThemeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1159" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_UxThemeName">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_UxThemeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VerticalScrollBarButtonHeight">
      <apidata name="VerticalScrollBarButtonHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="765" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalScrollBarButtonHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VerticalScrollBarButtonHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VerticalScrollBarButtonHeightKey">
      <apidata name="VerticalScrollBarButtonHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1050" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalScrollBarButtonHeightKey" />
      <setter name="set_VerticalScrollBarButtonHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VerticalScrollBarThumbHeight">
      <apidata name="VerticalScrollBarThumbHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="781" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalScrollBarThumbHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VerticalScrollBarThumbHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VerticalScrollBarThumbHeightKey">
      <apidata name="VerticalScrollBarThumbHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1070" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalScrollBarThumbHeightKey" />
      <setter name="set_VerticalScrollBarThumbHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VerticalScrollBarWidth">
      <apidata name="VerticalScrollBarWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="761" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalScrollBarWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VerticalScrollBarWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VerticalScrollBarWidthKey">
      <apidata name="VerticalScrollBarWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1046" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VerticalScrollBarWidthKey" />
      <setter name="set_VerticalScrollBarWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenHeight">
      <apidata name="VirtualScreenHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="757" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VirtualScreenHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenHeightKey">
      <apidata name="VirtualScreenHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1042" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenHeightKey" />
      <setter name="set_VirtualScreenHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenLeft">
      <apidata name="VirtualScreenLeft" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="850" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenLeft">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VirtualScreenLeft" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenLeftKey">
      <apidata name="VirtualScreenLeftKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1126" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenLeftKey" />
      <setter name="set_VirtualScreenLeftKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenTop">
      <apidata name="VirtualScreenTop" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="854" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenTop">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VirtualScreenTop" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenTopKey">
      <apidata name="VirtualScreenTopKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1130" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenTopKey" />
      <setter name="set_VirtualScreenTopKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenWidth">
      <apidata name="VirtualScreenWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="753" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_VirtualScreenWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.VirtualScreenWidthKey">
      <apidata name="VirtualScreenWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1038" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_VirtualScreenWidthKey" />
      <setter name="set_VirtualScreenWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WheelScrollLines">
      <apidata name="WheelScrollLines" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="205" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WheelScrollLines">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WheelScrollLines" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WheelScrollLinesKey">
      <apidata name="WheelScrollLinesKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="244" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WheelScrollLinesKey" />
      <setter name="set_WheelScrollLinesKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCaptionButtonHeight">
      <apidata name="WindowCaptionButtonHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="725" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCaptionButtonHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowCaptionButtonHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCaptionButtonHeightKey">
      <apidata name="WindowCaptionButtonHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1010" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCaptionButtonHeightKey" />
      <setter name="set_WindowCaptionButtonHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCaptionButtonWidth">
      <apidata name="WindowCaptionButtonWidth" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="721" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCaptionButtonWidth">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowCaptionButtonWidth" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCaptionButtonWidthKey">
      <apidata name="WindowCaptionButtonWidthKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1006" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCaptionButtonWidthKey" />
      <setter name="set_WindowCaptionButtonWidthKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCaptionHeight">
      <apidata name="WindowCaptionHeight" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="769" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCaptionHeight">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowCaptionHeight" />
      <returns>
        <type api="T:System.Double" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCaptionHeightKey">
      <apidata name="WindowCaptionHeightKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1054" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCaptionHeightKey" />
      <setter name="set_WindowCaptionHeightKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowCornerRadius">
      <apidata name="WindowCornerRadius" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1167" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowCornerRadius">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowCornerRadius" />
      <returns>
        <type api="T:System.Windows.CornerRadius" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowGlassBrush">
      <apidata name="WindowGlassBrush" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1175" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowGlassBrush">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowGlassBrush" />
      <returns>
        <type api="T:System.Windows.Media.Brush" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowGlassColor">
      <apidata name="WindowGlassColor" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1171" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowGlassColor">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowGlassColor" />
      <returns>
        <type api="T:System.Windows.Media.Color" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowNonClientFrameThickness">
      <apidata name="WindowNonClientFrameThickness" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1183" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowNonClientFrameThickness">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowNonClientFrameThickness" />
      <returns>
        <type api="T:System.Windows.Thickness" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WindowResizeBorderThickness">
      <apidata name="WindowResizeBorderThickness" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="1179" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WindowResizeBorderThickness">
        <attributes>
          <attribute>
            <type api="T:System.Security.SecurityCriticalAttribute" ref="true" />
          </attribute>
        </attributes>
      </getter>
      <setter name="set_WindowResizeBorderThickness" />
      <returns>
        <type api="T:System.Windows.Thickness" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WorkArea">
      <apidata name="WorkArea" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="132" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkArea" />
      <setter name="set_WorkArea" />
      <returns>
        <type api="T:System.Windows.Rect" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.SysProp.WorkAreaKey">
      <apidata name="WorkAreaKey" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="144" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_WorkAreaKey" />
      <setter name="set_WorkAreaKey" />
      <returns>
        <type api="T:System.Windows.ResourceKey" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SysProp" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.SystemParametersControl">
      <apidata name="SystemParametersControl" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.SystemParametersControl.#ctor" />
        <element api="M:WpfApp.Controls.SystemParametersControl.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.SystemParametersControl.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/SystemParametersControl.xaml.cs" startLine="24" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SystemParametersControl" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.SystemParametersControl.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/SystemParametersControl.g.cs" startLine="49" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.SystemParametersControl" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.TypeBrowserPage">
      <apidata name="TypeBrowserPage" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/TypeBrowserPage.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.Page" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.TypeBrowserPage.#ctor" />
        <element api="M:WpfApp.Controls.TypeBrowserPage.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeBrowserPage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/TypeBrowserPage.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeBrowserPage" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeBrowserPage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/TypeBrowserPage.g.cs" startLine="51" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeBrowserPage" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.TypeControl">
      <apidata name="TypeControl" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:WpfApp.Controls.TypeControl.RenderedTypeProperty" />
        <element api="F:WpfApp.Controls.TypeControl.TargetNameProperty" />
        <element api="F:WpfApp.Controls.TypeControl.TargetProperty" />
        <element api="F:WpfApp.Controls.TypeControl.DetailedProperty" />
        <element api="F:WpfApp.Controls.TypeControl.TargetDetailedProperty" />
        <element api="M:WpfApp.Controls.TypeControl.#ctor" />
        <element api="M:WpfApp.Controls.TypeControl.InitializeComponent" />
        <element api="P:WpfApp.Controls.TypeControl.RenderedType" />
        <element api="P:WpfApp.Controls.TypeControl.TargetName" />
        <element api="P:WpfApp.Controls.TypeControl.Target" />
        <element api="P:WpfApp.Controls.TypeControl.Detailed" />
        <element api="P:WpfApp.Controls.TypeControl.TargetDetailed" />
        <element api="P:WpfApp.Controls.TypeControl.FlowDocument" />
        <element api="E:WpfApp.Controls.TypeControl.RenderedTypeChanged" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeControl.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="78" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypeControl.Detailed">
      <apidata name="Detailed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="128" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Detailed" />
      <setter name="set_Detailed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.TypeControl.DetailedProperty">
      <apidata name="DetailedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypeControl.FlowDocument">
      <apidata name="FlowDocument" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="148" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_FlowDocument" />
      <setter name="set_FlowDocument" />
      <returns>
        <type api="T:System.Windows.Documents.FlowDocument" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeControl.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypeControl.RenderedType">
      <apidata name="RenderedType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="92" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RenderedType" />
      <setter name="set_RenderedType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Controls.TypeControl.RenderedTypeChanged">
      <apidata name="RenderedTypeChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_RenderedTypeChanged" />
      <remover name="remove_RenderedTypeChanged" />
      <eventhandler>
        <type api="T:System.Windows.RoutedPropertyChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true">
          <specialization>
            <type api="T:System.Type" ref="true" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.TypeControl.RenderedTypeProperty">
      <apidata name="RenderedTypeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypeControl.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="113" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.Windows.Controls.Frame" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypeControl.TargetDetailed">
      <apidata name="TargetDetailed" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="140" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetDetailed" />
      <setter name="set_TargetDetailed" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.TypeControl.TargetDetailedProperty">
      <apidata name="TargetDetailedProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypeControl.TargetName">
      <apidata name="TargetName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" startLine="103" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_TargetName" />
      <setter name="set_TargetName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.TypeControl.TargetNameProperty">
      <apidata name="TargetNameProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.TypeControl.TargetProperty">
      <apidata name="TargetProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/TypeControl.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.TypeControl2">
      <apidata name="TypeControl2" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/TypeControl2.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.TypeControl2.#ctor" />
        <element api="M:WpfApp.Controls.TypeControl2.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeControl2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/TypeControl2.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeControl2.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeControl2.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeControl2" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.TypedService">
      <apidata name="TypedService" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/TypedService.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Autofac.Core.Service" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Controls.TypedService.#ctor" />
        <element api="P:WpfApp.Controls.TypedService.Description" />
        <element api="P:WpfApp.Controls.TypedService.Desc" />
        <element api="P:WpfApp.Controls.TypedService.ServiceType" />
        <element api="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.Service)" source="extension">
          <apidata name="DebugFormat" group="member" subgroup="method" subsubgroup="extension" />
          <memberdata visibility="public" />
          <proceduredata virtual="false" />
          <returns>
            <type api="T:System.String" ref="true" />
          </returns>
          <containers>
            <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
            <namespace api="N:WpfApp.Core.Debug" />
            <type api="T:WpfApp.Core.Debug.DebugUtils" ref="true" />
          </containers>
        </element>
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypedService.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/TypedService.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypedService" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypedService.Desc">
      <apidata name="Desc" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypedService.cs" startLine="22" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Desc" />
      <setter name="set_Desc" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypedService" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypedService.Description">
      <apidata name="Description" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypedService.cs" startLine="15" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="P:Autofac.Core.Service.Description">
          <type api="T:Autofac.Core.Service" ref="true" />
        </member>
      </overrides>
      <propertydata get="true" />
      <getter name="get_Description" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypedService" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.TypedService.ServiceType">
      <apidata name="ServiceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypedService.cs" startLine="29" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceType" />
      <setter name="set_ServiceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypedService" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.TypeNavigator">
      <apidata name="TypeNavigator" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/TypeNavigator.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.TypeNavigator.#ctor" />
        <element api="M:WpfApp.Controls.TypeNavigator.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeNavigator.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/TypeNavigator.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeNavigator" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypeNavigator.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/TypeNavigator.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypeNavigator" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.TypePage">
      <apidata name="TypePage" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/TypePage.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.Page" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.TypePage.#ctor" />
        <element api="M:WpfApp.Controls.TypePage.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypePage.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/TypePage.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypePage" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.TypePage.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/TypePage.g.cs" startLine="51" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.TypePage" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.UserControl1">
      <apidata name="UserControl1" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/UserControl1.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.UserControl" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.UserControl1.#ctor" />
        <element api="M:WpfApp.Controls.UserControl1.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.UserControl1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/UserControl1.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.UserControl1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.UserControl1.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/UserControl1.g.cs" startLine="49" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls" />
        <type api="T:WpfApp.Controls.UserControl1" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Controls.Windows">
      <apidata name="WpfApp.Controls.Windows" group="namespace" />
      <elements>
        <element api="T:WpfApp.Controls.Windows.AppSettingsWindow" />
        <element api="T:WpfApp.Controls.Windows.ComponentRegistry" />
        <element api="T:WpfApp.Controls.Windows.LogEventInfoCollection" />
        <element api="T:WpfApp.Controls.Windows.MainWindow" />
        <element api="T:WpfApp.Controls.Windows.NewWindow" />
        <element api="T:WpfApp.Controls.Windows.Page1" />
      </elements>
    </api>
    <api id="T:WpfApp.Controls.Windows.AppSettingsWindow">
      <apidata name="AppSettingsWindow" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Windows/AppSettingsWindow.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.Windows.AppSettingsWindow.#ctor" />
        <element api="M:WpfApp.Controls.Windows.AppSettingsWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.AppSettingsWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/AppSettingsWindow.xaml.cs" startLine="15" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.AppSettingsWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.AppSettingsWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/Windows/AppSettingsWindow.g.cs" startLine="50" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.AppSettingsWindow" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Windows.ComponentRegistry">
      <apidata name="ComponentRegistry" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Windows.Markup.IAddChild" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.#ctor" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.#ctor(System.Collections.Generic.IEnumerable{Autofac.Core.IComponentRegistration},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Autofac.Core.IRegistrationSource},System.Boolean)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.AddChild(System.Object)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.AddText(System.String)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.Dispose" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.TryGetRegistration(Autofac.Core.Service,Autofac.Core.IComponentRegistration@)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.IsRegistered(Autofac.Core.Service)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.Register(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.Register(Autofac.Core.IComponentRegistration,System.Boolean)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.RegistrationsFor(Autofac.Core.Service)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.DecoratorsFor(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.DecoratorsFor(Autofac.Core.IServiceWithType)" />
        <element api="M:WpfApp.Controls.Windows.ComponentRegistry.AddRegistrationSource(Autofac.Core.IRegistrationSource)" />
        <element api="P:WpfApp.Controls.Windows.ComponentRegistry.RegistrationsList" />
        <element api="P:WpfApp.Controls.Windows.ComponentRegistry.Properties" />
        <element api="P:WpfApp.Controls.Windows.ComponentRegistry.Registrations" />
        <element api="P:WpfApp.Controls.Windows.ComponentRegistry.Sources" />
        <element api="P:WpfApp.Controls.Windows.ComponentRegistry.HasLocalComponents" />
        <element api="E:WpfApp.Controls.Windows.ComponentRegistry.Registered" />
        <element api="E:WpfApp.Controls.Windows.ComponentRegistry.RegistrationSourceAdded" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.ContentPropertyAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>RegistrationsList</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="33" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.#ctor(System.Collections.Generic.IEnumerable{Autofac.Core.IComponentRegistration},System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IEnumerable{Autofac.Core.IRegistrationSource},System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="42" />
      <parameters>
        <parameter name="registrations">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="properties">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="sources">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Core.IRegistrationSource" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="hasLocalComponents">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.AddChild(System.Object)">
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="65" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddChild(System.Object)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.AddRegistrationSource(Autofac.Core.IRegistrationSource)">
      <apidata name="AddRegistrationSource" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="152" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="source">
          <type api="T:Autofac.Core.IRegistrationSource" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.AddRegistrationSource(Autofac.Core.IRegistrationSource)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.AddText(System.String)">
      <apidata name="AddText" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="71" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="text">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Windows.Markup.IAddChild.AddText(System.String)">
          <type api="T:System.Windows.Markup.IAddChild" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.DecoratorsFor(Autofac.Core.IComponentRegistration)">
      <apidata name="DecoratorsFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="143" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.DecoratorsFor(Autofac.Core.IComponentRegistration)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.DecoratorsFor(Autofac.Core.IServiceWithType)">
      <apidata name="DecoratorsFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="222" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="service">
          <type api="T:Autofac.Core.IServiceWithType" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="77" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.ComponentRegistry.HasLocalComponents">
      <apidata name="HasLocalComponents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="197" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_HasLocalComponents" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:Autofac.Core.IComponentRegistry.HasLocalComponents">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.IsRegistered(Autofac.Core.Service)">
      <apidata name="IsRegistered" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="95" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="service">
          <type api="T:Autofac.Core.Service" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.IsRegistered(Autofac.Core.Service)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.ComponentRegistry.Properties">
      <apidata name="Properties" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="164" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Properties" />
      <returns>
        <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Autofac.Core.IComponentRegistry.Properties">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.Register(Autofac.Core.IComponentRegistration)">
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="100" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.Register(Autofac.Core.IComponentRegistration)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.Register(Autofac.Core.IComponentRegistration,System.Boolean)">
      <apidata name="Register" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="111" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="registration">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
        <parameter name="preserveDefaults">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.Register(Autofac.Core.IComponentRegistration,System.Boolean)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Controls.Windows.ComponentRegistry.Registered">
      <apidata name="Registered" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_Registered" />
      <remover name="remove_Registered" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.ComponentRegisteredEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Autofac.Core.ComponentRegisteredEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Autofac.Core.IComponentRegistry.Registered">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.ComponentRegistry.Registrations">
      <apidata name="Registrations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="170" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Registrations" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Autofac.Core.IComponentRegistry.Registrations">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.RegistrationsFor(Autofac.Core.Service)">
      <apidata name="RegistrationsFor" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="124" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="service">
          <type api="T:Autofac.Core.Service" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.RegistrationsFor(Autofac.Core.Service)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.ComponentRegistry.RegistrationsList">
      <apidata name="RegistrationsList" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="60" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RegistrationsList" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Controls.Windows.ComponentRegistry.RegistrationSourceAdded">
      <apidata name="RegistrationSourceAdded" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_RegistrationSourceAdded" />
      <remover name="remove_RegistrationSourceAdded" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.RegistrationSourceAddedEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:Autofac.Core.RegistrationSourceAddedEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:Autofac.Core.IComponentRegistry.RegistrationSourceAdded">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.ComponentRegistry.Sources">
      <apidata name="Sources" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="184" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_Sources" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.IRegistrationSource" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:Autofac.Core.IComponentRegistry.Sources">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.ComponentRegistry.TryGetRegistration(Autofac.Core.Service,Autofac.Core.IComponentRegistration@)">
      <apidata name="TryGetRegistration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/ComponentRegistry.cs" startLine="86" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="service">
          <type api="T:Autofac.Core.Service" ref="true" />
        </parameter>
        <parameter name="registration" out="true">
          <referenceTo>
            <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Autofac.Core.IComponentRegistry.TryGetRegistration(Autofac.Core.Service,Autofac.Core.IComponentRegistration@)">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.ComponentRegistry" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Windows.LogEventInfoCollection">
      <apidata name="LogEventInfoCollection" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Windows/LogEventInfoCollection.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
            <specialization>
              <type api="T:NLog.LogEventInfo" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:NLog.LogEventInfo" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Controls.Windows.LogEventInfoCollection.#ctor(System.Collections.Generic.List{NLog.LogEventInfo})" />
        <element api="M:WpfApp.Controls.Windows.LogEventInfoCollection.#ctor(System.Collections.Generic.IEnumerable{NLog.LogEventInfo})" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.LogEventInfoCollection.#ctor(System.Collections.Generic.IEnumerable{NLog.LogEventInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/LogEventInfoCollection.cs" startLine="49" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:NLog.LogEventInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.LogEventInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.LogEventInfoCollection.#ctor(System.Collections.Generic.List{NLog.LogEventInfo})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/LogEventInfoCollection.cs" startLine="35" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:NLog.LogEventInfo" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.LogEventInfoCollection" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Windows.MainWindow">
      <apidata name="MainWindow" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:WpfApp.Core.Interfaces.IHaveLogger" ref="true" />
        <type api="T:System.IDisposable" ref="true" />
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:WpfApp.Controls.Windows.MainWindow.LifetimeScopeProperty" />
        <element api="F:WpfApp.Controls.Windows.MainWindow.MenuItemListCollectionViewProperty" />
        <element api="M:WpfApp.Controls.Windows.MainWindow.AddChild(System.Object)" />
        <element api="M:WpfApp.Controls.Windows.MainWindow.#ctor" />
        <element api="M:WpfApp.Controls.Windows.MainWindow.OnClosed(System.EventArgs)" />
        <element api="M:WpfApp.Controls.Windows.MainWindow.Dispose" />
        <element api="M:WpfApp.Controls.Windows.MainWindow.InitializeComponent" />
        <element api="P:WpfApp.Controls.Windows.MainWindow.Configuration" />
        <element api="P:WpfApp.Controls.Windows.MainWindow.LogEvents" />
        <element api="P:WpfApp.Controls.Windows.MainWindow.Logger" />
        <element api="P:WpfApp.Controls.Windows.MainWindow.LifetimeScope" />
        <element api="P:WpfApp.Controls.Windows.MainWindow.DoRestart" />
        <element api="P:WpfApp.Controls.Windows.MainWindow.CheckedHandler" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.MainWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="214" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.MainWindow.AddChild(System.Object)">
      <apidata name="AddChild" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="65" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Controls.ContentControl.AddChild(System.Object)">
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.MainWindow.CheckedHandler">
      <apidata name="CheckedHandler" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="425" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_CheckedHandler" />
      <setter name="set_CheckedHandler" />
      <returns>
        <type api="T:System.Windows.Data.FilterEventHandler" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.MainWindow.Configuration">
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="41" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Configuration" />
      <setter name="set_Configuration" />
      <returns>
        <type api="T:NLog.Config.LoggingConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.MainWindow.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="491" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.MainWindow.DoRestart">
      <apidata name="DoRestart" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="370" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoRestart" />
      <setter name="set_DoRestart" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.MainWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.MainWindow.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="305" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LifetimeScope" />
      <setter name="set_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.Windows.MainWindow.LifetimeScopeProperty">
      <apidata name="LifetimeScopeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.MainWindow.LogEvents">
      <apidata name="LogEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="214" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LogEvents" />
      <setter name="set_LogEvents" />
      <returns>
        <type api="T:WpfApp.Controls.Windows.LogEventInfoCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Controls.Windows.MainWindow.Logger">
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="242" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Logger" />
      <setter name="set_Logger" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <implements>
        <member api="P:WpfApp.Core.Interfaces.IHaveLogger.Logger">
          <type api="T:WpfApp.Core.Interfaces.IHaveLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.Windows.MainWindow.MenuItemListCollectionViewProperty">
      <apidata name="MenuItemListCollectionViewProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.MainWindow.OnClosed(System.EventArgs)">
      <apidata name="OnClosed" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Controls/Windows/MainWindow.xaml.cs" startLine="355" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Window.OnClosed(System.EventArgs)">
          <type api="T:System.Windows.Window" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Windows.NewWindow">
      <apidata name="NewWindow" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Windows/NewWindow.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Window" ref="true" />
          <type api="T:System.Windows.Controls.ContentControl" ref="true" />
          <type api="T:System.Windows.Controls.Control" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Controls.Windows.NewWindow.#ctor" />
        <element api="M:WpfApp.Controls.Windows.NewWindow.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.NewWindow.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/NewWindow.xaml.cs" startLine="13" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.NewWindow" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.NewWindow.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/obj/Debug/Controls/Windows/NewWindow.g.cs" startLine="49" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.NewWindow" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Controls.Windows.Page1">
      <apidata name="Page1" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Controls/Windows/Page1.xaml.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.Page" ref="true" />
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
      </implements>
      <elements>
        <element api="F:WpfApp.Controls.Windows.Page1.AssemblyList" />
        <element api="M:WpfApp.Controls.Windows.Page1.#ctor" />
        <element api="M:WpfApp.Controls.Windows.Page1.InitializeComponent" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.Page1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Controls/Windows/Page1.xaml.cs" startLine="21" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.Page1" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Controls.Windows.Page1.AssemblyList">
      <apidata name="AssemblyList" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/Page1.xaml.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.Page1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Controls.Windows.Page1.InitializeComponent">
      <apidata name="InitializeComponent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Controls/Windows/Page1.xaml" startLine="1" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.Windows.Markup.IComponentConnector.InitializeComponent">
          <type api="T:System.Windows.Markup.IComponentConnector" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Controls.Windows" />
        <type api="T:WpfApp.Controls.Windows.Page1" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core">
      <apidata name="WpfApp.Core" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.DefaultObjectIdProvider" />
        <element api="T:WpfApp.Core.AssemblyList" />
        <element api="T:WpfApp.Core.CustomResourceLoader" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.AssemblyList">
      <apidata name="AssemblyList" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/AssemblyList.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.AssemblyList.#ctor" />
        <element api="M:WpfApp.Core.AssemblyList.#ctor(System.Collections.Generic.List{System.Reflection.Assembly})" />
        <element api="M:WpfApp.Core.AssemblyList.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.AssemblyList.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/AssemblyList.cs" startLine="19" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.AssemblyList" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.AssemblyList.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/AssemblyList.cs" startLine="45" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.AssemblyList" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.AssemblyList.#ctor(System.Collections.Generic.List{System.Reflection.Assembly})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/AssemblyList.cs" startLine="32" />
      <parameters>
        <parameter name="list">
          <type api="T:System.Collections.Generic.List`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.AssemblyList" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.CustomResourceLoader">
      <apidata name="CustomResourceLoader" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/CustomResourceLoader.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Xaml.Schema.XamlValueConverter`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Xaml.LifetimeScopeExtension" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.CustomResourceLoader.#ctor(System.Type,System.Xaml.XamlType)" />
        <element api="M:WpfApp.Core.CustomResourceLoader.#ctor(System.Type,System.Xaml.XamlType,System.String)" />
        <element api="M:WpfApp.Core.CustomResourceLoader.CreateInstance" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.CustomResourceLoader.#ctor(System.Type,System.Xaml.XamlType)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/CustomResourceLoader.cs" startLine="37" />
      <parameters>
        <parameter name="converterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Xaml.XamlType" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.CustomResourceLoader" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.CustomResourceLoader.#ctor(System.Type,System.Xaml.XamlType,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/CustomResourceLoader.cs" startLine="68" />
      <parameters>
        <parameter name="converterType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Xaml.XamlType" ref="true" />
        </parameter>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.CustomResourceLoader" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.CustomResourceLoader.CreateInstance">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Core/CustomResourceLoader.cs" startLine="85" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Xaml.Schema.XamlValueConverter`1.CreateInstance">
          <type api="T:System.Xaml.Schema.XamlValueConverter`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Xaml.LifetimeScopeExtension" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:WpfApp.Core.Xaml.LifetimeScopeExtension" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.CustomResourceLoader" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.DefaultObjectIdProvider">
      <apidata name="DefaultObjectIdProvider" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.#ctor(System.Runtime.Serialization.ObjectIDGenerator)" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectInstances" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectInstanceIdentifier(System.Object)" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectById(System.Object)" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})" />
        <element api="M:WpfApp.Core.DefaultObjectIdProvider.GetRootNodes" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.#ctor(System.Runtime.Serialization.ObjectIDGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="45" />
      <parameters>
        <parameter name="generator">
          <type api="T:System.Runtime.Serialization.ObjectIDGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)">
      <apidata name="GetInstanceByComponentRegistration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="55" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="reg">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)">
      <apidata name="GetInstanceCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="79" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="reg">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectById(System.Object)">
      <apidata name="GetObjectById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="108" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectById(System.Object)">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectInstanceIdentifier(System.Object)">
      <apidata name="GetObjectInstanceIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="95" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstanceIdentifier(System.Object)">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.GetObjectInstances">
      <apidata name="GetObjectInstances" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="87" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstances">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.GetRootNodes">
      <apidata name="GetRootNodes" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="183" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Guid" ref="false" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.DefaultObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <apidata name="ProvideObjectInstanceIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/DefaultObjectIdProvider.cs" startLine="129" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="eComponent">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
        <parameter name="eParameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Core.Parameter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.IObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core" />
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Attributes">
      <apidata name="WpfApp.Core.Attributes" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Attributes.ContextStackInstanceAttribute" />
        <element api="T:WpfApp.Core.Attributes.LoggingEntityMetadata" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Attributes.ContextStackInstanceAttribute">
      <apidata name="ContextStackInstanceAttribute" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Attributes/ContextStackInstanceAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Attributes.ContextStackInstanceAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Attributes" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Attributes.ContextStackInstanceAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Attributes/ContextStackInstanceAttribute.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Attributes" />
        <type api="T:WpfApp.Core.Attributes.ContextStackInstanceAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Attributes.LoggingEntityMetadata">
      <apidata name="LoggingEntityMetadata" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Attributes/LoggingEntityMetadata.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Attributes.LoggingEntityMetadata.#ctor" />
        <element api="P:WpfApp.Core.Attributes.LoggingEntityMetadata.LoggingType" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Attributes" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Attributes.LoggingEntityMetadata.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Attributes/LoggingEntityMetadata.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Attributes" />
        <type api="T:WpfApp.Core.Attributes.LoggingEntityMetadata" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Attributes.LoggingEntityMetadata.LoggingType">
      <apidata name="LoggingType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Attributes/LoggingEntityMetadata.cs" startLine="16" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LoggingType" />
      <setter name="set_LoggingType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Attributes" />
        <type api="T:WpfApp.Core.Attributes.LoggingEntityMetadata" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Container">
      <apidata name="WpfApp.Core.Container" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Container.ContainerHelper" />
        <element api="T:WpfApp.Core.Container.ContainerHelperSettings" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Container.ContainerHelper">
      <apidata name="ContainerHelper" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:WpfApp.Core.Container.ContainerHelper.AssembliesForScanningProperty" />
        <element api="F:WpfApp.Core.Container.ContainerHelper.CurrentLifetimeScope" />
        <element api="F:WpfApp.Core.Container.ContainerHelper.InterceptProperty" />
        <element api="M:WpfApp.Core.Container.ContainerHelper.SetupContainer(Autofac.IContainer@,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},WpfApp.Core.Container.ContainerHelperSettings)" />
        <element api="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanning" />
        <element api="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanningByReferences" />
        <element api="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanningViaTypes" />
        <element api="M:WpfApp.Core.Container.ContainerHelper.Dump(Autofac.Core.IComponentRegistration,System.Collections.Generic.HashSet{System.Object},System.Action{System.String})" />
        <element api="P:WpfApp.Core.Container.ContainerHelper.DoInterception" />
        <element api="P:WpfApp.Core.Container.ContainerHelper.DoTraceConditionalRegistration" />
        <element api="P:WpfApp.Core.Container.ContainerHelper.DoProxyBuilder" />
        <element api="P:WpfApp.Core.Container.ContainerHelper.GetAssembliesViaReferences" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Container.ContainerHelper.AssembliesForScanningProperty">
      <apidata name="AssembliesForScanningProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>AssembliesForScanning</value>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Container.ContainerHelper.CurrentLifetimeScope">
      <apidata name="CurrentLifetimeScope" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ThreadStaticAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="P:WpfApp.Core.Container.ContainerHelper.DoInterception">
      <apidata name="DoInterception" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="300" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoInterception" />
      <setter name="set_DoInterception" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Container.ContainerHelper.DoProxyBuilder">
      <apidata name="DoProxyBuilder" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="333" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoProxyBuilder" />
      <setter name="set_DoProxyBuilder" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Container.ContainerHelper.DoTraceConditionalRegistration">
      <apidata name="DoTraceConditionalRegistration" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="325" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoTraceConditionalRegistration" />
      <setter name="set_DoTraceConditionalRegistration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Container.ContainerHelper.Dump(Autofac.Core.IComponentRegistration,System.Collections.Generic.HashSet{System.Object},System.Action{System.String})">
      <apidata name="Dump" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="631" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="componentRegistryRegistration">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
        <parameter name="seenObjects">
          <type api="T:System.Collections.Generic.HashSet`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="outFunc">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanning">
      <apidata name="GetAssembliesForScanning" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="340" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanningByReferences">
      <apidata name="GetAssembliesForScanningByReferences" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="362" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Container.ContainerHelper.GetAssembliesForScanningViaTypes">
      <apidata name="GetAssembliesForScanningViaTypes" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="371" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:System.Reflection.Assembly" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Container.ContainerHelper.GetAssembliesViaReferences">
      <apidata name="GetAssembliesViaReferences" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="355" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_GetAssembliesViaReferences" />
      <setter name="set_GetAssembliesViaReferences" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Container.ContainerHelper.InterceptProperty">
      <apidata name="InterceptProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" />
      <fielddata literal="true" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <value>Intercept</value>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Container.ContainerHelper.SetupContainer(Autofac.IContainer@,System.Collections.Generic.IEnumerable{System.Reflection.Assembly},WpfApp.Core.Container.ContainerHelperSettings)">
      <apidata name="SetupContainer" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelper.cs" startLine="66" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="container" out="true">
          <referenceTo>
            <type api="T:Autofac.IContainer" ref="true" />
          </referenceTo>
        </parameter>
        <parameter name="assembliesToScan">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="containerHelperSettings">
          <type api="T:WpfApp.Core.Container.ContainerHelperSettings" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelper" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Container.ContainerHelperSettings">
      <apidata name="ContainerHelperSettings" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelperSettings.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Container.ContainerHelperSettings.#ctor" />
        <element api="P:WpfApp.Core.Container.ContainerHelperSettings.DoInterception" />
        <element api="P:WpfApp.Core.Container.ContainerHelperSettings.DoTraceConditionalRegistration" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Container.ContainerHelperSettings.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelperSettings.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelperSettings" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Container.ContainerHelperSettings.DoInterception">
      <apidata name="DoInterception" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelperSettings.cs" startLine="25" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoInterception" />
      <setter name="set_DoInterception" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelperSettings" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Container.ContainerHelperSettings.DoTraceConditionalRegistration">
      <apidata name="DoTraceConditionalRegistration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Container/ContainerHelperSettings.cs" startLine="33" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DoTraceConditionalRegistration" />
      <setter name="set_DoTraceConditionalRegistration" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Container" />
        <type api="T:WpfApp.Core.Container.ContainerHelperSettings" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Context">
      <apidata name="WpfApp.Core.Context" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Context.PushContextAttribute" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Context.PushContextAttribute">
      <apidata name="PushContextAttribute" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Context.PushContextAttribute.#ctor(System.Object)" />
        <element api="M:WpfApp.Core.Context.PushContextAttribute.#ctor(System.String,System.String)" />
        <element api="M:WpfApp.Core.Context.PushContextAttribute.After(System.Reflection.MethodInfo)" />
        <element api="M:WpfApp.Core.Context.PushContextAttribute.Before(System.Reflection.MethodInfo)" />
        <element api="P:WpfApp.Core.Context.PushContextAttribute.Context" />
        <element api="P:WpfApp.Core.Context.PushContextAttribute.Instances" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Method" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Context.PushContextAttribute.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" startLine="40" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
        <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Context.PushContextAttribute.#ctor(System.String,System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" startLine="50" />
      <parameters>
        <parameter name="v1">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="v2">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
        <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Context.PushContextAttribute.After(System.Reflection.MethodInfo)">
      <apidata name="After" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" startLine="75" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodUnderTest">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
        <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Context.PushContextAttribute.Before(System.Reflection.MethodInfo)">
      <apidata name="Before" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" startLine="87" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="methodUnderTest">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
        <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Context.PushContextAttribute.Context">
      <apidata name="Context" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" startLine="59" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Context" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
        <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Context.PushContextAttribute.Instances">
      <apidata name="Instances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Context/PushContextAttribute.cs" startLine="66" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instances" />
      <setter name="set_Instances" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Object" ref="true" />
                <type api="T:System.Int64" ref="false" />
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Context" />
        <type api="T:WpfApp.Core.Context.PushContextAttribute" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Converters">
      <apidata name="WpfApp.Core.Converters" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Converters.AssemblyConverter" />
        <element api="T:WpfApp.Core.Converters.ComponentLifetimeConverter" />
        <element api="T:WpfApp.Core.Converters.GetTypeConverter" />
        <element api="T:WpfApp.Core.Converters.InstanceRegistrationConverter" />
        <element api="T:WpfApp.Core.Converters.RegistrationConverter" />
        <element api="T:WpfApp.Core.Converters.RegistrationConverter2" />
        <element api="T:WpfApp.Core.Converters.RegistrationSourceConverter" />
        <element api="T:WpfApp.Core.Converters.ResolveServiceConverter" />
        <element api="T:WpfApp.Core.Converters.TargetConverter" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Converters.AssemblyConverter">
      <apidata name="AssemblyConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/AssemblyConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.AssemblyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.AssemblyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.AssemblyConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Converters.AssemblyConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/AssemblyConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.AssemblyConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.AssemblyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/AssemblyConverter.cs" startLine="34" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.AssemblyConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.AssemblyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/AssemblyConverter.cs" startLine="64" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.AssemblyConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.ComponentLifetimeConverter">
      <apidata name="ComponentLifetimeConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/ComponentLifetimeConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.ComponentLifetimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.ComponentLifetimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.ComponentLifetimeConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.ComponentLifetimeConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/ComponentLifetimeConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.ComponentLifetimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.ComponentLifetimeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/ComponentLifetimeConverter.cs" startLine="29" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.ComponentLifetimeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.ComponentLifetimeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/ComponentLifetimeConverter.cs" startLine="54" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.ComponentLifetimeConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.GetTypeConverter">
      <apidata name="GetTypeConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/GetTypeConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.GetTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.GetTypeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.GetTypeConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Object" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Type" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Converters.GetTypeConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/GetTypeConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.GetTypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.GetTypeConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/GetTypeConverter.cs" startLine="40" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.GetTypeConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.GetTypeConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/GetTypeConverter.cs" startLine="64" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.GetTypeConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.InstanceRegistrationConverter">
      <apidata name="InstanceRegistrationConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/InstanceRegistrationConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.InstanceRegistrationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.InstanceRegistrationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.InstanceRegistrationConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Converters.InstanceRegistrationConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/InstanceRegistrationConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.InstanceRegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.InstanceRegistrationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/InstanceRegistrationConverter.cs" startLine="38" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.InstanceRegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.InstanceRegistrationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/InstanceRegistrationConverter.cs" startLine="92" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.InstanceRegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.RegistrationConverter">
      <apidata name="RegistrationConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.RegistrationConverter.#ctor" />
        <element api="M:WpfApp.Core.Converters.RegistrationConverter.#ctor(Autofac.ILifetimeScope,WpfApp.Core.Interfaces.IObjectIdProvider)" />
        <element api="M:WpfApp.Core.Converters.RegistrationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.RegistrationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter.cs" startLine="35" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter.#ctor(Autofac.ILifetimeScope,WpfApp.Core.Interfaces.IObjectIdProvider)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter.cs" startLine="42" />
      <parameters>
        <parameter name="appContainer">
          <type api="T:Autofac.ILifetimeScope" ref="true" />
        </parameter>
        <parameter name="provider">
          <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter.cs" startLine="63" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter.cs" startLine="119" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.RegistrationConverter2">
      <apidata name="RegistrationConverter2" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter2.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.RegistrationConverter2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.RegistrationConverter2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.RegistrationConverter2.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter2.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter2.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter2.cs" startLine="52" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationConverter2.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationConverter2.cs" startLine="126" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationConverter2" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.RegistrationSourceConverter">
      <apidata name="RegistrationSourceConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationSourceConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.RegistrationSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.RegistrationSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.RegistrationSourceConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationSourceConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationSourceConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationSourceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationSourceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationSourceConverter.cs" startLine="31" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationSourceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.RegistrationSourceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/RegistrationSourceConverter.cs" startLine="65" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.RegistrationSourceConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.ResolveServiceConverter">
      <apidata name="ResolveServiceConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/ResolveServiceConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.ResolveServiceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.ResolveServiceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.ResolveServiceConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.ResolveServiceConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/ResolveServiceConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.ResolveServiceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.ResolveServiceConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/ResolveServiceConverter.cs" startLine="30" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.ResolveServiceConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.ResolveServiceConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/ResolveServiceConverter.cs" startLine="63" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.ResolveServiceConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Converters.TargetConverter">
      <apidata name="TargetConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Converters.TargetConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.TargetConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.TargetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <element api="M:WpfApp.Core.Converters.TargetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        <element api="M:WpfApp.Core.Converters.TargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.TargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Converters.TargetConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" startLine="73" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" startLine="153" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" startLine="181" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" startLine="120" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" startLine="31" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Converters.TargetConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Converters/TargetConverter.cs" startLine="50" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Converters" />
        <type api="T:WpfApp.Core.Converters.TargetConverter" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Debug">
      <apidata name="WpfApp.Core.Debug" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Debug.DebugUtils" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Debug.DebugUtils">
      <apidata name="DebugUtils" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Util/DebugUtils.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.Service)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Debug" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.IComponentRegistration)">
      <apidata name="DebugFormat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Util/DebugUtils.cs" startLine="17" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="reg">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Debug" />
        <type api="T:WpfApp.Core.Debug.DebugUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Debug.DebugUtils.DebugFormat(Autofac.Core.Service)">
      <apidata name="DebugFormat" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Util/DebugUtils.cs" startLine="35" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="service">
          <type api="T:Autofac.Core.Service" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Debug" />
        <type api="T:WpfApp.Core.Debug.DebugUtils" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Runtime.CompilerServices.ExtensionAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="N:WpfApp.Core.Events">
      <apidata name="WpfApp.Core.Events" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Events.AttachedEvents" />
        <element api="T:WpfApp.Core.Events.AttachedEvents.LoggerRegisteredEventHandler" />
        <element api="T:WpfApp.Core.Events.LoggerRegisteredEventArgs" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Events.AttachedEvents">
      <apidata name="AttachedEvents" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Events/AttachedEvents.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Events" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Events.AttachedEvents.LoggerRegisteredEventHandler">
      <apidata name="LoggerRegisteredEventHandler" group="type" subgroup="delegate" />
      <sourceContext file="WpfApp/Core/Events/AttachedEvents.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="e">
          <type api="T:WpfApp.Core.Events.LoggerRegisteredEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Events" />
        <type api="T:WpfApp.Core.Events.AttachedEvents" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Events.LoggerRegisteredEventArgs">
      <apidata name="LoggerRegisteredEventArgs" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Events/AttachedEvents.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.RoutedEventArgs" ref="true" />
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Events.LoggerRegisteredEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,NLog.ILogger)" />
        <element api="P:WpfApp.Core.Events.LoggerRegisteredEventArgs.Logger" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Events" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Events.LoggerRegisteredEventArgs.#ctor(System.Windows.RoutedEvent,System.Object,NLog.ILogger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Events/AttachedEvents.cs" startLine="42" />
      <parameters>
        <parameter name="routedEvent">
          <type api="T:System.Windows.RoutedEvent" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="logger">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Events" />
        <type api="T:WpfApp.Core.Events.LoggerRegisteredEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Events.LoggerRegisteredEventArgs.Logger">
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Events/AttachedEvents.cs" startLine="52" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Logger" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Events" />
        <type api="T:WpfApp.Core.Events.LoggerRegisteredEventArgs" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Exceptions">
      <apidata name="WpfApp.Core.Exceptions" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Exceptions.DuplicateKeyException" />
        <element api="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException" />
        <element api="T:WpfApp.Core.Exceptions.UnhandledException" />
        <element api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" />
        <element api="T:WpfApp.Core.Exceptions.InfoContextFactoryAttribute" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Exceptions.AttributeNotFoundException">
      <apidata name="AttributeNotFoundException" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor" />
        <element api="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.String)" />
        <element api="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.String,System.Exception)" />
        <element api="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:WpfApp.Core.Exceptions.AttributeNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:WpfApp.Core.Exceptions.AttributeNotFoundException.AttributeName" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" startLine="15" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" startLine="40" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" startLine="19" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.AttributeNotFoundException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" startLine="24" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Exceptions.AttributeNotFoundException.AttributeName">
      <apidata name="AttributeName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" startLine="50" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AttributeName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.AttributeNotFoundException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Exceptions/AttributeNotFoundException.cs" startLine="52" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.AttributeNotFoundException" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Exceptions.DuplicateKeyException">
      <apidata name="DuplicateKeyException" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor" />
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.String)" />
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.String,System.Exception)" />
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Exception)" />
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Object)" />
        <element api="M:WpfApp.Core.Exceptions.DuplicateKeyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
        <element api="P:WpfApp.Core.Exceptions.DuplicateKeyException.Key" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="29" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="73" />
      <parameters>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="113" />
      <parameters>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="104" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="36" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="54" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.DuplicateKeyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name="GetObjectData" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="126" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Exception" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.Serialization.ISerializable" ref="true" />
        </member>
        <member api="M:System.Runtime.InteropServices._Exception.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <type api="T:System.Runtime.InteropServices._Exception" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Exceptions.DuplicateKeyException.Key">
      <apidata name="Key" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Exceptions/DuplicateKeyException.cs" startLine="124" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Key" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.DuplicateKeyException" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Exceptions.InfoContextFactoryAttribute">
      <apidata name="InfoContextFactoryAttribute" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Exceptions/InfoContextFactoryAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Exceptions.InfoContextFactoryAttribute.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.AttributeUsageAttribute" ref="true" />
          <argument>
            <type api="T:System.AttributeTargets" ref="false" />
            <enumValue>
              <field name="Property" />
            </enumValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Exceptions.InfoContextFactoryAttribute.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/InfoContextFactoryAttribute.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.InfoContextFactoryAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException">
      <apidata name="UnableToRegisterObjectIdException" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Exceptions/UnableToRegisterObjectIdException.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor" />
        <element api="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.String)" />
        <element api="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.String,System.Exception)" />
        <element api="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnableToRegisterObjectIdException.cs" startLine="26" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnableToRegisterObjectIdException.cs" startLine="48" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnableToRegisterObjectIdException.cs" startLine="31" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnableToRegisterObjectIdException.cs" startLine="38" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnableToRegisterObjectIdException" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Exceptions.UnhandledException">
      <apidata name="UnhandledException" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Exceptions/UnhandledException.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Exceptions.UnhandledException.#ctor" />
        <element api="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.String)" />
        <element api="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.String,System.Exception)" />
        <element api="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnhandledException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnhandledException.cs" startLine="30" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnhandledException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnhandledException.cs" startLine="88" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnhandledException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnhandledException.cs" startLine="37" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnhandledException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Exceptions.UnhandledException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Exceptions/UnhandledException.cs" startLine="55" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Exceptions" />
        <type api="T:WpfApp.Core.Exceptions.UnhandledException" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Infos">
      <apidata name="WpfApp.Core.Infos" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Infos.ComponentInfo" />
        <element api="T:WpfApp.Core.Infos.ContextStack`1" />
        <element api="T:WpfApp.Core.Infos.InfoContext" />
        <element api="T:WpfApp.Core.Infos.InfoContext.Factory" />
        <element api="T:WpfApp.Core.Infos.InstanceInfo" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Infos.ComponentInfo">
      <apidata name="ComponentInfo" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Infos/ComponentInfo.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Infos.ComponentInfo.#ctor" />
        <element api="P:WpfApp.Core.Infos.ComponentInfo.Instances" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ComponentInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/ComponentInfo.cs" startLine="14" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ComponentInfo" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.ComponentInfo.Instances">
      <apidata name="Instances" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ComponentInfo.cs" startLine="14" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instances" />
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ComponentInfo" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Infos.ContextStack`1">
      <apidata name="ContextStack" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.Stack`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="T">
          <constrained>
            <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
          </constrained>
        </template>
      </templates>
      <implements>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Infos.ContextStack`1.#ctor" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Boolean)" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Int32)" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.Push(`0)" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.ToString" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.ToOrderedDictionary" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.Add(`0)" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.Remove(`0)" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.System#Collections#Generic#ICollection{T}#Clear" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.System#Collections#Generic#ICollection{T}#Contains(`0)" />
        <element api="M:WpfApp.Core.Infos.ContextStack`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)" />
        <element api="P:WpfApp.Core.Infos.ContextStack`1.AllowDuplicateNames" />
        <element api="P:WpfApp.Core.Infos.ContextStack`1.IsReadOnly" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="90" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Boolean)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="90" />
      <parameters>
        <parameter name="allowDuplicateNames">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="90" />
      <parameters>
        <parameter name="collection">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="90" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.Add(`0)">
      <apidata name="Add" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="147" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Add(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.ContextStack`1.AllowDuplicateNames">
      <apidata name="AllowDuplicateNames" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="90" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_AllowDuplicateNames" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.ContextStack`1.IsReadOnly">
      <apidata name="IsReadOnly" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="159" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_IsReadOnly" />
      <setter name="set_IsReadOnly" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Collections.Generic.ICollection`1.IsReadOnly">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.Push(`0)">
      <apidata name="Push" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="100" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.Remove(`0)">
      <apidata name="Remove" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="154" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Remove(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.System#Collections#Generic#ICollection{T}#Clear">
      <apidata name="Clear" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" />
      <proceduredata virtual="true" final="true" eii="true" />
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Clear">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.System#Collections#Generic#ICollection{T}#Contains(`0)">
      <apidata name="Contains" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="item">
          <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.Contains(`0)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.System#Collections#Generic#ICollection{T}#CopyTo(`0[],System.Int32)">
      <apidata name="CopyTo" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
          </arrayOf>
        </parameter>
        <parameter name="arrayIndex">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Collections.Generic.ICollection`1.CopyTo(`0[],System.Int32)">
          <type api="T:System.Collections.Generic.ICollection`1" ref="true">
            <specialization>
              <template name="T" index="0" api="T:WpfApp.Core.Infos.ContextStack`1" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.ToOrderedDictionary">
      <apidata name="ToOrderedDictionary" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="123" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:System.Collections.Specialized.OrderedDictionary" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.ContextStack`1.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/ContextStack.cs" startLine="114" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Infos.InfoContext">
      <apidata name="InfoContext" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Infos.InfoContext.#ctor(System.String,System.Object)" />
        <element api="M:WpfApp.Core.Infos.InfoContext.GetEnumerator" />
        <element api="M:WpfApp.Core.Infos.InfoContext.System#Collections#IEnumerable#GetEnumerator" />
        <element api="M:WpfApp.Core.Infos.InfoContext.ToString" />
        <element api="P:WpfApp.Core.Infos.InfoContext.Name" />
        <element api="P:WpfApp.Core.Infos.InfoContext.ObjectContext" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.InfoContext.#ctor(System.String,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" startLine="39" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objectContext">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.InfoContext.GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerator`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="M:System.Collections.Generic.IEnumerable`1.GetEnumerator">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.InfoContext.Name">
      <apidata name="Name" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" startLine="49" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Name" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.InfoContext.ObjectContext">
      <apidata name="ObjectContext" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" startLine="55" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectContext" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.InfoContext.System#Collections#IEnumerable#GetEnumerator">
      <apidata name="GetEnumerator" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" startLine="70" />
      <proceduredata virtual="true" final="true" eii="true" />
      <returns>
        <type api="T:System.Collections.IEnumerator" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Collections.IEnumerable.GetEnumerator">
          <type api="T:System.Collections.IEnumerable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.InfoContext.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" startLine="75" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Tuple`2.ToString">
          <type api="T:System.Tuple`2" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
              <type api="T:System.Object" ref="true" />
            </specialization>
          </type>
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Infos.InfoContext.Factory">
      <apidata name="Factory" group="type" subgroup="delegate" />
      <sourceContext file="WpfApp/Core/Infos/InfoContext.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="objectContext">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Infos.InstanceInfo">
      <apidata name="InstanceInfo" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Infos/InstanceInfo.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Infos.InstanceInfo.#ctor" />
        <element api="M:WpfApp.Core.Infos.InstanceInfo.#ctor(System.Object,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})" />
        <element api="P:WpfApp.Core.Infos.InstanceInfo.Instance" />
        <element api="P:WpfApp.Core.Infos.InstanceInfo.Parameters" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.InstanceInfo.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/InstanceInfo.cs" startLine="26" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Infos.InstanceInfo.#ctor(System.Object,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Infos/InstanceInfo.cs" startLine="32" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Core.Parameter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.InstanceInfo.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/InstanceInfo.cs" startLine="42" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Instance" />
      <setter name="set_Instance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Infos.InstanceInfo.Parameters">
      <apidata name="Parameters" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Infos/InstanceInfo.cs" startLine="48" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Parameters" />
      <setter name="set_Parameters" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Autofac.Core.Parameter" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Infos" />
        <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Interfaces">
      <apidata name="WpfApp.Core.Interfaces" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Interfaces.IObjectId" />
        <element api="T:WpfApp.Core.Interfaces.IHasId" />
        <element api="T:WpfApp.Core.Interfaces.IHaveLifetimeScope" />
        <element api="T:WpfApp.Core.Interfaces.IHaveLogger" />
        <element api="T:WpfApp.Core.Interfaces.IHaveObjectId" />
        <element api="T:WpfApp.Core.Interfaces.ILoggerTracker" />
        <element api="T:WpfApp.Core.Interfaces.IMenuItem" />
        <element api="T:WpfApp.Core.Interfaces.IMenuItemList" />
        <element api="T:WpfApp.Core.Interfaces.IObjectIdProvider" />
        <element api="T:WpfApp.Core.Interfaces.ITopLevelMenu" />
        <element api="T:WpfApp.Core.Interfaces.LoggerEventArgs" />
        <element api="T:WpfApp.Core.Interfaces.LoggerRegisteredEventHandler" />
        <element api="T:WpfApp.Core.Interfaces.MyLogBuilder" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IHasId">
      <apidata name="IHasId" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IHasId.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:WpfApp.Core.Interfaces.IHasId.ObjectId" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IHasId.ObjectId">
      <apidata name="ObjectId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IHasId.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_ObjectId" />
      <returns>
        <type api="T:System.Int64" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IHasId" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IHaveLifetimeScope">
      <apidata name="IHaveLifetimeScope" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IHaveLifetimeScope.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:WpfApp.Core.Interfaces.IHaveLifetimeScope.LifetimeScope" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IHaveLifetimeScope.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IHaveLifetimeScope.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IHaveLifetimeScope" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IHaveLogger">
      <apidata name="IHaveLogger" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IHaveLogger.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:WpfApp.Core.Model.MenuItemList" ref="true" />
        <type api="T:WpfApp.Controls.Windows.MainWindow" ref="true" />
      </implementors>
      <elements>
        <element api="P:WpfApp.Core.Interfaces.IHaveLogger.Logger" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IHaveLogger.Logger">
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IHaveLogger.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Logger" />
      <setter name="set_Logger" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IHaveLogger" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IHaveObjectId">
      <apidata name="IHaveObjectId" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IHaveObjectId.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:WpfApp.Core.Interfaces.IHaveObjectId.InstanceObjectId" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IHaveObjectId.InstanceObjectId">
      <apidata name="InstanceObjectId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IHaveObjectId.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_InstanceObjectId" />
      <setter name="set_InstanceObjectId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IHaveObjectId" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.ILoggerTracker">
      <apidata name="ILoggerTracker" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/ILoggerTracker.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:WpfApp.Core.Logging.LoggerTracker" ref="true" />
      </implementors>
      <elements>
        <element api="M:WpfApp.Core.Interfaces.ILoggerTracker.TrackLogger(System.String,NLog.ILogger)" />
        <element api="E:WpfApp.Core.Interfaces.ILoggerTracker.LoggerRegistered" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="E:WpfApp.Core.Interfaces.ILoggerTracker.LoggerRegistered">
      <apidata name="LoggerRegistered" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/ILoggerTracker.cs" />
      <proceduredata abstract="true" virtual="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoggerRegistered" />
      <remover name="remove_LoggerRegistered" />
      <eventhandler>
        <type api="T:WpfApp.Core.Interfaces.LoggerRegisteredEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:WpfApp.Core.Interfaces.LoggerEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.ILoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.ILoggerTracker.TrackLogger(System.String,NLog.ILogger)">
      <apidata name="TrackLogger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/ILoggerTracker.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="loggerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logger">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.ILoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IMenuItem">
      <apidata name="IMenuItem" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IMenuItem.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Windows.Input.ICommandSource" ref="true" />
      </implements>
      <implementors>
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </implementors>
      <elements>
        <element api="P:WpfApp.Core.Interfaces.IMenuItem.Header" />
        <element api="P:WpfApp.Core.Interfaces.IMenuItem.CommandParameter" />
        <element api="P:WpfApp.Core.Interfaces.IMenuItem.Command" />
        <element api="P:WpfApp.Core.Interfaces.IMenuItem.Children" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IMenuItem.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IMenuItem.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Children" />
      <setter name="set_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IMenuItem.Command">
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IMenuItem.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Command" />
      <setter name="set_Command" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.Command">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IMenuItem.CommandParameter">
      <apidata name="CommandParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IMenuItem.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandParameter" />
      <setter name="set_CommandParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.CommandParameter">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IMenuItem.Header">
      <apidata name="Header" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IMenuItem.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Header" />
      <setter name="set_Header" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IMenuItemList">
      <apidata name="IMenuItemList" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IMenuItemList.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implements>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
      </implements>
      <implementors>
        <type api="T:WpfApp.Core.Model.MenuItemList" ref="true" />
      </implementors>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IObjectId">
      <apidata name="IObjectId" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectId.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <elements>
        <element api="P:WpfApp.Core.Interfaces.IObjectId.InstanceObjectId" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.IObjectId.InstanceObjectId">
      <apidata name="InstanceObjectId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectId.cs" />
      <proceduredata abstract="true" virtual="true" />
      <propertydata get="true" />
      <getter name="get_InstanceObjectId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectId" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.IObjectIdProvider">
      <apidata name="IObjectIdProvider" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </implementors>
      <elements>
        <element api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstances" />
        <element api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstanceIdentifier(System.Object)" />
        <element api="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectById(System.Object)" />
        <element api="M:WpfApp.Core.Interfaces.IObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceByComponentRegistration(Autofac.Core.IComponentRegistration)">
      <apidata name="GetInstanceByComponentRegistration" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reg">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetInstanceCount(Autofac.Core.IComponentRegistration)">
      <apidata name="GetInstanceCount" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="reg">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectById(System.Object)">
      <apidata name="GetObjectById" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="id">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstanceIdentifier(System.Object)">
      <apidata name="GetObjectInstanceIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.IObjectIdProvider.GetObjectInstances">
      <apidata name="GetObjectInstances" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:System.Collections.IEnumerable" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.IObjectIdProvider.ProvideObjectInstanceIdentifier(System.Object,Autofac.Core.IComponentRegistration,System.Collections.Generic.IEnumerable{Autofac.Core.Parameter})">
      <apidata name="ProvideObjectInstanceIdentifier" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/IObjectIdProvider.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="eComponent">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
        <parameter name="parameters">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Core.Parameter" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.IObjectIdProvider" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.ITopLevelMenu">
      <apidata name="ITopLevelMenu" group="type" subgroup="interface" />
      <sourceContext file="WpfApp/Core/Interfaces/ITopLevelMenu.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <implementors>
        <type api="T:WpfApp.Core.Menus.WindowsTopLevelMenu" ref="true" />
      </implementors>
      <elements>
        <element api="M:WpfApp.Core.Interfaces.ITopLevelMenu.GetXMenuItem" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.ITopLevelMenu.GetXMenuItem">
      <apidata name="GetXMenuItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/ITopLevelMenu.cs" />
      <proceduredata abstract="true" virtual="true" />
      <returns>
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.ITopLevelMenu" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.LoggerEventArgs">
      <apidata name="LoggerEventArgs" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Interfaces/LoggerEventArgs.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Interfaces.LoggerEventArgs.#ctor(NLog.ILogger)" />
        <element api="P:WpfApp.Core.Interfaces.LoggerEventArgs.Logger" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.LoggerEventArgs.#ctor(NLog.ILogger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Interfaces/LoggerEventArgs.cs" startLine="16" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.LoggerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Interfaces.LoggerEventArgs.Logger">
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Interfaces/LoggerEventArgs.cs" startLine="23" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Logger" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.LoggerEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.LoggerRegisteredEventHandler">
      <apidata name="LoggerRegisteredEventHandler" group="type" subgroup="delegate" />
      <sourceContext file="WpfApp/Core/Interfaces/LoggerRegisteredEventHandler.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="sender">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="args">
          <type api="T:WpfApp.Core.Interfaces.LoggerEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Interfaces.MyLogBuilder">
      <apidata name="MyLogBuilder" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Interfaces/MyLogBuilder.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.Fluent.LogBuilder" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Interfaces.MyLogBuilder.#ctor(NLog.ILogger)" />
        <element api="M:WpfApp.Core.Interfaces.MyLogBuilder.#ctor(NLog.ILogger,NLog.LogLevel)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.MyLogBuilder.#ctor(NLog.ILogger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Interfaces/MyLogBuilder.cs" startLine="28" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.MyLogBuilder" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Interfaces.MyLogBuilder.#ctor(NLog.ILogger,NLog.LogLevel)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Interfaces/MyLogBuilder.cs" startLine="36" />
      <parameters>
        <parameter name="logger">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
        <parameter name="logLevel">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Interfaces" />
        <type api="T:WpfApp.Core.Interfaces.MyLogBuilder" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Logging">
      <apidata name="WpfApp.Core.Logging" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Logging.AppLoggerContainer" />
        <element api="T:WpfApp.Core.Logging.NLogTargetConverter" />
        <element api="T:WpfApp.Core.Logging.AppLogger" />
        <element api="T:WpfApp.Core.Logging.LoggerTracker" />
        <element api="T:WpfApp.Core.Logging.LoggingEntityMetadataAttribute" />
        <element api="T:WpfApp.Core.Logging.MyCacheTarget" />
        <element api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" />
        <element api="T:WpfApp.Core.Logging.CodeConfiguration" />
        <element api="T:WpfApp.Core.Logging.LogDelegates" />
        <element api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" />
        <element api="T:WpfApp.Core.Logging.LogDelegates.LogMethod2" />
        <element api="T:WpfApp.Core.Logging.LogFactoryInterceptor" />
        <element api="T:WpfApp.Core.Logging.MyLogFactory" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Logging.AppLogger">
      <apidata name="AppLogger" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Xaml.IAttachedPropertyStore" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Logging.AppLogger.#ctor" />
        <element api="M:WpfApp.Core.Logging.AppLogger.#ctor(NLog.ILogger)" />
        <element api="M:WpfApp.Core.Logging.AppLogger.#ctor(System.String)" />
        <element api="M:WpfApp.Core.Logging.AppLogger.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)" />
        <element api="M:WpfApp.Core.Logging.AppLogger.RemoveProperty(System.Xaml.AttachableMemberIdentifier)" />
        <element api="M:WpfApp.Core.Logging.AppLogger.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)" />
        <element api="M:WpfApp.Core.Logging.AppLogger.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)" />
        <element api="M:WpfApp.Core.Logging.AppLogger.GetLoggerInstance(System.Object)" />
        <element api="P:WpfApp.Core.Logging.AppLogger.Arg" />
        <element api="P:WpfApp.Core.Logging.AppLogger.LoggerInstance" />
        <element api="P:WpfApp.Core.Logging.AppLogger.PropertyCount" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="20" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.#ctor(NLog.ILogger)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="30" />
      <parameters>
        <parameter name="loggerInstance">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="36" />
      <parameters>
        <parameter name="arg">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLogger.Arg">
      <apidata name="Arg" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="44" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Arg" />
      <setter name="set_Arg" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
      <apidata name="CopyPropertiesTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="68" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="array">
          <arrayOf rank="1">
            <type api="T:System.Collections.Generic.KeyValuePair`2" ref="false">
              <specialization>
                <type api="T:System.Xaml.AttachableMemberIdentifier" ref="true" />
                <type api="T:System.Object" ref="true" />
              </specialization>
            </type>
          </arrayOf>
        </parameter>
        <parameter name="index">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xaml.IAttachedPropertyStore.CopyPropertiesTo(System.Collections.Generic.KeyValuePair{System.Xaml.AttachableMemberIdentifier,System.Object}[],System.Int32)">
          <type api="T:System.Xaml.IAttachedPropertyStore" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.GetLoggerInstance(System.Object)">
      <apidata name="GetLoggerInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="157" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLogger.LoggerInstance">
      <apidata name="LoggerInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="51" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoggerInstance" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLogger.PropertyCount">
      <apidata name="PropertyCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="148" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_PropertyCount" />
      <setter name="set_PropertyCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <implements>
        <member api="P:System.Xaml.IAttachedPropertyStore.PropertyCount">
          <type api="T:System.Xaml.IAttachedPropertyStore" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
      <apidata name="RemoveProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="87" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="attachableMemberIdentifier">
          <type api="T:System.Xaml.AttachableMemberIdentifier" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Xaml.IAttachedPropertyStore.RemoveProperty(System.Xaml.AttachableMemberIdentifier)">
          <type api="T:System.Xaml.IAttachedPropertyStore" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
      <apidata name="SetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="104" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="attachableMemberIdentifier">
          <type api="T:System.Xaml.AttachableMemberIdentifier" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xaml.IAttachedPropertyStore.SetProperty(System.Xaml.AttachableMemberIdentifier,System.Object)">
          <type api="T:System.Xaml.IAttachedPropertyStore" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLogger.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
      <apidata name="TryGetProperty" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLogger.cs" startLine="134" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="attachableMemberIdentifier">
          <type api="T:System.Xaml.AttachableMemberIdentifier" ref="true" />
        </parameter>
        <parameter name="value" out="true">
          <referenceTo>
            <type api="T:System.Object" ref="true" />
          </referenceTo>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:System.Xaml.IAttachedPropertyStore.TryGetProperty(System.Xaml.AttachableMemberIdentifier,System.Object@)">
          <type api="T:System.Xaml.IAttachedPropertyStore" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.AppLoggerContainer">
      <apidata name="AppLoggerContainer" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggerContainer.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Logging.AppLoggerContainer.#ctor" />
        <element api="P:WpfApp.Core.Logging.AppLoggerContainer.AppLogger" />
        <element api="P:WpfApp.Core.Logging.AppLoggerContainer.InternalLog" />
        <element api="P:WpfApp.Core.Logging.AppLoggerContainer.Configuration" />
        <element api="P:WpfApp.Core.Logging.AppLoggerContainer.Config" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggerContainer.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggerContainer.cs" startLine="16" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggerContainer" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggerContainer.AppLogger">
      <apidata name="AppLogger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggerContainer.cs" startLine="22" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_AppLogger" />
      <setter name="set_AppLogger" />
      <returns>
        <type api="T:WpfApp.Core.Logging.AppLogger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggerContainer" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggerContainer.Config">
      <apidata name="Config" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggerContainer.cs" startLine="54" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Config" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggerContainer" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggerContainer.Configuration">
      <apidata name="Configuration" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggerContainer.cs" startLine="45" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Configuration" />
      <returns>
        <type api="T:NLog.Config.LoggingConfiguration" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggerContainer" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggerContainer.InternalLog">
      <apidata name="InternalLog" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggerContainer.cs" startLine="31" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InternalLog" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggerContainer" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.AppLoggingConfigHelper">
      <apidata name="AppLoggingConfigHelper" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:WpfApp.Core.Logging.AppLoggingConfigHelper.StringWriter" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.JsonFileTarget" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.MyFileTarget" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.RemoveTarget(NLog.Targets.Target)" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.RemoveTarget(System.String)" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.EnsureLoggingConfigured(WpfApp.Core.Logging.LogDelegates.LogMethod,System.String)" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.AddTarget(NLog.Targets.Target,NLog.LogLevel)" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.SetupJsonLayout" />
        <element api="M:WpfApp.Core.Logging.AppLoggingConfigHelper.#ctor" />
        <element api="P:WpfApp.Core.Logging.AppLoggingConfigHelper.logFactory" />
        <element api="P:WpfApp.Core.Logging.AppLoggingConfigHelper.DebuggerTargetEnabled" />
        <element api="P:WpfApp.Core.Logging.AppLoggingConfigHelper.LoggingIsConfigured" />
        <element api="P:WpfApp.Core.Logging.AppLoggingConfigHelper.DumpExistingConfig" />
        <element api="P:WpfApp.Core.Logging.AppLoggingConfigHelper.ForceCodeConfig" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.AddTarget(NLog.Targets.Target,NLog.LogLevel)">
      <apidata name="AddTarget" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="453" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:NLog.Targets.Target" ref="true" />
        </parameter>
        <parameter name="minLevel">
          <type api="T:NLog.LogLevel" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggingConfigHelper.DebuggerTargetEnabled">
      <apidata name="DebuggerTargetEnabled" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="52" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DebuggerTargetEnabled" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggingConfigHelper.DumpExistingConfig">
      <apidata name="DumpExistingConfig" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="67" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_DumpExistingConfig" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.EnsureLoggingConfigured(WpfApp.Core.Logging.LogDelegates.LogMethod,System.String)">
      <apidata name="EnsureLoggingConfigured" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="280" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logMethod" optional="true">
          <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
            <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
          </type>
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="callerFilePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggingConfigHelper.ForceCodeConfig">
      <apidata name="ForceCodeConfig" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="75" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ForceCodeConfig" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.JsonFileTarget">
      <apidata name="JsonFileTarget" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="221" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:NLog.Targets.FileTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggingConfigHelper.logFactory">
      <apidata name="logFactory" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="45" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_logFactory" />
      <setter name="set_logFactory" />
      <returns>
        <type api="T:NLog.LogFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.AppLoggingConfigHelper.LoggingIsConfigured">
      <apidata name="LoggingIsConfigured" group="member" subgroup="property" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="60" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LoggingIsConfigured" />
      <setter name="set_LoggingIsConfigured" />
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.MyFileTarget">
      <apidata name="MyFileTarget" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="236" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:NLog.Targets.FileTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.RemoveTarget(NLog.Targets.Target)">
      <apidata name="RemoveTarget" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="253" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="target">
          <type api="T:NLog.Targets.Target" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.RemoveTarget(System.String)">
      <apidata name="RemoveTarget" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="468" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.AppLoggingConfigHelper.SetupJsonLayout">
      <apidata name="SetupJsonLayout" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" startLine="476" />
      <proceduredata virtual="false" />
      <returns>
        <type api="T:NLog.Layouts.JsonLayout" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Logging.AppLoggingConfigHelper.StringWriter">
      <apidata name="StringWriter" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/AppLoggingConfigHelper.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.IO.StringWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.AppLoggingConfigHelper" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.CodeConfiguration">
      <apidata name="CodeConfiguration" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/CodeConfiguration.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.Config.LoggingConfiguration" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Logging.CodeConfiguration.#ctor" />
        <element api="M:WpfApp.Core.Logging.CodeConfiguration.#ctor(NLog.LogFactory)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.CodeConfiguration.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/CodeConfiguration.cs" startLine="17" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.CodeConfiguration" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.CodeConfiguration.#ctor(NLog.LogFactory)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/CodeConfiguration.cs" startLine="23" />
      <parameters>
        <parameter name="logFactory">
          <type api="T:NLog.LogFactory" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.CodeConfiguration" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.LogDelegates">
      <apidata name="LogDelegates" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/LogDelegates.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.LogDelegates.LogMethod">
      <apidata name="LogMethod" group="type" subgroup="delegate" />
      <sourceContext file="WpfApp/Core/Logging/LogDelegates.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.LogDelegates.LogMethod2">
      <apidata name="LogMethod2" group="type" subgroup="delegate" />
      <sourceContext file="WpfApp/Core/Logging/LogDelegates.cs" />
      <typedata visibility="public" sealed="true" serializable="false" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerFilePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerLineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.LogFactoryInterceptor">
      <apidata name="LogFactoryInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/LogFactoryInterceptor.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Logging.LogFactoryInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator,WpfApp.Core.Logging.LogDelegates.LogMethod)" />
        <element api="M:WpfApp.Core.Logging.LogFactoryInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="P:WpfApp.Core.Logging.LogFactoryInterceptor.Generator" />
        <element api="P:WpfApp.Core.Logging.LogFactoryInterceptor.UseLogMethod" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.LogFactoryInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator,WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/LogFactoryInterceptor.cs" startLine="28" />
      <parameters>
        <parameter name="generator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
        <parameter name="useLogMethod">
          <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
            <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LogFactoryInterceptor" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.LogFactoryInterceptor.Generator">
      <apidata name="Generator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LogFactoryInterceptor.cs" startLine="41" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Generator" />
      <returns>
        <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LogFactoryInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.LogFactoryInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LogFactoryInterceptor.cs" startLine="54" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LogFactoryInterceptor" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.LogFactoryInterceptor.UseLogMethod">
      <apidata name="UseLogMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LogFactoryInterceptor.cs" startLine="47" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseLogMethod" />
      <returns>
        <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
          <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LogFactoryInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.LoggerTracker">
      <apidata name="LoggerTracker" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/LoggerTracker.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:WpfApp.Core.Interfaces.ILoggerTracker" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Logging.LoggerTracker.TrackLogger(System.String,NLog.ILogger)" />
        <element api="M:WpfApp.Core.Logging.LoggerTracker.OnLoggerRegistered(WpfApp.Core.Interfaces.LoggerEventArgs)" />
        <element api="M:WpfApp.Core.Logging.LoggerTracker.#ctor" />
        <element api="P:WpfApp.Core.Logging.LoggerTracker.Logger" />
        <element api="E:WpfApp.Core.Logging.LoggerTracker.LoggerRegistered" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.LoggerTracker.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/LoggerTracker.cs" startLine="21" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.LoggerTracker.Logger">
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LoggerTracker.cs" startLine="28" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Logger" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Core.Logging.LoggerTracker.LoggerRegistered">
      <apidata name="LoggerRegistered" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LoggerTracker.cs" />
      <proceduredata virtual="true" final="true" />
      <eventdata add="true" remove="true" />
      <adder name="add_LoggerRegistered" />
      <remover name="remove_LoggerRegistered" />
      <eventhandler>
        <type api="T:WpfApp.Core.Interfaces.LoggerRegisteredEventHandler" ref="true" />
      </eventhandler>
      <eventargs>
        <type api="T:WpfApp.Core.Interfaces.LoggerEventArgs" ref="true" />
      </eventargs>
      <implements>
        <member api="E:WpfApp.Core.Interfaces.ILoggerTracker.LoggerRegistered">
          <type api="T:WpfApp.Core.Interfaces.ILoggerTracker" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.LoggerTracker.OnLoggerRegistered(WpfApp.Core.Interfaces.LoggerEventArgs)">
      <apidata name="OnLoggerRegistered" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Core/Logging/LoggerTracker.cs" startLine="62" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="args">
          <type api="T:WpfApp.Core.Interfaces.LoggerEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.LoggerTracker.TrackLogger(System.String,NLog.ILogger)">
      <apidata name="TrackLogger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LoggerTracker.cs" startLine="36" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="loggerName">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="logger">
          <type api="T:NLog.ILogger" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.ILoggerTracker.TrackLogger(System.String,NLog.ILogger)">
          <type api="T:WpfApp.Core.Interfaces.ILoggerTracker" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggerTracker" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.LoggingEntityMetadataAttribute">
      <apidata name="LoggingEntityMetadataAttribute" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/LoggingEntityMetadataAttribute.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Attribute" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Logging.LoggingEntityMetadataAttribute.#ctor(System.Type)" />
        <element api="P:WpfApp.Core.Logging.LoggingEntityMetadataAttribute.LoggingType" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.ComponentModel.Composition.MetadataAttributeAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Logging.LoggingEntityMetadataAttribute.#ctor(System.Type)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/LoggingEntityMetadataAttribute.cs" startLine="29" />
      <parameters>
        <parameter name="loggingType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggingEntityMetadataAttribute" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.LoggingEntityMetadataAttribute.LoggingType">
      <apidata name="LoggingType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/LoggingEntityMetadataAttribute.cs" startLine="36" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_LoggingType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.LoggingEntityMetadataAttribute" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.MyCacheTarget">
      <apidata name="MyCacheTarget" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/MyCacheTarget.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.Targets.Target" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Logging.MyCacheTarget.#ctor" />
        <element api="M:WpfApp.Core.Logging.MyCacheTarget.GetInstance(System.Int32)" />
        <element api="M:WpfApp.Core.Logging.MyCacheTarget.Write(NLog.LogEventInfo)" />
        <element api="P:WpfApp.Core.Logging.MyCacheTarget.MaxCount" />
        <element api="P:WpfApp.Core.Logging.MyCacheTarget.Cache" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:NLog.Targets.TargetAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>MyCacheTarget</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Logging.MyCacheTarget.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/MyCacheTarget.cs" startLine="99" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyCacheTarget" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.MyCacheTarget.Cache">
      <apidata name="Cache" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/MyCacheTarget.cs" startLine="105" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Cache" />
      <returns>
        <type api="T:System.IObservable`1" ref="true">
          <specialization>
            <type api="T:NLog.LogEventInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyCacheTarget" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.MyCacheTarget.GetInstance(System.Int32)">
      <apidata name="GetInstance" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Logging/MyCacheTarget.cs" startLine="40" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="defaultMaxCount">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:WpfApp.Core.Logging.MyCacheTarget" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyCacheTarget" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Logging.MyCacheTarget.MaxCount">
      <apidata name="MaxCount" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/MyCacheTarget.cs" startLine="99" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_MaxCount" />
      <setter name="set_MaxCount" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyCacheTarget" ref="true" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:NLog.Config.RequiredParameterAttribute" ref="true" />
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Logging.MyCacheTarget.Write(NLog.LogEventInfo)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Core/Logging/MyCacheTarget.cs" startLine="81" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:NLog.Targets.Target.Write(NLog.LogEventInfo)">
          <type api="T:NLog.Targets.Target" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="logEvent">
          <type api="T:NLog.LogEventInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyCacheTarget" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.MyLogFactory">
      <apidata name="MyLogFactory" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/MyLogFactory.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:NLog.LogFactory" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Logging.MyLogFactory.#ctor" />
        <element api="M:WpfApp.Core.Logging.MyLogFactory.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)" />
        <element api="M:WpfApp.Core.Logging.MyLogFactory.GetDoLogMessage" />
        <element api="M:WpfApp.Core.Logging.MyLogFactory.GetLogger(System.String)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.MyLogFactory.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/MyLogFactory.cs" startLine="17" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyLogFactory" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.MyLogFactory.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/MyLogFactory.cs" startLine="23" />
      <parameters>
        <parameter name="doLogMessage">
          <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
            <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyLogFactory" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.MyLogFactory.GetDoLogMessage">
      <apidata name="GetDoLogMessage" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/MyLogFactory.cs" startLine="32" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
          <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyLogFactory" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.MyLogFactory.GetLogger(System.String)">
      <apidata name="GetLogger" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/MyLogFactory.cs" startLine="41" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="name">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.MyLogFactory" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Logging.NLogTargetConverter">
      <apidata name="NLogTargetConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.ToString" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Logging.NLogTargetConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <apidata name="CanConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="132" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="sourceType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
      <apidata name="CanConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="137" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="201" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="227" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
      <apidata name="ConvertFrom" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="151" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
      <apidata name="ConvertTo" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="161" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="destinationType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
      <apidata name="CreateInstance" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="82" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="propertyValues">
          <type api="T:System.Collections.IDictionary" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
      <apidata name="GetCreateInstanceSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="88" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <apidata name="GetProperties" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="104" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="attributes">
          <arrayOf rank="1">
            <type api="T:System.Attribute" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.PropertyDescriptorCollection" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <apidata name="GetPropertiesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="109" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
      <apidata name="GetStandardValues" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="115" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.ComponentModel.TypeConverter.StandardValuesCollection" ref="true">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
      <apidata name="GetStandardValuesExclusive" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="120" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <apidata name="GetStandardValuesSupported" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="126" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
      <apidata name="IsValid" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="178" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)">
          <type api="T:System.ComponentModel.TypeConverter" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="context">
          <type api="T:System.ComponentModel.ITypeDescriptorContext" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.System#Windows#Data#IValueConverter#Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="32" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.System#Windows#Data#IValueConverter#ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="private" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="51" />
      <proceduredata virtual="true" final="true" eii="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Logging.NLogTargetConverter.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Logging/NLogTargetConverter.cs" startLine="184" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Logging" />
        <type api="T:WpfApp.Core.Logging.NLogTargetConverter" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Menus">
      <apidata name="WpfApp.Core.Menus" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Menus.MenuHelper" />
        <element api="T:WpfApp.Core.Menus.MenuItemContainerStyleSelector" />
        <element api="T:WpfApp.Core.Menus.MenuMenuItemTemplateSelector" />
        <element api="T:WpfApp.Core.Menus.MenuModule" />
        <element api="T:WpfApp.Core.Menus.WindowsTopLevelMenu" />
        <element api="T:WpfApp.Core.Menus.XMenuItem" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Menus.MenuHelper">
      <apidata name="MenuHelper" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Menus/MenuHelper.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Menus.MenuHelper.MakeMenuItem(WpfApp.Core.Interfaces.IMenuItem)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuHelper.MakeMenuItem(WpfApp.Core.Interfaces.IMenuItem)">
      <apidata name="MakeMenuItem" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Menus/MenuHelper.cs" startLine="18" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="arg">
          <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Controls.MenuItem" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuHelper" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Menus.MenuItemContainerStyleSelector">
      <apidata name="MenuItemContainerStyleSelector" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Menus/MenuItemContainerStyleSelector.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.StyleSelector" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Menus.MenuItemContainerStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Core.Menus.MenuItemContainerStyleSelector.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuItemContainerStyleSelector.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Menus/MenuItemContainerStyleSelector.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuItemContainerStyleSelector" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuItemContainerStyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
      <apidata name="SelectStyle" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/MenuItemContainerStyleSelector.cs" startLine="22" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Controls.StyleSelector.SelectStyle(System.Object,System.Windows.DependencyObject)">
          <type api="T:System.Windows.Controls.StyleSelector" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="container">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Style" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuItemContainerStyleSelector" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Menus.MenuMenuItemTemplateSelector">
      <apidata name="MenuMenuItemTemplateSelector" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Menus/MenuMenuItemTemplateSelector.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Menus.MenuMenuItemTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
        <element api="M:WpfApp.Core.Menus.MenuMenuItemTemplateSelector.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuMenuItemTemplateSelector.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Menus/MenuMenuItemTemplateSelector.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuMenuItemTemplateSelector" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuMenuItemTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
      <apidata name="SelectTemplate" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/MenuMenuItemTemplateSelector.cs" startLine="53" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)">
          <type api="T:System.Windows.Controls.DataTemplateSelector" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="item">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="container">
          <type api="T:System.Windows.DependencyObject" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.DataTemplate" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuMenuItemTemplateSelector" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Menus.MenuModule">
      <apidata name="MenuModule" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Menus/MenuModule.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Autofac.Module" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Menus.MenuModule.Load(Autofac.ContainerBuilder)" />
        <element api="M:WpfApp.Core.Menus.MenuModule.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuModule.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Menus/MenuModule.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuModule" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.MenuModule.Load(Autofac.ContainerBuilder)">
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Core/Menus/MenuModule.cs" startLine="45" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Autofac.Module.Load(Autofac.ContainerBuilder)">
          <type api="T:Autofac.Module" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="builder">
          <type api="T:Autofac.ContainerBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.MenuModule" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Menus.WindowsTopLevelMenu">
      <apidata name="WindowsTopLevelMenu" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Menus/WindowsTopLevelMenu.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:WpfApp.Core.Interfaces.ITopLevelMenu" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Menus.WindowsTopLevelMenu.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{System.Lazy{System.Windows.Window}}},System.Func{WpfApp.Core.Interfaces.IMenuItem},System.Func{System.Type,NLog.ILogger})" />
        <element api="M:WpfApp.Core.Menus.WindowsTopLevelMenu.GetXMenuItem" />
        <element api="P:WpfApp.Core.Menus.WindowsTopLevelMenu.Windows" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.WindowsTopLevelMenu.#ctor(System.Collections.Generic.IEnumerable{Autofac.Features.Metadata.Meta{System.Lazy{System.Windows.Window}}},System.Func{WpfApp.Core.Interfaces.IMenuItem},System.Func{System.Type,NLog.ILogger})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Menus/WindowsTopLevelMenu.cs" startLine="27" />
      <parameters>
        <parameter name="windows">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:Autofac.Features.Metadata.Meta`1" ref="true">
                <specialization>
                  <type api="T:System.Lazy`1" ref="true">
                    <specialization>
                      <type api="T:System.Windows.Window" ref="true" />
                    </specialization>
                  </type>
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
        <parameter name="xMenuItemCreator">
          <type api="T:System.Func`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="func">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:NLog.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.WindowsTopLevelMenu" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.WindowsTopLevelMenu.GetXMenuItem">
      <apidata name="GetXMenuItem" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/WindowsTopLevelMenu.cs" startLine="51" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
      </returns>
      <implements>
        <member api="M:WpfApp.Core.Interfaces.ITopLevelMenu.GetXMenuItem">
          <type api="T:WpfApp.Core.Interfaces.ITopLevelMenu" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.WindowsTopLevelMenu" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Menus.WindowsTopLevelMenu.Windows">
      <apidata name="Windows" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/WindowsTopLevelMenu.cs" startLine="44" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Windows" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:Autofac.Features.Metadata.Meta`1" ref="true">
              <specialization>
                <type api="T:System.Lazy`1" ref="true">
                  <specialization>
                    <type api="T:System.Windows.Window" ref="true" />
                  </specialization>
                </type>
              </specialization>
            </type>
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.WindowsTopLevelMenu" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Menus.XMenuItem">
      <apidata name="XMenuItem" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
        <type api="T:System.Windows.Input.ICommandSource" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Menus.XMenuItem.#ctor(Autofac.Features.OwnedInstances.Owned{System.Func{System.Type,NLog.ILogger}})" />
        <element api="M:WpfApp.Core.Menus.XMenuItem.ToString" />
        <element api="P:WpfApp.Core.Menus.XMenuItem.Header" />
        <element api="P:WpfApp.Core.Menus.XMenuItem.Children" />
        <element api="P:WpfApp.Core.Menus.XMenuItem.Command" />
        <element api="P:WpfApp.Core.Menus.XMenuItem.CommandParameter" />
        <element api="P:WpfApp.Core.Menus.XMenuItem.CommandTarget" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.XMenuItem.#ctor(Autofac.Features.OwnedInstances.Owned{System.Func{System.Type,NLog.ILogger}})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="21" />
      <parameters>
        <parameter name="func">
          <type api="T:Autofac.Features.OwnedInstances.Owned`1" ref="true">
            <specialization>
              <type api="T:System.Func`2" ref="true">
                <specialization>
                  <type api="T:System.Type" ref="true" />
                  <type api="T:NLog.ILogger" ref="true" />
                </specialization>
              </type>
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Menus.XMenuItem.Children">
      <apidata name="Children" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="44" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Children" />
      <setter name="set_Children" />
      <returns>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
      </returns>
      <implements>
        <member api="P:WpfApp.Core.Interfaces.IMenuItem.Children">
          <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Menus.XMenuItem.Command">
      <apidata name="Command" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="50" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Command" />
      <setter name="set_Command" />
      <returns>
        <type api="T:System.Windows.Input.ICommand" ref="true" />
      </returns>
      <implements>
        <member api="P:WpfApp.Core.Interfaces.IMenuItem.Command">
          <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
        </member>
        <member api="P:System.Windows.Input.ICommandSource.Command">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Menus.XMenuItem.CommandParameter">
      <apidata name="CommandParameter" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="56" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_CommandParameter" />
      <setter name="set_CommandParameter" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="P:WpfApp.Core.Interfaces.IMenuItem.CommandParameter">
          <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
        </member>
        <member api="P:System.Windows.Input.ICommandSource.CommandParameter">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Menus.XMenuItem.CommandTarget">
      <apidata name="CommandTarget" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="62" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" />
      <getter name="get_CommandTarget" />
      <returns>
        <type api="T:System.Windows.IInputElement" ref="true" />
      </returns>
      <implements>
        <member api="P:System.Windows.Input.ICommandSource.CommandTarget">
          <type api="T:System.Windows.Input.ICommandSource" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Menus.XMenuItem.Header">
      <apidata name="Header" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="38" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Header" />
      <setter name="set_Header" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <implements>
        <member api="P:WpfApp.Core.Interfaces.IMenuItem.Header">
          <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Menus.XMenuItem.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Menus/XMenuItem.cs" startLine="69" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Menus" />
        <type api="T:WpfApp.Core.Menus.XMenuItem" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Model">
      <apidata name="WpfApp.Core.Model" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Model.InstanceRegistration" />
        <element api="T:WpfApp.Core.Model.MenuItemList" />
        <element api="T:WpfApp.Core.Model.MethodInvocation" />
        <element api="T:WpfApp.Core.Model.ResourceInfo" />
        <element api="T:WpfApp.Core.Model.ResourcesModel" />
        <element api="T:WpfApp.Core.Model.ResourcesUtil" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Model.InstanceRegistration">
      <apidata name="InstanceRegistration" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Model.InstanceRegistration.#ctor(System.Object,System.Object,WpfApp.Core.Infos.InstanceInfo)" />
        <element api="M:WpfApp.Core.Model.InstanceRegistration.ToString" />
        <element api="P:WpfApp.Core.Model.InstanceRegistration.Instance" />
        <element api="P:WpfApp.Core.Model.InstanceRegistration.ObjectId" />
        <element api="P:WpfApp.Core.Model.InstanceRegistration.InstanceInfo" />
        <element api="P:WpfApp.Core.Model.InstanceRegistration.Type" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Model.InstanceRegistration.#ctor(System.Object,System.Object,WpfApp.Core.Infos.InstanceInfo)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" startLine="31" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="objectId">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="instanceInfo">
          <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.InstanceRegistration.Instance">
      <apidata name="Instance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" startLine="47" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Instance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.InstanceRegistration.InstanceInfo">
      <apidata name="InstanceInfo" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" startLine="62" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_InstanceInfo" />
      <returns>
        <type api="T:WpfApp.Core.Infos.InstanceInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.InstanceRegistration.ObjectId">
      <apidata name="ObjectId" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" startLine="54" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ObjectId" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Model.InstanceRegistration.ToString">
      <apidata name="ToString" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" startLine="75" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Object.ToString">
          <type api="T:System.Object" ref="true" />
        </member>
      </overrides>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.InstanceRegistration.Type">
      <apidata name="Type" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/InstanceRegistration.cs" startLine="70" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Type" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.InstanceRegistration" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Model.MenuItemList">
      <apidata name="MenuItemList" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Model/MenuItemList.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Collections.ObjectModel.Collection`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:WpfApp.Core.Interfaces.IMenuItemList" ref="true" />
        <type api="T:System.Collections.Generic.IList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.ICollection`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.IEnumerable" ref="true" />
        <type api="T:System.Collections.IList" ref="true" />
        <type api="T:System.Collections.ICollection" ref="true" />
        <type api="T:System.Collections.Generic.IReadOnlyList`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:System.Collections.Generic.IReadOnlyCollection`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Interfaces.IMenuItem" ref="true" />
          </specialization>
        </type>
        <type api="T:WpfApp.Core.Interfaces.IHaveLogger" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Model.MenuItemList.#ctor(System.Collections.Generic.IEnumerable{WpfApp.Core.Interfaces.ITopLevelMenu},System.Func{System.Type,NLog.ILogger})" />
        <element api="P:WpfApp.Core.Model.MenuItemList.Logger" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:WpfApp.Core.Logging.LoggingEntityMetadataAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:WpfApp.Core.Model.MenuItemList" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Model.MenuItemList.#ctor(System.Collections.Generic.IEnumerable{WpfApp.Core.Interfaces.ITopLevelMenu},System.Func{System.Type,NLog.ILogger})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Model/MenuItemList.cs" startLine="29" />
      <parameters>
        <parameter name="topLevelMenus">
          <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Interfaces.ITopLevelMenu" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="loggerFunc">
          <type api="T:System.Func`2" ref="true">
            <specialization>
              <type api="T:System.Type" ref="true" />
              <type api="T:NLog.ILogger" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MenuItemList" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.MenuItemList.Logger">
      <apidata name="Logger" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/MenuItemList.cs" startLine="39" />
      <proceduredata virtual="true" final="true" />
      <propertydata get="true" set="true" />
      <getter name="get_Logger" />
      <setter name="set_Logger" />
      <returns>
        <type api="T:NLog.ILogger" ref="true" />
      </returns>
      <implements>
        <member api="P:WpfApp.Core.Interfaces.IHaveLogger.Logger">
          <type api="T:WpfApp.Core.Interfaces.IHaveLogger" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MenuItemList" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Model.MethodInvocation">
      <apidata name="MethodInvocation" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Model/MethodInvocation.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Model.MethodInvocation.#ctor(System.Reflection.MethodInfo,System.Object[],System.Object,System.Object)" />
        <element api="P:WpfApp.Core.Model.MethodInvocation.Method" />
        <element api="P:WpfApp.Core.Model.MethodInvocation.Arguments" />
        <element api="P:WpfApp.Core.Model.MethodInvocation.OriginalReturnValue" />
        <element api="P:WpfApp.Core.Model.MethodInvocation.ReturnValue" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Model.MethodInvocation.#ctor(System.Reflection.MethodInfo,System.Object[],System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Model/MethodInvocation.cs" startLine="25" />
      <parameters>
        <parameter name="method">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
        <parameter name="arguments">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
        <parameter name="originalReturnValue" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
        <parameter name="returnValue" optional="true">
          <type api="T:System.Object" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MethodInvocation" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.MethodInvocation.Arguments">
      <apidata name="Arguments" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/MethodInvocation.cs" startLine="50" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Arguments" />
      <returns>
        <arrayOf rank="1">
          <type api="T:System.Object" ref="true" />
        </arrayOf>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MethodInvocation" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.MethodInvocation.Method">
      <apidata name="Method" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/MethodInvocation.cs" startLine="43" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Method" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MethodInvocation" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.MethodInvocation.OriginalReturnValue">
      <apidata name="OriginalReturnValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/MethodInvocation.cs" startLine="56" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_OriginalReturnValue" />
      <setter name="set_OriginalReturnValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MethodInvocation" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.MethodInvocation.ReturnValue">
      <apidata name="ReturnValue" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/MethodInvocation.cs" startLine="63" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ReturnValue" />
      <setter name="set_ReturnValue" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.MethodInvocation" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Model.ResourceInfo">
      <apidata name="ResourceInfo" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Model/ResourceInfo.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Model.ResourceInfo.#ctor(System.Uri,System.Object,System.Object)" />
        <element api="P:WpfApp.Core.Model.ResourceInfo.Source" />
        <element api="P:WpfApp.Core.Model.ResourceInfo.Key1" />
        <element api="P:WpfApp.Core.Model.ResourceInfo.Value" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Model.ResourceInfo.#ctor(System.Uri,System.Object,System.Object)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Model/ResourceInfo.cs" startLine="14" />
      <parameters>
        <parameter name="source">
          <type api="T:System.Uri" ref="true" />
        </parameter>
        <parameter name="key">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.ResourceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.ResourceInfo.Key1">
      <apidata name="Key1" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/ResourceInfo.cs" startLine="33" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Key1" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.ResourceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.ResourceInfo.Source">
      <apidata name="Source" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/ResourceInfo.cs" startLine="26" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Source" />
      <returns>
        <type api="T:System.Uri" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.ResourceInfo" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.ResourceInfo.Value">
      <apidata name="Value" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/ResourceInfo.cs" startLine="40" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Value" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.ResourceInfo" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Model.ResourcesModel">
      <apidata name="ResourcesModel" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Model/ResourcesModel.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Model.ResourcesModel.#ctor" />
        <element api="P:WpfApp.Core.Model.ResourcesModel.ResourcesCollection" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Model.ResourcesModel.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Model/ResourcesModel.cs" startLine="15" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.ResourcesModel" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Model.ResourcesModel.ResourcesCollection">
      <apidata name="ResourcesCollection" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Model/ResourcesModel.cs" startLine="14" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ResourcesCollection" />
      <setter name="set_ResourcesCollection" />
      <returns>
        <type api="T:System.Collections.ObjectModel.ObservableCollection`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Model.ResourceInfo" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
        <type api="T:WpfApp.Core.Model.ResourcesModel" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Model.ResourcesUtil">
      <apidata name="ResourcesUtil" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Model/ResourcesUtil.cs" />
      <typedata visibility="public" abstract="true" sealed="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Model" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Tracing">
      <apidata name="WpfApp.Core.Tracing" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Tracing.AppTraceListener" />
        <element api="T:WpfApp.Core.Tracing.AppTraceListener2" />
        <element api="T:WpfApp.Core.Tracing.Info" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Tracing.AppTraceListener">
      <apidata name="AppTraceListener" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener.Write(System.String)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener.WriteLine(System.String)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener.#ctor" />
        <element api="P:WpfApp.Core.Tracing.AppTraceListener.RoutedEvents" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="43" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Tracing.AppTraceListener.RoutedEvents">
      <apidata name="RoutedEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="42" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_RoutedEvents" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:WpfApp.Core.Tracing.Info" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="67" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="104" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="149" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener.Write(System.String)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="241" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener.WriteLine(System.String)">
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener.cs" startLine="248" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Tracing.AppTraceListener2">
      <apidata name="AppTraceListener2" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
          <type api="T:System.MarshalByRefObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener2.Write(System.String)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener2.WriteLine(System.String)" />
        <element api="M:WpfApp.Core.Tracing.AppTraceListener2.#ctor" />
        <element api="P:WpfApp.Core.Tracing.AppTraceListener2.RoutedEvents" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="38" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Tracing.AppTraceListener2.RoutedEvents">
      <apidata name="RoutedEvents" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="37" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_RoutedEvents" />
      <setter name="set_RoutedEvents" />
      <returns>
        <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
            <type api="T:WpfApp.Core.Tracing.Info" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="62" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="99" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener2.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
      <apidata name="TraceEvent" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="145" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="eventCache">
          <type api="T:System.Diagnostics.TraceEventCache" ref="true" />
        </parameter>
        <parameter name="source">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="eventType">
          <type api="T:System.Diagnostics.TraceEventType" ref="false" />
        </parameter>
        <parameter name="id">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="format">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="args" params="true">
          <arrayOf rank="1">
            <type api="T:System.Object" ref="true" />
          </arrayOf>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener2.Write(System.String)">
      <apidata name="Write" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="215" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.Write(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.AppTraceListener2.WriteLine(System.String)">
      <apidata name="WriteLine" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/AppTraceListener2.cs" startLine="222" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Diagnostics.TraceListener.WriteLine(System.String)">
          <type api="T:System.Diagnostics.TraceListener" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.AppTraceListener2" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Tracing.Info">
      <apidata name="Info" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Tracing/Info.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Tracing.Info.#ctor(System.Int32)" />
        <element api="P:WpfApp.Core.Tracing.Info.Count" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Tracing.Info.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Tracing/Info.cs" startLine="28" />
      <parameters>
        <parameter name="count">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.Info" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Tracing.Info.Count">
      <apidata name="Count" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Tracing/Info.cs" startLine="22" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Count" />
      <setter name="set_Count" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Tracing" />
        <type api="T:WpfApp.Core.Tracing.Info" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Util">
      <apidata name="WpfApp.Core.Util" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Util.AttachedContext" />
        <element api="T:WpfApp.Core.Util.ContextStackException" />
        <element api="T:WpfApp.Core.Util.SerializableDictionary`2" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Util.AttachedContext">
      <apidata name="AttachedContext" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Util/AttachedContext.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.IDisposable" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Util.AttachedContext.#ctor(WpfApp.Core.Infos.ContextStack{WpfApp.Core.Infos.InfoContext},WpfApp.Core.Infos.InfoContext)" />
        <element api="M:WpfApp.Core.Util.AttachedContext.Dispose" />
        <element api="M:WpfApp.Core.Util.AttachedContext.Dispose(System.Boolean)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.AttachedContext.#ctor(WpfApp.Core.Infos.ContextStack{WpfApp.Core.Infos.InfoContext},WpfApp.Core.Infos.InfoContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/AttachedContext.cs" startLine="27" />
      <parameters>
        <parameter name="contextStack">
          <type api="T:WpfApp.Core.Infos.ContextStack`1" ref="true">
            <specialization>
              <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="context">
          <type api="T:WpfApp.Core.Infos.InfoContext" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.AttachedContext" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.AttachedContext.Dispose">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Util/AttachedContext.cs" startLine="40" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:System.IDisposable.Dispose">
          <type api="T:System.IDisposable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.AttachedContext" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.AttachedContext.Dispose(System.Boolean)">
      <apidata name="Dispose" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Core/Util/AttachedContext.cs" startLine="53" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="b">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.AttachedContext" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Util.ContextStackException">
      <apidata name="ContextStackException" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Util/ContextStackException.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Exception" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Util.ContextStackException.#ctor" />
        <element api="M:WpfApp.Core.Util.ContextStackException.#ctor(System.String)" />
        <element api="M:WpfApp.Core.Util.ContextStackException.#ctor(System.String,System.Exception)" />
        <element api="M:WpfApp.Core.Util.ContextStackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.ContextStackException.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/ContextStackException.cs" startLine="32" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.ContextStackException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.ContextStackException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Core/Util/ContextStackException.cs" startLine="92" />
      <parameters>
        <parameter name="info">
          <type api="T:System.Runtime.Serialization.SerializationInfo" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Runtime.Serialization.StreamingContext" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.ContextStackException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.ContextStackException.#ctor(System.String)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/ContextStackException.cs" startLine="39" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.ContextStackException" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.ContextStackException.#ctor(System.String,System.Exception)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/ContextStackException.cs" startLine="58" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="innerException">
          <type api="T:System.Exception" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.ContextStackException" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Util.SerializableDictionary`2">
      <apidata name="SerializableDictionary" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" />
      <typedata visibility="public" serializable="true" />
      <family>
        <ancestors>
          <type api="T:System.Collections.Generic.Dictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
              <template name="TValue" index="1" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
            </specialization>
          </type>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <templates>
        <template name="TKey" />
        <template name="TValue" />
      </templates>
      <implements>
        <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Int32)" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.GetSchema" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)" />
        <element api="M:WpfApp.Core.Util.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Xml.Serialization.XmlRootAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>dictionary</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="24" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="31" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
              <template name="TValue" index="1" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IDictionary{`0,`1},System.Collections.Generic.IEqualityComparer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="45" />
      <parameters>
        <parameter name="dictionary">
          <type api="T:System.Collections.Generic.IDictionary`2" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
              <template name="TValue" index="1" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
            </specialization>
          </type>
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="55" />
      <parameters>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="63" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.#ctor(System.Int32,System.Collections.Generic.IEqualityComparer{`0})">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="73" />
      <parameters>
        <parameter name="capacity">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="comparer">
          <type api="T:System.Collections.Generic.IEqualityComparer`1" ref="true">
            <specialization>
              <template name="TKey" index="0" api="T:WpfApp.Core.Util.SerializableDictionary`2" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.GetSchema">
      <apidata name="GetSchema" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="86" />
      <proceduredata virtual="true" final="true" />
      <returns>
        <type api="T:System.Xml.Schema.XmlSchema" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.GetSchema">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.ReadXml(System.Xml.XmlReader)">
      <apidata name="ReadXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="93" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="reader">
          <type api="T:System.Xml.XmlReader" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.ReadXml(System.Xml.XmlReader)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Util.SerializableDictionary`2.WriteXml(System.Xml.XmlWriter)">
      <apidata name="WriteXml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Util/SerializableDictionary.cs" startLine="131" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="writer">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:System.Xml.Serialization.IXmlSerializable.WriteXml(System.Xml.XmlWriter)">
          <type api="T:System.Xml.Serialization.IXmlSerializable" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Util" />
        <type api="T:WpfApp.Core.Util.SerializableDictionary`2" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Core.Xaml">
      <apidata name="WpfApp.Core.Xaml" group="namespace" />
      <elements>
        <element api="T:WpfApp.Core.Xaml.AssemblyConverter" />
        <element api="T:WpfApp.Core.Xaml.ResolveService" />
        <element api="T:WpfApp.Core.Xaml.LifetimeScopeExtension" />
        <element api="T:WpfApp.Core.Xaml.ObjectIdExtension" />
      </elements>
    </api>
    <api id="T:WpfApp.Core.Xaml.AssemblyConverter">
      <apidata name="AssemblyConverter" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Xaml/AssemblyConverter.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:System.Windows.Data.IValueConverter" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Core.Xaml.AssemblyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Xaml.AssemblyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
        <element api="M:WpfApp.Core.Xaml.AssemblyConverter.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Data.ValueConversionAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Reflection.Assembly" ref="true" />
            </typeValue>
          </argument>
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Collections.Generic.IEnumerable`1" ref="true">
                <specialization>
                  <type api="T:System.Type" ref="true" />
                </specialization>
              </type>
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Xaml.AssemblyConverter.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Xaml/AssemblyConverter.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.AssemblyConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Xaml.AssemblyConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="Convert" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/AssemblyConverter.cs" startLine="31" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.AssemblyConverter" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Xaml.AssemblyConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
      <apidata name="ConvertBack" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/AssemblyConverter.cs" startLine="61" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="value">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="targetType">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="parameter">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="culture">
          <type api="T:System.Globalization.CultureInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <implements>
        <member api="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)">
          <type api="T:System.Windows.Data.IValueConverter" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.AssemblyConverter" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Xaml.LifetimeScopeExtension">
      <apidata name="LifetimeScopeExtension" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Xaml/LifetimeScopeExtension.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Xaml.LifetimeScopeExtension.#ctor" />
        <element api="M:WpfApp.Core.Xaml.LifetimeScopeExtension.ProvideValue(System.IServiceProvider)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:Autofac.ILifetimeScope" ref="true" />
            </typeValue>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Xaml.LifetimeScopeExtension.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Xaml/LifetimeScopeExtension.cs" startLine="25" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.LifetimeScopeExtension" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Xaml.LifetimeScopeExtension.ProvideValue(System.IServiceProvider)">
      <apidata name="ProvideValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/LifetimeScopeExtension.cs" startLine="40" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.LifetimeScopeExtension" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Xaml.ObjectIdExtension">
      <apidata name="ObjectIdExtension" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Xaml/ObjectIdExtension.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Core.Xaml.ObjectIdExtension.ProvideValue(System.IServiceProvider)" />
        <element api="M:WpfApp.Core.Xaml.ObjectIdExtension.#ctor" />
        <element api="P:WpfApp.Core.Xaml.ObjectIdExtension.Target" />
        <element api="P:WpfApp.Core.Xaml.ObjectIdExtension.LifetimeScope" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
      </containers>
      <attributes>
        <attribute>
          <type api="T:System.Windows.Markup.MarkupExtensionReturnTypeAttribute" ref="true" />
          <argument>
            <type api="T:System.Type" ref="true" />
            <typeValue>
              <type api="T:System.Object" ref="true" />
            </typeValue>
          </argument>
        </attribute>
        <attribute>
          <type api="T:System.Windows.Markup.XamlSetTypeConverterAttribute" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value>AppShared.CustomResourceLoader</value>
          </argument>
        </attribute>
      </attributes>
    </api>
    <api id="M:WpfApp.Core.Xaml.ObjectIdExtension.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Xaml/ObjectIdExtension.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ObjectIdExtension" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Xaml.ObjectIdExtension.LifetimeScope">
      <apidata name="LifetimeScope" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ObjectIdExtension.cs" startLine="27" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_LifetimeScope" />
      <setter name="set_LifetimeScope" />
      <returns>
        <type api="T:Autofac.ILifetimeScope" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ObjectIdExtension" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Xaml.ObjectIdExtension.ProvideValue(System.IServiceProvider)">
      <apidata name="ProvideValue" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ObjectIdExtension.cs" startLine="43" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)">
          <type api="T:System.Windows.Markup.MarkupExtension" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="serviceProvider">
          <type api="T:System.IServiceProvider" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ObjectIdExtension" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Xaml.ObjectIdExtension.Target">
      <apidata name="Target" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ObjectIdExtension.cs" startLine="23" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Target" />
      <setter name="set_Target" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ObjectIdExtension" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Core.Xaml.ResolveService">
      <apidata name="ResolveService" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Windows.FrameworkElement" ref="true" />
          <type api="T:System.Windows.UIElement" ref="true" />
          <type api="T:System.Windows.Media.Visual" ref="true" />
          <type api="T:System.Windows.DependencyObject" ref="true" />
          <type api="T:System.Windows.Threading.DispatcherObject" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:WpfApp.Core.Xaml.ResolveService.LifetimeScopeProperty" />
        <element api="F:WpfApp.Core.Xaml.ResolveService.ServiceInstanceChangedEvent" />
        <element api="F:WpfApp.Core.Xaml.ResolveService.ServiceInstanceProperty" />
        <element api="M:WpfApp.Core.Xaml.ResolveService.OnInitialized(System.EventArgs)" />
        <element api="M:WpfApp.Core.Xaml.ResolveService.#ctor" />
        <element api="P:WpfApp.Core.Xaml.ResolveService.ServiceType" />
        <element api="P:WpfApp.Core.Xaml.ResolveService.ServiceInstance" />
        <element api="P:WpfApp.Core.Xaml.ResolveService.Service" />
        <element api="E:WpfApp.Core.Xaml.ResolveService.ServiceInstanceChanged" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Xaml.ResolveService.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Xaml.ResolveService.LifetimeScopeProperty">
      <apidata name="LifetimeScopeProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Core.Xaml.ResolveService.OnInitialized(System.EventArgs)">
      <apidata name="OnInitialized" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" startLine="123" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)">
          <type api="T:System.Windows.FrameworkElement" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="e">
          <type api="T:System.EventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Xaml.ResolveService.Service">
      <apidata name="Service" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" startLine="82" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Service" />
      <setter name="set_Service" />
      <returns>
        <type api="T:Autofac.Core.Service" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Xaml.ResolveService.ServiceInstance">
      <apidata name="ServiceInstance" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" startLine="74" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceInstance" />
      <setter name="set_ServiceInstance" />
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Core.Xaml.ResolveService.ServiceInstanceChanged">
      <apidata name="ServiceInstanceChanged" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_ServiceInstanceChanged" />
      <remover name="remove_ServiceInstanceChanged" />
      <eventhandler>
        <type api="T:System.Windows.RoutedPropertyChangedEventHandler`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:System.Windows.RoutedPropertyChangedEventArgs`1" ref="true">
          <specialization>
            <type api="T:System.Object" ref="true" />
          </specialization>
        </type>
      </eventargs>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Xaml.ResolveService.ServiceInstanceChangedEvent">
      <apidata name="ServiceInstanceChangedEvent" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.RoutedEvent" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Core.Xaml.ResolveService.ServiceInstanceProperty">
      <apidata name="ServiceInstanceProperty" group="member" subgroup="field" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Windows.DependencyProperty" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Core.Xaml.ResolveService.ServiceType">
      <apidata name="ServiceType" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Core/Xaml/ResolveService.cs" startLine="66" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_ServiceType" />
      <setter name="set_ServiceType" />
      <returns>
        <type api="T:System.Type" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Core.Xaml" />
        <type api="T:WpfApp.Core.Xaml.ResolveService" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Debug">
      <apidata name="WpfApp.Debug" group="namespace" />
      <elements>
        <element api="T:WpfApp.Debug.DebugEventArgs" />
      </elements>
    </api>
    <api id="T:WpfApp.Debug.DebugEventArgs">
      <apidata name="DebugEventArgs" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Debug/DebugEventArgs.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.EventArgs" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Debug.DebugEventArgs.#ctor(System.String,System.String,System.String,System.Int32)" />
        <element api="P:WpfApp.Debug.DebugEventArgs.Message" />
        <element api="P:WpfApp.Debug.DebugEventArgs.CallerMemberName" />
        <element api="P:WpfApp.Debug.DebugEventArgs.CallerFilePath" />
        <element api="P:WpfApp.Debug.DebugEventArgs.CallerLineNumber" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Debug" />
      </containers>
    </api>
    <api id="M:WpfApp.Debug.DebugEventArgs.#ctor(System.String,System.String,System.String,System.Int32)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Debug/DebugEventArgs.cs" startLine="17" />
      <parameters>
        <parameter name="message">
          <type api="T:System.String" ref="true" />
        </parameter>
        <parameter name="callerMemberName" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerFilePath" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
        <parameter name="callerLineNumber" optional="true">
          <type api="T:System.Int32" ref="false" />
          <argument>
            <type api="T:System.Int32" ref="false" />
            <value>0</value>
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Debug" />
        <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Debug.DebugEventArgs.CallerFilePath">
      <apidata name="CallerFilePath" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Debug/DebugEventArgs.cs" startLine="48" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallerFilePath" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Debug" />
        <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Debug.DebugEventArgs.CallerLineNumber">
      <apidata name="CallerLineNumber" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Debug/DebugEventArgs.cs" startLine="55" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallerLineNumber" />
      <returns>
        <type api="T:System.Int32" ref="false" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Debug" />
        <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Debug.DebugEventArgs.CallerMemberName">
      <apidata name="CallerMemberName" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Debug/DebugEventArgs.cs" startLine="41" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_CallerMemberName" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Debug" />
        <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Debug.DebugEventArgs.Message">
      <apidata name="Message" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Debug/DebugEventArgs.cs" startLine="34" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Message" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Debug" />
        <type api="T:WpfApp.Debug.DebugEventArgs" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Modules">
      <apidata name="WpfApp.Modules" group="namespace" />
      <elements>
        <element api="T:WpfApp.Modules.IdGeneratorModule" />
      </elements>
    </api>
    <api id="T:WpfApp.Modules.IdGeneratorModule">
      <apidata name="IdGeneratorModule" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Modules/IdGeneratorModule.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:Autofac.Module" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Modules.IdGeneratorModule.Load(Autofac.ContainerBuilder)" />
        <element api="M:WpfApp.Modules.IdGeneratorModule.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)" />
        <element api="M:WpfApp.Modules.IdGeneratorModule.#ctor" />
        <element api="P:WpfApp.Modules.IdGeneratorModule.DefaultObject" />
        <element api="P:WpfApp.Modules.IdGeneratorModule.Generator" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Modules" />
      </containers>
    </api>
    <api id="M:WpfApp.Modules.IdGeneratorModule.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Modules/IdGeneratorModule.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Modules" />
        <type api="T:WpfApp.Modules.IdGeneratorModule" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Modules.IdGeneratorModule.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)">
      <apidata name="AttachToComponentRegistration" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Modules/IdGeneratorModule.cs" startLine="73" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Autofac.Module.AttachToComponentRegistration(Autofac.Core.IComponentRegistry,Autofac.Core.IComponentRegistration)">
          <type api="T:Autofac.Module" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="componentRegistry">
          <type api="T:Autofac.Core.IComponentRegistry" ref="true" />
        </parameter>
        <parameter name="registration">
          <type api="T:Autofac.Core.IComponentRegistration" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Modules" />
        <type api="T:WpfApp.Modules.IdGeneratorModule" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Modules.IdGeneratorModule.DefaultObject">
      <apidata name="DefaultObject" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Modules/IdGeneratorModule.cs" startLine="24" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_DefaultObject" />
      <setter name="set_DefaultObject" />
      <returns>
        <type api="T:WpfApp.Core.DefaultObjectIdProvider" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Modules" />
        <type api="T:WpfApp.Modules.IdGeneratorModule" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Modules.IdGeneratorModule.Generator">
      <apidata name="Generator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Modules/IdGeneratorModule.cs" startLine="30" />
      <proceduredata virtual="false" />
      <propertydata get="true" set="true" />
      <getter name="get_Generator" />
      <setter name="set_Generator" />
      <returns>
        <type api="T:System.Runtime.Serialization.ObjectIDGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Modules" />
        <type api="T:WpfApp.Modules.IdGeneratorModule" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Modules.IdGeneratorModule.Load(Autofac.ContainerBuilder)">
      <apidata name="Load" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Modules/IdGeneratorModule.cs" startLine="41" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:Autofac.Module.Load(Autofac.ContainerBuilder)">
          <type api="T:Autofac.Module" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="builder">
          <type api="T:Autofac.ContainerBuilder" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Modules" />
        <type api="T:WpfApp.Modules.IdGeneratorModule" ref="true" />
      </containers>
    </api>
    <api id="N:WpfApp.Proxy">
      <apidata name="WpfApp.Proxy" group="namespace" />
      <elements>
        <element api="T:WpfApp.Proxy.LoggerFactoryHook" />
        <element api="T:WpfApp.Proxy.LoggerProxyHelper" />
        <element api="T:WpfApp.Proxy.LoggingInterceptor" />
        <element api="T:WpfApp.Proxy.BaseInterceptor" />
        <element api="T:WpfApp.Proxy.BaseInterceptorImpl" />
        <element api="T:WpfApp.Proxy.ProxyUtils" />
        <element api="T:WpfApp.Proxy.ProxyUtilsBase" />
        <element api="T:WpfApp.Proxy.ProxyUtilsEvents" />
        <element api="T:WpfApp.Proxy.InvocationEventArgs" />
        <element api="T:WpfApp.Proxy.BasicLoggingInterceptor" />
        <element api="T:WpfApp.Proxy.BuilderInterceptor" />
        <element api="T:WpfApp.Proxy.ContainerBaseInterceptor" />
        <element api="T:WpfApp.Proxy.LoggerInterceptor" />
        <element api="T:WpfApp.Proxy.ProxyGenerationHook" />
        <element api="T:WpfApp.Proxy.RegistryInterceptor" />
      </elements>
    </api>
    <api id="T:WpfApp.Proxy.BaseInterceptor">
      <apidata name="BaseInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:WpfApp.Proxy.BaseInterceptorImpl" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </implements>
      <elements>
        <element api="F:WpfApp.Proxy.BaseInterceptor.Write" />
        <element api="F:WpfApp.Proxy.BaseInterceptor.WriteLine" />
        <element api="M:WpfApp.Proxy.BaseInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)" />
        <element api="M:WpfApp.Proxy.BaseInterceptor.DumpInvocation(Castle.DynamicProxy.IInvocation,System.Int32)" />
        <element api="M:WpfApp.Proxy.BaseInterceptor.FormatInvocation(Castle.DynamicProxy.IInvocation,System.String)" />
        <element api="M:WpfApp.Proxy.BaseInterceptor.DumpReturnValue(Castle.DynamicProxy.IInvocation,System.Int32,System.Boolean)" />
        <element api="M:WpfApp.Proxy.BaseInterceptor.FormatTyp(System.Type)" />
        <element api="M:WpfApp.Proxy.BaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="P:WpfApp.Proxy.BaseInterceptor.ProxyGenerator" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="48" />
      <parameters>
        <parameter name="proxyGenerator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptor.DumpInvocation(Castle.DynamicProxy.IInvocation,System.Int32)">
      <apidata name="DumpInvocation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="69" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
        <parameter name="callDepth">
          <type api="T:System.Int32" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptor.DumpReturnValue(Castle.DynamicProxy.IInvocation,System.Int32,System.Boolean)">
      <apidata name="DumpReturnValue" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="164" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
        <parameter name="callDepth">
          <type api="T:System.Int32" ref="false" />
        </parameter>
        <parameter name="continuation">
          <type api="T:System.Boolean" ref="false" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptor.FormatInvocation(Castle.DynamicProxy.IInvocation,System.String)">
      <apidata name="FormatInvocation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="96" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
        <parameter name="c">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptor.FormatTyp(System.Type)">
      <apidata name="FormatTyp" group="member" subgroup="method" />
      <memberdata visibility="family" static="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="231" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Proxy.BaseInterceptor.ProxyGenerator">
      <apidata name="ProxyGenerator" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="43" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_ProxyGenerator" />
      <returns>
        <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Proxy.BaseInterceptor.Write">
      <apidata name="Write" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Proxy.BaseInterceptor.WriteLine">
      <apidata name="WriteLine" group="member" subgroup="field" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Action`1" ref="true">
          <specialization>
            <type api="T:System.String" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.BaseInterceptorImpl">
      <apidata name="BaseInterceptorImpl" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Proxy.BaseInterceptorImpl.#ctor(System.Action{System.String},Castle.DynamicProxy.ProxyGenerator)" />
        <element api="M:WpfApp.Proxy.BaseInterceptorImpl.Intercept(Castle.DynamicProxy.IInvocation)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptorImpl.#ctor(System.Action{System.String},Castle.DynamicProxy.ProxyGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="288" />
      <parameters>
        <parameter name="out">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="generator" optional="true">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptorImpl" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BaseInterceptorImpl.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="306" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:WpfApp.Proxy.BaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:WpfApp.Proxy.BaseInterceptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BaseInterceptorImpl" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.BasicLoggingInterceptor">
      <apidata name="BasicLoggingInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/BasicLoggingInterceptor.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Proxy.BasicLoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="M:WpfApp.Proxy.BasicLoggingInterceptor.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BasicLoggingInterceptor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/BasicLoggingInterceptor.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BasicLoggingInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BasicLoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/BasicLoggingInterceptor.cs" startLine="30" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BasicLoggingInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.BuilderInterceptor">
      <apidata name="BuilderInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/BuilderInterceptor.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Proxy.BuilderInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="M:WpfApp.Proxy.BuilderInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)" />
        <element api="P:WpfApp.Proxy.BuilderInterceptor.Invocations" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BuilderInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/BuilderInterceptor.cs" startLine="26" />
      <parameters>
        <parameter name="generator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BuilderInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.BuilderInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/BuilderInterceptor.cs" startLine="33" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:WpfApp.Proxy.ContainerBaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BuilderInterceptor" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Proxy.BuilderInterceptor.Invocations">
      <apidata name="Invocations" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/BuilderInterceptor.cs" startLine="26" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Invocations" />
      <returns>
        <type api="T:System.Collections.Generic.List`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Core.Model.MethodInvocation" ref="true" />
          </specialization>
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.BuilderInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.ContainerBaseInterceptor">
      <apidata name="ContainerBaseInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ContainerBaseInterceptor.cs" />
      <typedata visibility="public" abstract="true" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:WpfApp.Proxy.BuilderInterceptor" ref="true" />
          <type api="T:WpfApp.Proxy.RegistryInterceptor" ref="true" />
        </descendents>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Proxy.ContainerBaseInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)" />
        <element api="M:WpfApp.Proxy.ContainerBaseInterceptor.DumpDelegate(System.Delegate,System.String)" />
        <element api="M:WpfApp.Proxy.ContainerBaseInterceptor.NameForType(System.Type)" />
        <element api="M:WpfApp.Proxy.ContainerBaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="P:WpfApp.Proxy.ContainerBaseInterceptor.Generator" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ContainerBaseInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Proxy/ContainerBaseInterceptor.cs" startLine="39" />
      <parameters>
        <parameter name="generator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ContainerBaseInterceptor.DumpDelegate(System.Delegate,System.String)">
      <apidata name="DumpDelegate" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ContainerBaseInterceptor.cs" startLine="47" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="d">
          <type api="T:System.Delegate" ref="true" />
        </parameter>
        <parameter name="prefix" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.String" ref="true" />
            <value />
          </argument>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Proxy.ContainerBaseInterceptor.Generator">
      <apidata name="Generator" group="member" subgroup="property" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ContainerBaseInterceptor.cs" startLine="34" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Generator" />
      <returns>
        <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ContainerBaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ContainerBaseInterceptor.cs" />
      <proceduredata abstract="true" virtual="true" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ContainerBaseInterceptor.NameForType(System.Type)">
      <apidata name="NameForType" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ContainerBaseInterceptor.cs" startLine="86" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="myType">
          <type api="T:System.Type" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.InvocationEventArgs">
      <apidata name="InvocationEventArgs" group="type" subgroup="class" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="F:WpfApp.Proxy.InvocationEventArgs.formatted" />
        <element api="F:WpfApp.Proxy.InvocationEventArgs.methodInfo" />
        <element api="M:WpfApp.Proxy.InvocationEventArgs.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.InvocationEventArgs.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.InvocationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Proxy.InvocationEventArgs.formatted">
      <apidata name="formatted" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.InvocationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Proxy.InvocationEventArgs.methodInfo">
      <apidata name="methodInfo" group="member" subgroup="field" />
      <memberdata visibility="public" />
      <fielddata literal="false" initonly="false" serialized="true" />
      <returns>
        <type api="T:System.Reflection.MethodInfo" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.InvocationEventArgs" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.LoggerFactoryHook">
      <apidata name="LoggerFactoryHook" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/LoggerFactoryHook.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Proxy.LoggerFactoryHook.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)" />
        <element api="M:WpfApp.Proxy.LoggerFactoryHook.MethodsInspected" />
        <element api="M:WpfApp.Proxy.LoggerFactoryHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)" />
        <element api="M:WpfApp.Proxy.LoggerFactoryHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerFactoryHook.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/LoggerFactoryHook.cs" startLine="20" />
      <parameters>
        <parameter name="useLogMethod">
          <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
            <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerFactoryHook" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerFactoryHook.MethodsInspected">
      <apidata name="MethodsInspected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerFactoryHook.cs" startLine="29" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Castle.DynamicProxy.IProxyGenerationHook.MethodsInspected">
          <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerFactoryHook" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerFactoryHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
      <apidata name="NonProxyableMemberNotification" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerFactoryHook.cs" startLine="46" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IProxyGenerationHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
          <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerFactoryHook" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerFactoryHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
      <apidata name="ShouldInterceptMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerFactoryHook.cs" startLine="58" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="methodInfo">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Castle.DynamicProxy.IProxyGenerationHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
          <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerFactoryHook" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.LoggerInterceptor">
      <apidata name="LoggerInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/LoggerInterceptor.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Proxy.LoggerInterceptor.#ctor" />
        <element api="M:WpfApp.Proxy.LoggerInterceptor.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)" />
        <element api="M:WpfApp.Proxy.LoggerInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="P:WpfApp.Proxy.LoggerInterceptor.UseLogMethod" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerInterceptor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/LoggerInterceptor.cs" startLine="19" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerInterceptor.#ctor(WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/LoggerInterceptor.cs" startLine="28" />
      <parameters>
        <parameter name="useLogMethod">
          <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
            <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerInterceptor.cs" startLine="44" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerInterceptor" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Proxy.LoggerInterceptor.UseLogMethod">
      <apidata name="UseLogMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerInterceptor.cs" startLine="37" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseLogMethod" />
      <returns>
        <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
          <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.LoggerProxyHelper">
      <apidata name="LoggerProxyHelper" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Proxy.LoggerProxyHelper.#ctor(Castle.DynamicProxy.ProxyGenerator)" />
        <element api="M:WpfApp.Proxy.LoggerProxyHelper.#ctor(Castle.DynamicProxy.ProxyGenerator,WpfApp.Core.Logging.LogDelegates.LogMethod)" />
        <element api="M:WpfApp.Proxy.LoggerProxyHelper.CreateLogFactory(NLog.LogFactory)" />
        <element api="M:WpfApp.Proxy.LoggerProxyHelper.GetCurrentClassLogger(System.String)" />
        <element api="P:WpfApp.Proxy.LoggerProxyHelper.Generator" />
        <element api="P:WpfApp.Proxy.LoggerProxyHelper.UseLogMethod" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerProxyHelper.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" startLine="21" />
      <parameters>
        <parameter name="generator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerProxyHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerProxyHelper.#ctor(Castle.DynamicProxy.ProxyGenerator,WpfApp.Core.Logging.LogDelegates.LogMethod)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" startLine="27" />
      <parameters>
        <parameter name="generator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
        <parameter name="logMethod">
          <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
            <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
          </type>
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerProxyHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerProxyHelper.CreateLogFactory(NLog.LogFactory)">
      <apidata name="CreateLogFactory" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" startLine="51" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="logFactory">
          <type api="T:NLog.LogFactory" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:NLog.LogFactory" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerProxyHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Proxy.LoggerProxyHelper.Generator">
      <apidata name="Generator" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" startLine="37" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_Generator" />
      <returns>
        <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerProxyHelper" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggerProxyHelper.GetCurrentClassLogger(System.String)">
      <apidata name="GetCurrentClassLogger" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" startLine="79" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="path" optional="true">
          <type api="T:System.String" ref="true" />
          <argument>
            <type api="T:System.Object" ref="true" />
            <nullValue />
          </argument>
        </parameter>
      </parameters>
      <returns>
        <type api="T:NLog.Logger" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerProxyHelper" ref="true" />
      </containers>
    </api>
    <api id="P:WpfApp.Proxy.LoggerProxyHelper.UseLogMethod">
      <apidata name="UseLogMethod" group="member" subgroup="property" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggerProxyHelper.cs" startLine="43" />
      <proceduredata virtual="false" />
      <propertydata get="true" />
      <getter name="get_UseLogMethod" />
      <returns>
        <type api="T:WpfApp.Core.Logging.LogDelegates.LogMethod" ref="true">
          <type api="T:WpfApp.Core.Logging.LogDelegates" ref="true" />
        </type>
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggerProxyHelper" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.LoggingInterceptor">
      <apidata name="LoggingInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/LoggingInterceptor.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Proxy.LoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="M:WpfApp.Proxy.LoggingInterceptor.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggingInterceptor.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/LoggingInterceptor.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggingInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.LoggingInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/LoggingInterceptor.cs" startLine="17" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.LoggingInterceptor" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.ProxyGenerationHook">
      <apidata name="ProxyGenerationHook" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ProxyGenerationHook.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <implements>
        <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
      </implements>
      <elements>
        <element api="M:WpfApp.Proxy.ProxyGenerationHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)" />
        <element api="M:WpfApp.Proxy.ProxyGenerationHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)" />
        <element api="M:WpfApp.Proxy.ProxyGenerationHook.MethodsInspected" />
        <element api="M:WpfApp.Proxy.ProxyGenerationHook.#ctor" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyGenerationHook.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/ProxyGenerationHook.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyGenerationHook" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyGenerationHook.MethodsInspected">
      <apidata name="MethodsInspected" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyGenerationHook.cs" startLine="65" />
      <proceduredata virtual="true" final="true" />
      <implements>
        <member api="M:Castle.DynamicProxy.IProxyGenerationHook.MethodsInspected">
          <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyGenerationHook" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyGenerationHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
      <apidata name="NonProxyableMemberNotification" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyGenerationHook.cs" startLine="42" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MemberInfo" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IProxyGenerationHook.NonProxyableMemberNotification(System.Type,System.Reflection.MemberInfo)">
          <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyGenerationHook" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyGenerationHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
      <apidata name="ShouldInterceptMethod" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyGenerationHook.cs" startLine="55" />
      <proceduredata virtual="true" final="true" />
      <parameters>
        <parameter name="type">
          <type api="T:System.Type" ref="true" />
        </parameter>
        <parameter name="memberInfo">
          <type api="T:System.Reflection.MethodInfo" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Boolean" ref="false" />
      </returns>
      <implements>
        <member api="M:Castle.DynamicProxy.IProxyGenerationHook.ShouldInterceptMethod(System.Type,System.Reflection.MethodInfo)">
          <type api="T:Castle.DynamicProxy.IProxyGenerationHook" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyGenerationHook" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.ProxyUtils">
      <apidata name="ProxyUtils" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
          <type api="T:WpfApp.Proxy.ProxyUtilsEvents" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Proxy.ProxyUtils.#ctor(System.Action{System.String},Castle.DynamicProxy.IInterceptor)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtils.#ctor(System.Action{System.String},Castle.DynamicProxy.IInterceptor)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="509" />
      <parameters>
        <parameter name="writeOut">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="interceptor">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtils" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.ProxyUtilsBase">
      <apidata name="ProxyUtilsBase" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:WpfApp.Proxy.ProxyUtilsEvents" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:WpfApp.Proxy.ProxyUtils" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="F:WpfApp.Proxy.ProxyUtilsBase.ProxyGenerator" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.#ctor(System.Action{System.String},Castle.DynamicProxy.IInterceptor)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateInterceptor(System.Action{System.String})" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.TransformXaml(System.Object)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.TransformXaml2(System.String)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlXmlWriter(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlReader(System.Xaml.XamlSchemaContext)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlObjectReader(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlObjectReaderSettings" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXmlWriter(System.IO.StringWriter)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXmlReader(System.String)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateStringWriter" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlSchemaContext" />
        <element api="M:WpfApp.Proxy.ProxyUtilsBase.CreateProxy(System.Action{System.String},Castle.DynamicProxy.IInterceptor)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.#ctor(System.Action{System.String},Castle.DynamicProxy.IInterceptor)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="family" special="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="532" />
      <parameters>
        <parameter name="writeOut">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="interceptor">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateInterceptor(System.Action{System.String})">
      <apidata name="CreateInterceptor" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="543" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="out">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
      </parameters>
      <returns>
        <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateProxy(System.Action{System.String},Castle.DynamicProxy.IInterceptor)">
      <apidata name="CreateProxy" group="member" subgroup="method" />
      <memberdata visibility="public" static="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="742" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="writeLine">
          <type api="T:System.Action`1" ref="true">
            <specialization>
              <type api="T:System.String" ref="true" />
            </specialization>
          </type>
        </parameter>
        <parameter name="interceptor">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:WpfApp.Proxy.ProxyUtils" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateStringWriter">
      <apidata name="CreateStringWriter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="717" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.IO.StringWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlObjectReader(System.Object,System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectReaderSettings)">
      <apidata name="CreateXamlObjectReader" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="663" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xaml.XamlSchemaContext" ref="true" />
        </parameter>
        <parameter name="settings">
          <type api="T:System.Xaml.XamlObjectReaderSettings" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlObjectReaderSettings">
      <apidata name="CreateXamlObjectReaderSettings" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="677" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xaml.XamlObjectReaderSettings" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlReader(System.Xaml.XamlSchemaContext)">
      <apidata name="CreateXamlReader" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="635" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="context">
          <type api="T:System.Xaml.XamlSchemaContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Windows.Markup.XamlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlSchemaContext">
      <apidata name="CreateXamlSchemaContext" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="727" />
      <proceduredata virtual="true" />
      <returns>
        <type api="T:System.Xaml.XamlSchemaContext" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXamlXmlWriter(System.Xml.XmlWriter,System.Xaml.XamlSchemaContext)">
      <apidata name="CreateXamlXmlWriter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="615" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="xmlWriterProxy">
          <type api="T:System.Xml.XmlWriter" ref="true" />
        </parameter>
        <parameter name="context">
          <type api="T:System.Xaml.XamlSchemaContext" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xaml.XamlXmlWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXmlReader(System.String)">
      <apidata name="CreateXmlReader" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="705" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="inputUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlReader" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.CreateXmlWriter(System.IO.StringWriter)">
      <apidata name="CreateXmlWriter" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="693" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="stringWriter">
          <type api="T:System.IO.StringWriter" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Xml.XmlWriter" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="F:WpfApp.Proxy.ProxyUtilsBase.ProxyGenerator">
      <apidata name="ProxyGenerator" group="member" subgroup="field" />
      <memberdata visibility="family" static="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <fielddata literal="false" initonly="true" serialized="true" />
      <returns>
        <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.TransformXaml(System.Object)">
      <apidata name="TransformXaml" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="552" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="instance">
          <type api="T:System.Object" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.String" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsBase.TransformXaml2(System.String)">
      <apidata name="TransformXaml2" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="582" />
      <proceduredata virtual="false" />
      <parameters>
        <parameter name="inputUri">
          <type api="T:System.String" ref="true" />
        </parameter>
      </parameters>
      <returns>
        <type api="T:System.Object" ref="true" />
      </returns>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.ProxyUtilsEvents">
      <apidata name="ProxyUtilsEvents" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:System.Object" ref="true" />
        </ancestors>
        <descendents>
          <type api="T:WpfApp.Proxy.ProxyUtilsBase" ref="true" />
        </descendents>
      </family>
      <elements>
        <element api="M:WpfApp.Proxy.ProxyUtilsEvents.OnBeginInvocation(WpfApp.Proxy.InvocationEventArgs)" />
        <element api="M:WpfApp.Proxy.ProxyUtilsEvents.#ctor" />
        <element api="E:WpfApp.Proxy.ProxyUtilsEvents.BeginInvocation" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsEvents.#ctor">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsEvents" ref="true" />
      </containers>
    </api>
    <api id="E:WpfApp.Proxy.ProxyUtilsEvents.BeginInvocation">
      <apidata name="BeginInvocation" group="member" subgroup="event" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" />
      <proceduredata virtual="false" />
      <eventdata add="true" remove="true" />
      <adder name="add_BeginInvocation" />
      <remover name="remove_BeginInvocation" />
      <eventhandler>
        <type api="T:System.EventHandler`1" ref="true">
          <specialization>
            <type api="T:WpfApp.Proxy.InvocationEventArgs" ref="true" />
          </specialization>
        </type>
      </eventhandler>
      <eventargs>
        <type api="T:WpfApp.Proxy.InvocationEventArgs" ref="true" />
      </eventargs>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsEvents" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.ProxyUtilsEvents.OnBeginInvocation(WpfApp.Proxy.InvocationEventArgs)">
      <apidata name="OnBeginInvocation" group="member" subgroup="method" />
      <memberdata visibility="family" />
      <sourceContext file="WpfApp/Proxy/ProxyUtils.cs" startLine="778" />
      <proceduredata virtual="true" />
      <parameters>
        <parameter name="e">
          <type api="T:WpfApp.Proxy.InvocationEventArgs" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.ProxyUtilsEvents" ref="true" />
      </containers>
    </api>
    <api id="T:WpfApp.Proxy.RegistryInterceptor">
      <apidata name="RegistryInterceptor" group="type" subgroup="class" />
      <sourceContext file="WpfApp/Proxy/RegistryInterceptor.cs" />
      <typedata visibility="public" serializable="false" />
      <family>
        <ancestors>
          <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
          <type api="T:System.Object" ref="true" />
        </ancestors>
      </family>
      <elements>
        <element api="M:WpfApp.Proxy.RegistryInterceptor.Intercept(Castle.DynamicProxy.IInvocation)" />
        <element api="M:WpfApp.Proxy.RegistryInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)" />
      </elements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.RegistryInterceptor.#ctor(Castle.DynamicProxy.ProxyGenerator)">
      <apidata name=".ctor" group="member" subgroup="constructor" />
      <memberdata visibility="public" special="true" />
      <sourceContext file="WpfApp/Proxy/RegistryInterceptor.cs" startLine="62" />
      <parameters>
        <parameter name="generator">
          <type api="T:Castle.DynamicProxy.ProxyGenerator" ref="true" />
        </parameter>
      </parameters>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.RegistryInterceptor" ref="true" />
      </containers>
    </api>
    <api id="M:WpfApp.Proxy.RegistryInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
      <apidata name="Intercept" group="member" subgroup="method" />
      <memberdata visibility="public" />
      <sourceContext file="WpfApp/Proxy/RegistryInterceptor.cs" startLine="32" />
      <proceduredata virtual="true" />
      <overrides>
        <member api="M:WpfApp.Proxy.ContainerBaseInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:WpfApp.Proxy.ContainerBaseInterceptor" ref="true" />
        </member>
      </overrides>
      <parameters>
        <parameter name="invocation">
          <type api="T:Castle.DynamicProxy.IInvocation" ref="true" />
        </parameter>
      </parameters>
      <implements>
        <member api="M:Castle.DynamicProxy.IInterceptor.Intercept(Castle.DynamicProxy.IInvocation)">
          <type api="T:Castle.DynamicProxy.IInterceptor" ref="true" />
        </member>
      </implements>
      <containers>
        <library assembly="WpfApp" module="WpfApp" kind="WindowsApplication" />
        <namespace api="N:WpfApp.Proxy" />
        <type api="T:WpfApp.Proxy.RegistryInterceptor" ref="true" />
      </containers>
    </api>
  </apis>
</reflection>